(lang dune 3.9)
(name coq-core)
(version dev)
(sections
 (lib /home/jesse/hprop_set_1/UniMath/lib/coq-core)
 (libexec /home/jesse/hprop_set_1/UniMath/lib/coq-core)
 (bin /home/jesse/hprop_set_1/UniMath/bin)
 (share_root /home/jesse/hprop_set_1/UniMath/share)
 (doc /home/jesse/hprop_set_1/UniMath/share/doc/coq-core)
 (stublibs /home/jesse/hprop_set_1/UniMath/lib/stublibs)
 (man /home/jesse/hprop_set_1/UniMath/share/man))
(files
 (lib
  (META
   boot/boot.a
   boot/boot.cma
   boot/boot.cmi
   boot/boot.cmt
   boot/boot.cmx
   boot/boot.cmxa
   boot/boot.ml
   boot/boot__Env.cmi
   boot/boot__Env.cmt
   boot/boot__Env.cmti
   boot/boot__Env.cmx
   boot/boot__Path.cmi
   boot/boot__Path.cmt
   boot/boot__Path.cmx
   boot/boot__Usage.cmi
   boot/boot__Usage.cmt
   boot/boot__Usage.cmti
   boot/boot__Usage.cmx
   boot/boot__Util.cmi
   boot/boot__Util.cmt
   boot/boot__Util.cmx
   boot/env.ml
   boot/env.mli
   boot/path.ml
   boot/usage.ml
   boot/usage.mli
   boot/util.ml
   clib/cArray.cmi
   clib/cArray.cmt
   clib/cArray.cmti
   clib/cArray.cmx
   clib/cArray.ml
   clib/cArray.mli
   clib/cEphemeron.cmi
   clib/cEphemeron.cmt
   clib/cEphemeron.cmti
   clib/cEphemeron.cmx
   clib/cEphemeron.ml
   clib/cEphemeron.mli
   clib/cList.cmi
   clib/cList.cmt
   clib/cList.cmti
   clib/cList.cmx
   clib/cList.ml
   clib/cList.mli
   clib/cMap.cmi
   clib/cMap.cmt
   clib/cMap.cmti
   clib/cMap.cmx
   clib/cMap.ml
   clib/cMap.mli
   clib/cObj.cmi
   clib/cObj.cmt
   clib/cObj.cmti
   clib/cObj.cmx
   clib/cObj.ml
   clib/cObj.mli
   clib/cSet.cmi
   clib/cSet.cmt
   clib/cSet.cmti
   clib/cSet.cmx
   clib/cSet.ml
   clib/cSet.mli
   clib/cSig.cmi
   clib/cSig.cmti
   clib/cSig.mli
   clib/cString.cmi
   clib/cString.cmt
   clib/cString.cmti
   clib/cString.cmx
   clib/cString.ml
   clib/cString.mli
   clib/cThread.cmi
   clib/cThread.cmt
   clib/cThread.cmti
   clib/cThread.cmx
   clib/cThread.ml
   clib/cThread.mli
   clib/cUnix.cmi
   clib/cUnix.cmt
   clib/cUnix.cmti
   clib/cUnix.cmx
   clib/cUnix.ml
   clib/cUnix.mli
   clib/clib.a
   clib/clib.cma
   clib/clib.cmxa
   clib/diff2.cmi
   clib/diff2.cmt
   clib/diff2.cmti
   clib/diff2.cmx
   clib/diff2.ml
   clib/diff2.mli
   clib/dyn.cmi
   clib/dyn.cmt
   clib/dyn.cmti
   clib/dyn.cmx
   clib/dyn.ml
   clib/dyn.mli
   clib/exninfo.cmi
   clib/exninfo.cmt
   clib/exninfo.cmti
   clib/exninfo.cmx
   clib/exninfo.ml
   clib/exninfo.mli
   clib/hMap.cmi
   clib/hMap.cmt
   clib/hMap.cmti
   clib/hMap.cmx
   clib/hMap.ml
   clib/hMap.mli
   clib/hashcons.cmi
   clib/hashcons.cmt
   clib/hashcons.cmti
   clib/hashcons.cmx
   clib/hashcons.ml
   clib/hashcons.mli
   clib/hashset.cmi
   clib/hashset.cmt
   clib/hashset.cmti
   clib/hashset.cmx
   clib/hashset.ml
   clib/hashset.mli
   clib/heap.cmi
   clib/heap.cmt
   clib/heap.cmti
   clib/heap.cmx
   clib/heap.ml
   clib/heap.mli
   clib/iStream.cmi
   clib/iStream.cmt
   clib/iStream.cmti
   clib/iStream.cmx
   clib/iStream.ml
   clib/iStream.mli
   clib/int.cmi
   clib/int.cmt
   clib/int.cmti
   clib/int.cmx
   clib/int.ml
   clib/int.mli
   clib/monad.cmi
   clib/monad.cmt
   clib/monad.cmti
   clib/monad.cmx
   clib/monad.ml
   clib/monad.mli
   clib/neList.cmi
   clib/neList.cmt
   clib/neList.cmti
   clib/neList.cmx
   clib/neList.ml
   clib/neList.mli
   clib/option.cmi
   clib/option.cmt
   clib/option.cmti
   clib/option.cmx
   clib/option.ml
   clib/option.mli
   clib/orderedType.cmi
   clib/orderedType.cmt
   clib/orderedType.cmti
   clib/orderedType.cmx
   clib/orderedType.ml
   clib/orderedType.mli
   clib/predicate.cmi
   clib/predicate.cmt
   clib/predicate.cmti
   clib/predicate.cmx
   clib/predicate.ml
   clib/predicate.mli
   clib/range.cmi
   clib/range.cmt
   clib/range.cmti
   clib/range.cmx
   clib/range.ml
   clib/range.mli
   clib/segmenttree.cmi
   clib/segmenttree.cmt
   clib/segmenttree.cmti
   clib/segmenttree.cmx
   clib/segmenttree.ml
   clib/segmenttree.mli
   clib/store.cmi
   clib/store.cmt
   clib/store.cmti
   clib/store.cmx
   clib/store.ml
   clib/store.mli
   clib/terminal.cmi
   clib/terminal.cmt
   clib/terminal.cmti
   clib/terminal.cmx
   clib/terminal.ml
   clib/terminal.mli
   clib/trie.cmi
   clib/trie.cmt
   clib/trie.cmti
   clib/trie.cmx
   clib/trie.ml
   clib/trie.mli
   clib/unicode.cmi
   clib/unicode.cmt
   clib/unicode.cmti
   clib/unicode.cmx
   clib/unicode.ml
   clib/unicode.mli
   clib/unicodetable.cmi
   clib/unicodetable.cmt
   clib/unicodetable.cmx
   clib/unicodetable.ml
   clib/unionfind.cmi
   clib/unionfind.cmt
   clib/unionfind.cmti
   clib/unionfind.cmx
   clib/unionfind.ml
   clib/unionfind.mli
   config/config.a
   config/config.cma
   config/config.cmxa
   config/coq_config.cmi
   config/coq_config.cmt
   config/coq_config.cmti
   config/coq_config.cmx
   config/coq_config.ml
   config/coq_config.mli
   dune-package
   engine/eConstr.cmi
   engine/eConstr.cmt
   engine/eConstr.cmti
   engine/eConstr.cmx
   engine/eConstr.ml
   engine/eConstr.mli
   engine/engine.a
   engine/engine.cma
   engine/engine.cmxa
   engine/evar_kinds.cmi
   engine/evar_kinds.cmt
   engine/evar_kinds.cmti
   engine/evar_kinds.cmx
   engine/evar_kinds.ml
   engine/evar_kinds.mli
   engine/evarutil.cmi
   engine/evarutil.cmt
   engine/evarutil.cmti
   engine/evarutil.cmx
   engine/evarutil.ml
   engine/evarutil.mli
   engine/evd.cmi
   engine/evd.cmt
   engine/evd.cmti
   engine/evd.cmx
   engine/evd.ml
   engine/evd.mli
   engine/ftactic.cmi
   engine/ftactic.cmt
   engine/ftactic.cmti
   engine/ftactic.cmx
   engine/ftactic.ml
   engine/ftactic.mli
   engine/logic_monad.cmi
   engine/logic_monad.cmt
   engine/logic_monad.cmti
   engine/logic_monad.cmx
   engine/logic_monad.ml
   engine/logic_monad.mli
   engine/namegen.cmi
   engine/namegen.cmt
   engine/namegen.cmti
   engine/namegen.cmx
   engine/namegen.ml
   engine/namegen.mli
   engine/nameops.cmi
   engine/nameops.cmt
   engine/nameops.cmti
   engine/nameops.cmx
   engine/nameops.ml
   engine/nameops.mli
   engine/proofview.cmi
   engine/proofview.cmt
   engine/proofview.cmti
   engine/proofview.cmx
   engine/proofview.ml
   engine/proofview.mli
   engine/proofview_monad.cmi
   engine/proofview_monad.cmt
   engine/proofview_monad.cmti
   engine/proofview_monad.cmx
   engine/proofview_monad.ml
   engine/proofview_monad.mli
   engine/termops.cmi
   engine/termops.cmt
   engine/termops.cmti
   engine/termops.cmx
   engine/termops.ml
   engine/termops.mli
   engine/uState.cmi
   engine/uState.cmt
   engine/uState.cmti
   engine/uState.cmx
   engine/uState.ml
   engine/uState.mli
   engine/univGen.cmi
   engine/univGen.cmt
   engine/univGen.cmti
   engine/univGen.cmx
   engine/univGen.ml
   engine/univGen.mli
   engine/univMinim.cmi
   engine/univMinim.cmt
   engine/univMinim.cmti
   engine/univMinim.cmx
   engine/univMinim.ml
   engine/univMinim.mli
   engine/univNames.cmi
   engine/univNames.cmt
   engine/univNames.cmti
   engine/univNames.cmx
   engine/univNames.ml
   engine/univNames.mli
   engine/univProblem.cmi
   engine/univProblem.cmt
   engine/univProblem.cmti
   engine/univProblem.cmx
   engine/univProblem.ml
   engine/univProblem.mli
   engine/univSubst.cmi
   engine/univSubst.cmt
   engine/univSubst.cmti
   engine/univSubst.cmx
   engine/univSubst.ml
   engine/univSubst.mli
   gramlib/gramext.ml
   gramlib/gramext.mli
   gramlib/gramlib.a
   gramlib/gramlib.cma
   gramlib/gramlib.cmi
   gramlib/gramlib.cmt
   gramlib/gramlib.cmx
   gramlib/gramlib.cmxa
   gramlib/gramlib.ml
   gramlib/gramlib__Gramext.cmi
   gramlib/gramlib__Gramext.cmt
   gramlib/gramlib__Gramext.cmti
   gramlib/gramlib__Gramext.cmx
   gramlib/gramlib__Grammar.cmi
   gramlib/gramlib__Grammar.cmt
   gramlib/gramlib__Grammar.cmti
   gramlib/gramlib__Grammar.cmx
   gramlib/gramlib__Plexing.cmi
   gramlib/gramlib__Plexing.cmt
   gramlib/gramlib__Plexing.cmti
   gramlib/gramlib__Plexing.cmx
   gramlib/grammar.ml
   gramlib/grammar.mli
   gramlib/plexing.ml
   gramlib/plexing.mli
   interp/abbreviation.cmi
   interp/abbreviation.cmt
   interp/abbreviation.cmti
   interp/abbreviation.cmx
   interp/abbreviation.ml
   interp/abbreviation.mli
   interp/constrexpr.cmi
   interp/constrexpr.cmt
   interp/constrexpr.cmx
   interp/constrexpr.ml
   interp/constrexpr_ops.cmi
   interp/constrexpr_ops.cmt
   interp/constrexpr_ops.cmti
   interp/constrexpr_ops.cmx
   interp/constrexpr_ops.ml
   interp/constrexpr_ops.mli
   interp/constrextern.cmi
   interp/constrextern.cmt
   interp/constrextern.cmti
   interp/constrextern.cmx
   interp/constrextern.ml
   interp/constrextern.mli
   interp/constrintern.cmi
   interp/constrintern.cmt
   interp/constrintern.cmti
   interp/constrintern.cmx
   interp/constrintern.ml
   interp/constrintern.mli
   interp/decls.cmi
   interp/decls.cmt
   interp/decls.cmti
   interp/decls.cmx
   interp/decls.ml
   interp/decls.mli
   interp/deprecation.cmi
   interp/deprecation.cmt
   interp/deprecation.cmti
   interp/deprecation.cmx
   interp/deprecation.ml
   interp/deprecation.mli
   interp/dumpglob.cmi
   interp/dumpglob.cmt
   interp/dumpglob.cmti
   interp/dumpglob.cmx
   interp/dumpglob.ml
   interp/dumpglob.mli
   interp/genintern.cmi
   interp/genintern.cmt
   interp/genintern.cmti
   interp/genintern.cmx
   interp/genintern.ml
   interp/genintern.mli
   interp/impargs.cmi
   interp/impargs.cmt
   interp/impargs.cmti
   interp/impargs.cmx
   interp/impargs.ml
   interp/impargs.mli
   interp/implicit_quantifiers.cmi
   interp/implicit_quantifiers.cmt
   interp/implicit_quantifiers.cmti
   interp/implicit_quantifiers.cmx
   interp/implicit_quantifiers.ml
   interp/implicit_quantifiers.mli
   interp/interp.a
   interp/interp.cma
   interp/interp.cmxa
   interp/modintern.cmi
   interp/modintern.cmt
   interp/modintern.cmti
   interp/modintern.cmx
   interp/modintern.ml
   interp/modintern.mli
   interp/notation.cmi
   interp/notation.cmt
   interp/notation.cmti
   interp/notation.cmx
   interp/notation.ml
   interp/notation.mli
   interp/notation_ops.cmi
   interp/notation_ops.cmt
   interp/notation_ops.cmti
   interp/notation_ops.cmx
   interp/notation_ops.ml
   interp/notation_ops.mli
   interp/notation_term.cmi
   interp/notation_term.cmt
   interp/notation_term.cmx
   interp/notation_term.ml
   interp/numTok.cmi
   interp/numTok.cmt
   interp/numTok.cmti
   interp/numTok.cmx
   interp/numTok.ml
   interp/numTok.mli
   interp/reserve.cmi
   interp/reserve.cmt
   interp/reserve.cmti
   interp/reserve.cmx
   interp/reserve.ml
   interp/reserve.mli
   interp/smartlocate.cmi
   interp/smartlocate.cmt
   interp/smartlocate.cmti
   interp/smartlocate.cmx
   interp/smartlocate.ml
   interp/smartlocate.mli
   interp/stdarg.cmi
   interp/stdarg.cmt
   interp/stdarg.cmti
   interp/stdarg.cmx
   interp/stdarg.ml
   interp/stdarg.mli
   kernel/cClosure.cmi
   kernel/cClosure.cmt
   kernel/cClosure.cmti
   kernel/cClosure.cmx
   kernel/cClosure.ml
   kernel/cClosure.mli
   kernel/cPrimitives.cmi
   kernel/cPrimitives.cmt
   kernel/cPrimitives.cmti
   kernel/cPrimitives.cmx
   kernel/cPrimitives.ml
   kernel/cPrimitives.mli
   kernel/constr.cmi
   kernel/constr.cmt
   kernel/constr.cmti
   kernel/constr.cmx
   kernel/constr.ml
   kernel/constr.mli
   kernel/context.cmi
   kernel/context.cmt
   kernel/context.cmti
   kernel/context.cmx
   kernel/context.ml
   kernel/context.mli
   kernel/conv_oracle.cmi
   kernel/conv_oracle.cmt
   kernel/conv_oracle.cmti
   kernel/conv_oracle.cmx
   kernel/conv_oracle.ml
   kernel/conv_oracle.mli
   kernel/cooking.cmi
   kernel/cooking.cmt
   kernel/cooking.cmti
   kernel/cooking.cmx
   kernel/cooking.ml
   kernel/cooking.mli
   kernel/declarations.cmi
   kernel/declarations.cmt
   kernel/declarations.cmx
   kernel/declarations.ml
   kernel/declareops.cmi
   kernel/declareops.cmt
   kernel/declareops.cmti
   kernel/declareops.cmx
   kernel/declareops.ml
   kernel/declareops.mli
   kernel/discharge.cmi
   kernel/discharge.cmt
   kernel/discharge.cmti
   kernel/discharge.cmx
   kernel/discharge.ml
   kernel/discharge.mli
   kernel/entries.cmi
   kernel/entries.cmt
   kernel/entries.cmx
   kernel/entries.ml
   kernel/environ.cmi
   kernel/environ.cmt
   kernel/environ.cmti
   kernel/environ.cmx
   kernel/environ.ml
   kernel/environ.mli
   kernel/esubst.cmi
   kernel/esubst.cmt
   kernel/esubst.cmti
   kernel/esubst.cmx
   kernel/esubst.ml
   kernel/esubst.mli
   kernel/evar.cmi
   kernel/evar.cmt
   kernel/evar.cmti
   kernel/evar.cmx
   kernel/evar.ml
   kernel/evar.mli
   kernel/float64.cmi
   kernel/float64.cmt
   kernel/float64.cmti
   kernel/float64.cmx
   kernel/float64.ml
   kernel/float64.mli
   kernel/float64_common.cmi
   kernel/float64_common.cmt
   kernel/float64_common.cmti
   kernel/float64_common.cmx
   kernel/float64_common.ml
   kernel/float64_common.mli
   kernel/indTyping.cmi
   kernel/indTyping.cmt
   kernel/indTyping.cmti
   kernel/indTyping.cmx
   kernel/indTyping.ml
   kernel/indTyping.mli
   kernel/indtypes.cmi
   kernel/indtypes.cmt
   kernel/indtypes.cmti
   kernel/indtypes.cmx
   kernel/indtypes.ml
   kernel/indtypes.mli
   kernel/inductive.cmi
   kernel/inductive.cmt
   kernel/inductive.cmti
   kernel/inductive.cmx
   kernel/inductive.ml
   kernel/inductive.mli
   kernel/inferCumulativity.cmi
   kernel/inferCumulativity.cmt
   kernel/inferCumulativity.cmti
   kernel/inferCumulativity.cmx
   kernel/inferCumulativity.ml
   kernel/inferCumulativity.mli
   kernel/kernel.a
   kernel/kernel.cma
   kernel/kernel.cmxa
   kernel/mod_subst.cmi
   kernel/mod_subst.cmt
   kernel/mod_subst.cmti
   kernel/mod_subst.cmx
   kernel/mod_subst.ml
   kernel/mod_subst.mli
   kernel/mod_typing.cmi
   kernel/mod_typing.cmt
   kernel/mod_typing.cmti
   kernel/mod_typing.cmx
   kernel/mod_typing.ml
   kernel/mod_typing.mli
   kernel/modops.cmi
   kernel/modops.cmt
   kernel/modops.cmti
   kernel/modops.cmx
   kernel/modops.ml
   kernel/modops.mli
   kernel/names.cmi
   kernel/names.cmt
   kernel/names.cmti
   kernel/names.cmx
   kernel/names.ml
   kernel/names.mli
   kernel/nativecode.cmi
   kernel/nativecode.cmt
   kernel/nativecode.cmti
   kernel/nativecode.cmx
   kernel/nativecode.ml
   kernel/nativecode.mli
   kernel/nativeconv.cmi
   kernel/nativeconv.cmt
   kernel/nativeconv.cmti
   kernel/nativeconv.cmx
   kernel/nativeconv.ml
   kernel/nativeconv.mli
   kernel/nativelambda.cmi
   kernel/nativelambda.cmt
   kernel/nativelambda.cmti
   kernel/nativelambda.cmx
   kernel/nativelambda.ml
   kernel/nativelambda.mli
   kernel/nativelib.cmi
   kernel/nativelib.cmt
   kernel/nativelib.cmti
   kernel/nativelib.cmx
   kernel/nativelib.ml
   kernel/nativelib.mli
   kernel/nativelibrary.cmi
   kernel/nativelibrary.cmt
   kernel/nativelibrary.cmti
   kernel/nativelibrary.cmx
   kernel/nativelibrary.ml
   kernel/nativelibrary.mli
   kernel/nativevalues.cmi
   kernel/nativevalues.cmt
   kernel/nativevalues.cmti
   kernel/nativevalues.cmx
   kernel/nativevalues.ml
   kernel/nativevalues.mli
   kernel/opaqueproof.cmi
   kernel/opaqueproof.cmt
   kernel/opaqueproof.cmti
   kernel/opaqueproof.cmx
   kernel/opaqueproof.ml
   kernel/opaqueproof.mli
   kernel/parray.cmi
   kernel/parray.cmt
   kernel/parray.cmti
   kernel/parray.cmx
   kernel/parray.ml
   kernel/parray.mli
   kernel/primred.cmi
   kernel/primred.cmt
   kernel/primred.cmti
   kernel/primred.cmx
   kernel/primred.ml
   kernel/primred.mli
   kernel/reduction.cmi
   kernel/reduction.cmt
   kernel/reduction.cmti
   kernel/reduction.cmx
   kernel/reduction.ml
   kernel/reduction.mli
   kernel/relevanceops.cmi
   kernel/relevanceops.cmt
   kernel/relevanceops.cmti
   kernel/relevanceops.cmx
   kernel/relevanceops.ml
   kernel/relevanceops.mli
   kernel/retroknowledge.cmi
   kernel/retroknowledge.cmt
   kernel/retroknowledge.cmti
   kernel/retroknowledge.cmx
   kernel/retroknowledge.ml
   kernel/retroknowledge.mli
   kernel/safe_typing.cmi
   kernel/safe_typing.cmt
   kernel/safe_typing.cmti
   kernel/safe_typing.cmx
   kernel/safe_typing.ml
   kernel/safe_typing.mli
   kernel/section.cmi
   kernel/section.cmt
   kernel/section.cmti
   kernel/section.cmx
   kernel/section.ml
   kernel/section.mli
   kernel/sorts.cmi
   kernel/sorts.cmt
   kernel/sorts.cmti
   kernel/sorts.cmx
   kernel/sorts.ml
   kernel/sorts.mli
   kernel/subtyping.cmi
   kernel/subtyping.cmt
   kernel/subtyping.cmti
   kernel/subtyping.cmx
   kernel/subtyping.ml
   kernel/subtyping.mli
   kernel/term.cmi
   kernel/term.cmt
   kernel/term.cmti
   kernel/term.cmx
   kernel/term.ml
   kernel/term.mli
   kernel/term_typing.cmi
   kernel/term_typing.cmt
   kernel/term_typing.cmti
   kernel/term_typing.cmx
   kernel/term_typing.ml
   kernel/term_typing.mli
   kernel/transparentState.cmi
   kernel/transparentState.cmt
   kernel/transparentState.cmti
   kernel/transparentState.cmx
   kernel/transparentState.ml
   kernel/transparentState.mli
   kernel/type_errors.cmi
   kernel/type_errors.cmt
   kernel/type_errors.cmti
   kernel/type_errors.cmx
   kernel/type_errors.ml
   kernel/type_errors.mli
   kernel/typeops.cmi
   kernel/typeops.cmt
   kernel/typeops.cmti
   kernel/typeops.cmx
   kernel/typeops.ml
   kernel/typeops.mli
   kernel/uGraph.cmi
   kernel/uGraph.cmt
   kernel/uGraph.cmti
   kernel/uGraph.cmx
   kernel/uGraph.ml
   kernel/uGraph.mli
   kernel/uint63.cmi
   kernel/uint63.cmt
   kernel/uint63.cmti
   kernel/uint63.cmx
   kernel/uint63.ml
   kernel/uint63.mli
   kernel/univ.cmi
   kernel/univ.cmt
   kernel/univ.cmti
   kernel/univ.cmx
   kernel/univ.ml
   kernel/univ.mli
   kernel/vars.cmi
   kernel/vars.cmt
   kernel/vars.cmti
   kernel/vars.cmx
   kernel/vars.ml
   kernel/vars.mli
   kernel/vconv.cmi
   kernel/vconv.cmt
   kernel/vconv.cmti
   kernel/vconv.cmx
   kernel/vconv.ml
   kernel/vconv.mli
   kernel/vm.cmi
   kernel/vm.cmt
   kernel/vm.cmti
   kernel/vm.cmx
   kernel/vm.ml
   kernel/vm.mli
   kernel/vmbytecodes.cmi
   kernel/vmbytecodes.cmt
   kernel/vmbytecodes.cmti
   kernel/vmbytecodes.cmx
   kernel/vmbytecodes.ml
   kernel/vmbytecodes.mli
   kernel/vmbytegen.cmi
   kernel/vmbytegen.cmt
   kernel/vmbytegen.cmti
   kernel/vmbytegen.cmx
   kernel/vmbytegen.ml
   kernel/vmbytegen.mli
   kernel/vmemitcodes.cmi
   kernel/vmemitcodes.cmt
   kernel/vmemitcodes.cmti
   kernel/vmemitcodes.cmx
   kernel/vmemitcodes.ml
   kernel/vmemitcodes.mli
   kernel/vmlambda.cmi
   kernel/vmlambda.cmt
   kernel/vmlambda.cmti
   kernel/vmlambda.cmx
   kernel/vmlambda.ml
   kernel/vmlambda.mli
   kernel/vmopcodes.cmi
   kernel/vmopcodes.cmt
   kernel/vmopcodes.cmx
   kernel/vmopcodes.ml
   kernel/vmsymtable.cmi
   kernel/vmsymtable.cmt
   kernel/vmsymtable.cmti
   kernel/vmsymtable.cmx
   kernel/vmsymtable.ml
   kernel/vmsymtable.mli
   kernel/vmvalues.cmi
   kernel/vmvalues.cmt
   kernel/vmvalues.cmti
   kernel/vmvalues.cmx
   kernel/vmvalues.ml
   kernel/vmvalues.mli
   lib/acyclicGraph.cmi
   lib/acyclicGraph.cmt
   lib/acyclicGraph.cmti
   lib/acyclicGraph.cmx
   lib/acyclicGraph.ml
   lib/acyclicGraph.mli
   lib/aux_file.cmi
   lib/aux_file.cmt
   lib/aux_file.cmti
   lib/aux_file.cmx
   lib/aux_file.ml
   lib/aux_file.mli
   lib/cAst.cmi
   lib/cAst.cmt
   lib/cAst.cmti
   lib/cAst.cmx
   lib/cAst.ml
   lib/cAst.mli
   lib/cDebug.cmi
   lib/cDebug.cmt
   lib/cDebug.cmti
   lib/cDebug.cmx
   lib/cDebug.ml
   lib/cDebug.mli
   lib/cErrors.cmi
   lib/cErrors.cmt
   lib/cErrors.cmti
   lib/cErrors.cmx
   lib/cErrors.ml
   lib/cErrors.mli
   lib/cProfile.cmi
   lib/cProfile.cmt
   lib/cProfile.cmti
   lib/cProfile.cmx
   lib/cProfile.ml
   lib/cProfile.mli
   lib/cWarnings.cmi
   lib/cWarnings.cmt
   lib/cWarnings.cmti
   lib/cWarnings.cmx
   lib/cWarnings.ml
   lib/cWarnings.mli
   lib/control.cmi
   lib/control.cmt
   lib/control.cmti
   lib/control.cmx
   lib/control.ml
   lib/control.mli
   lib/coqProject_file.cmi
   lib/coqProject_file.cmt
   lib/coqProject_file.cmti
   lib/coqProject_file.cmx
   lib/coqProject_file.ml
   lib/coqProject_file.mli
   lib/core_plugins_findlib_compat.cmi
   lib/core_plugins_findlib_compat.cmt
   lib/core_plugins_findlib_compat.cmti
   lib/core_plugins_findlib_compat.cmx
   lib/core_plugins_findlib_compat.ml
   lib/core_plugins_findlib_compat.mli
   lib/dAst.cmi
   lib/dAst.cmt
   lib/dAst.cmti
   lib/dAst.cmx
   lib/dAst.ml
   lib/dAst.mli
   lib/envars.cmi
   lib/envars.cmt
   lib/envars.cmti
   lib/envars.cmx
   lib/envars.ml
   lib/envars.mli
   lib/feedback.cmi
   lib/feedback.cmt
   lib/feedback.cmti
   lib/feedback.cmx
   lib/feedback.ml
   lib/feedback.mli
   lib/flags.cmi
   lib/flags.cmt
   lib/flags.cmti
   lib/flags.cmx
   lib/flags.ml
   lib/flags.mli
   lib/genarg.cmi
   lib/genarg.cmt
   lib/genarg.cmti
   lib/genarg.cmx
   lib/genarg.ml
   lib/genarg.mli
   lib/hook.cmi
   lib/hook.cmt
   lib/hook.cmti
   lib/hook.cmx
   lib/hook.ml
   lib/hook.mli
   lib/lStream.cmi
   lib/lStream.cmt
   lib/lStream.cmti
   lib/lStream.cmx
   lib/lStream.ml
   lib/lStream.mli
   lib/lib.a
   lib/lib.cma
   lib/lib.cmxa
   lib/loc.cmi
   lib/loc.cmt
   lib/loc.cmti
   lib/loc.cmx
   lib/loc.ml
   lib/loc.mli
   lib/objFile.cmi
   lib/objFile.cmt
   lib/objFile.cmti
   lib/objFile.cmx
   lib/objFile.ml
   lib/objFile.mli
   lib/pp.cmi
   lib/pp.cmt
   lib/pp.cmti
   lib/pp.cmx
   lib/pp.ml
   lib/pp.mli
   lib/pp_diff.cmi
   lib/pp_diff.cmt
   lib/pp_diff.cmti
   lib/pp_diff.cmx
   lib/pp_diff.ml
   lib/pp_diff.mli
   lib/rtree.cmi
   lib/rtree.cmt
   lib/rtree.cmti
   lib/rtree.cmx
   lib/rtree.ml
   lib/rtree.mli
   lib/spawn.cmi
   lib/spawn.cmt
   lib/spawn.cmti
   lib/spawn.cmx
   lib/spawn.ml
   lib/spawn.mli
   lib/stateid.cmi
   lib/stateid.cmt
   lib/stateid.cmti
   lib/stateid.cmx
   lib/stateid.ml
   lib/stateid.mli
   lib/system.cmi
   lib/system.cmt
   lib/system.cmti
   lib/system.cmx
   lib/system.ml
   lib/system.mli
   lib/util.cmi
   lib/util.cmt
   lib/util.cmti
   lib/util.cmx
   lib/util.ml
   lib/util.mli
   lib/xml_datatype.cmi
   lib/xml_datatype.cmti
   lib/xml_datatype.mli
   library/coqlib.cmi
   library/coqlib.cmt
   library/coqlib.cmti
   library/coqlib.cmx
   library/coqlib.ml
   library/coqlib.mli
   library/global.cmi
   library/global.cmt
   library/global.cmti
   library/global.cmx
   library/global.ml
   library/global.mli
   library/globnames.cmi
   library/globnames.cmt
   library/globnames.cmti
   library/globnames.cmx
   library/globnames.ml
   library/globnames.mli
   library/goptions.cmi
   library/goptions.cmt
   library/goptions.cmti
   library/goptions.cmx
   library/goptions.ml
   library/goptions.mli
   library/lib.cmi
   library/lib.cmt
   library/lib.cmti
   library/lib.cmx
   library/lib.ml
   library/lib.mli
   library/libnames.cmi
   library/libnames.cmt
   library/libnames.cmti
   library/libnames.cmx
   library/libnames.ml
   library/libnames.mli
   library/libobject.cmi
   library/libobject.cmt
   library/libobject.cmti
   library/libobject.cmx
   library/libobject.ml
   library/libobject.mli
   library/library.a
   library/library.cma
   library/library.cmxa
   library/nametab.cmi
   library/nametab.cmt
   library/nametab.cmti
   library/nametab.cmx
   library/nametab.ml
   library/nametab.mli
   library/summary.cmi
   library/summary.cmt
   library/summary.cmti
   library/summary.cmx
   library/summary.ml
   library/summary.mli
   opam
   parsing/cLexer.cmi
   parsing/cLexer.cmt
   parsing/cLexer.cmti
   parsing/cLexer.cmx
   parsing/cLexer.ml
   parsing/cLexer.mli
   parsing/extend.cmi
   parsing/extend.cmt
   parsing/extend.cmti
   parsing/extend.cmx
   parsing/extend.ml
   parsing/extend.mli
   parsing/g_constr.cmi
   parsing/g_constr.cmt
   parsing/g_constr.cmx
   parsing/g_constr.ml
   parsing/g_prim.cmi
   parsing/g_prim.cmt
   parsing/g_prim.cmx
   parsing/g_prim.ml
   parsing/notation_gram.cmi
   parsing/notation_gram.cmt
   parsing/notation_gram.cmx
   parsing/notation_gram.ml
   parsing/notgram_ops.cmi
   parsing/notgram_ops.cmt
   parsing/notgram_ops.cmti
   parsing/notgram_ops.cmx
   parsing/notgram_ops.ml
   parsing/notgram_ops.mli
   parsing/parsing.a
   parsing/parsing.cma
   parsing/parsing.cmxa
   parsing/pcoq.cmi
   parsing/pcoq.cmt
   parsing/pcoq.cmti
   parsing/pcoq.cmx
   parsing/pcoq.ml
   parsing/pcoq.mli
   parsing/tok.cmi
   parsing/tok.cmt
   parsing/tok.cmti
   parsing/tok.cmx
   parsing/tok.ml
   parsing/tok.mli
   plugins/btauto/btauto_plugin.a
   plugins/btauto/btauto_plugin.cma
   plugins/btauto/btauto_plugin.cmi
   plugins/btauto/btauto_plugin.cmt
   plugins/btauto/btauto_plugin.cmx
   plugins/btauto/btauto_plugin.cmxa
   plugins/btauto/btauto_plugin.ml
   plugins/btauto/btauto_plugin__G_btauto.cmi
   plugins/btauto/btauto_plugin__G_btauto.cmt
   plugins/btauto/btauto_plugin__G_btauto.cmx
   plugins/btauto/btauto_plugin__Refl_btauto.cmi
   plugins/btauto/btauto_plugin__Refl_btauto.cmt
   plugins/btauto/btauto_plugin__Refl_btauto.cmti
   plugins/btauto/btauto_plugin__Refl_btauto.cmx
   plugins/btauto/g_btauto.ml
   plugins/btauto/refl_btauto.ml
   plugins/btauto/refl_btauto.mli
   plugins/cc/cc_plugin.a
   plugins/cc/cc_plugin.cma
   plugins/cc/cc_plugin.cmi
   plugins/cc/cc_plugin.cmt
   plugins/cc/cc_plugin.cmx
   plugins/cc/cc_plugin.cmxa
   plugins/cc/cc_plugin.ml
   plugins/cc/cc_plugin__Ccalgo.cmi
   plugins/cc/cc_plugin__Ccalgo.cmt
   plugins/cc/cc_plugin__Ccalgo.cmti
   plugins/cc/cc_plugin__Ccalgo.cmx
   plugins/cc/cc_plugin__Ccproof.cmi
   plugins/cc/cc_plugin__Ccproof.cmt
   plugins/cc/cc_plugin__Ccproof.cmti
   plugins/cc/cc_plugin__Ccproof.cmx
   plugins/cc/cc_plugin__Cctac.cmi
   plugins/cc/cc_plugin__Cctac.cmt
   plugins/cc/cc_plugin__Cctac.cmti
   plugins/cc/cc_plugin__Cctac.cmx
   plugins/cc/cc_plugin__G_congruence.cmi
   plugins/cc/cc_plugin__G_congruence.cmt
   plugins/cc/cc_plugin__G_congruence.cmx
   plugins/cc/ccalgo.ml
   plugins/cc/ccalgo.mli
   plugins/cc/ccproof.ml
   plugins/cc/ccproof.mli
   plugins/cc/cctac.ml
   plugins/cc/cctac.mli
   plugins/cc/g_congruence.ml
   plugins/derive/derive.ml
   plugins/derive/derive.mli
   plugins/derive/derive_plugin.a
   plugins/derive/derive_plugin.cma
   plugins/derive/derive_plugin.cmi
   plugins/derive/derive_plugin.cmt
   plugins/derive/derive_plugin.cmx
   plugins/derive/derive_plugin.cmxa
   plugins/derive/derive_plugin.ml
   plugins/derive/derive_plugin__Derive.cmi
   plugins/derive/derive_plugin__Derive.cmt
   plugins/derive/derive_plugin__Derive.cmti
   plugins/derive/derive_plugin__Derive.cmx
   plugins/derive/derive_plugin__G_derive.cmi
   plugins/derive/derive_plugin__G_derive.cmt
   plugins/derive/derive_plugin__G_derive.cmx
   plugins/derive/g_derive.ml
   plugins/extraction/common.ml
   plugins/extraction/common.mli
   plugins/extraction/extract_env.ml
   plugins/extraction/extract_env.mli
   plugins/extraction/extraction.ml
   plugins/extraction/extraction.mli
   plugins/extraction/extraction_plugin.a
   plugins/extraction/extraction_plugin.cma
   plugins/extraction/extraction_plugin.cmi
   plugins/extraction/extraction_plugin.cmt
   plugins/extraction/extraction_plugin.cmx
   plugins/extraction/extraction_plugin.cmxa
   plugins/extraction/extraction_plugin.ml
   plugins/extraction/extraction_plugin__Common.cmi
   plugins/extraction/extraction_plugin__Common.cmt
   plugins/extraction/extraction_plugin__Common.cmti
   plugins/extraction/extraction_plugin__Common.cmx
   plugins/extraction/extraction_plugin__Extract_env.cmi
   plugins/extraction/extraction_plugin__Extract_env.cmt
   plugins/extraction/extraction_plugin__Extract_env.cmti
   plugins/extraction/extraction_plugin__Extract_env.cmx
   plugins/extraction/extraction_plugin__Extraction.cmi
   plugins/extraction/extraction_plugin__Extraction.cmt
   plugins/extraction/extraction_plugin__Extraction.cmti
   plugins/extraction/extraction_plugin__Extraction.cmx
   plugins/extraction/extraction_plugin__G_extraction.cmi
   plugins/extraction/extraction_plugin__G_extraction.cmt
   plugins/extraction/extraction_plugin__G_extraction.cmx
   plugins/extraction/extraction_plugin__Haskell.cmi
   plugins/extraction/extraction_plugin__Haskell.cmt
   plugins/extraction/extraction_plugin__Haskell.cmti
   plugins/extraction/extraction_plugin__Haskell.cmx
   plugins/extraction/extraction_plugin__Json.cmi
   plugins/extraction/extraction_plugin__Json.cmt
   plugins/extraction/extraction_plugin__Json.cmti
   plugins/extraction/extraction_plugin__Json.cmx
   plugins/extraction/extraction_plugin__Miniml.cmi
   plugins/extraction/extraction_plugin__Miniml.cmt
   plugins/extraction/extraction_plugin__Miniml.cmti
   plugins/extraction/extraction_plugin__Miniml.cmx
   plugins/extraction/extraction_plugin__Mlutil.cmi
   plugins/extraction/extraction_plugin__Mlutil.cmt
   plugins/extraction/extraction_plugin__Mlutil.cmti
   plugins/extraction/extraction_plugin__Mlutil.cmx
   plugins/extraction/extraction_plugin__Modutil.cmi
   plugins/extraction/extraction_plugin__Modutil.cmt
   plugins/extraction/extraction_plugin__Modutil.cmti
   plugins/extraction/extraction_plugin__Modutil.cmx
   plugins/extraction/extraction_plugin__Ocaml.cmi
   plugins/extraction/extraction_plugin__Ocaml.cmt
   plugins/extraction/extraction_plugin__Ocaml.cmti
   plugins/extraction/extraction_plugin__Ocaml.cmx
   plugins/extraction/extraction_plugin__Scheme.cmi
   plugins/extraction/extraction_plugin__Scheme.cmt
   plugins/extraction/extraction_plugin__Scheme.cmti
   plugins/extraction/extraction_plugin__Scheme.cmx
   plugins/extraction/extraction_plugin__Table.cmi
   plugins/extraction/extraction_plugin__Table.cmt
   plugins/extraction/extraction_plugin__Table.cmti
   plugins/extraction/extraction_plugin__Table.cmx
   plugins/extraction/g_extraction.ml
   plugins/extraction/haskell.ml
   plugins/extraction/haskell.mli
   plugins/extraction/json.ml
   plugins/extraction/json.mli
   plugins/extraction/miniml.ml
   plugins/extraction/miniml.mli
   plugins/extraction/mlutil.ml
   plugins/extraction/mlutil.mli
   plugins/extraction/modutil.ml
   plugins/extraction/modutil.mli
   plugins/extraction/ocaml.ml
   plugins/extraction/ocaml.mli
   plugins/extraction/scheme.ml
   plugins/extraction/scheme.mli
   plugins/extraction/table.ml
   plugins/extraction/table.mli
   plugins/firstorder/firstorder_plugin.a
   plugins/firstorder/firstorder_plugin.cma
   plugins/firstorder/firstorder_plugin.cmi
   plugins/firstorder/firstorder_plugin.cmt
   plugins/firstorder/firstorder_plugin.cmx
   plugins/firstorder/firstorder_plugin.cmxa
   plugins/firstorder/firstorder_plugin.ml
   plugins/firstorder/firstorder_plugin__Formula.cmi
   plugins/firstorder/firstorder_plugin__Formula.cmt
   plugins/firstorder/firstorder_plugin__Formula.cmti
   plugins/firstorder/firstorder_plugin__Formula.cmx
   plugins/firstorder/firstorder_plugin__G_ground.cmi
   plugins/firstorder/firstorder_plugin__G_ground.cmt
   plugins/firstorder/firstorder_plugin__G_ground.cmx
   plugins/firstorder/firstorder_plugin__Ground.cmi
   plugins/firstorder/firstorder_plugin__Ground.cmt
   plugins/firstorder/firstorder_plugin__Ground.cmti
   plugins/firstorder/firstorder_plugin__Ground.cmx
   plugins/firstorder/firstorder_plugin__Instances.cmi
   plugins/firstorder/firstorder_plugin__Instances.cmt
   plugins/firstorder/firstorder_plugin__Instances.cmti
   plugins/firstorder/firstorder_plugin__Instances.cmx
   plugins/firstorder/firstorder_plugin__Rules.cmi
   plugins/firstorder/firstorder_plugin__Rules.cmt
   plugins/firstorder/firstorder_plugin__Rules.cmti
   plugins/firstorder/firstorder_plugin__Rules.cmx
   plugins/firstorder/firstorder_plugin__Sequent.cmi
   plugins/firstorder/firstorder_plugin__Sequent.cmt
   plugins/firstorder/firstorder_plugin__Sequent.cmti
   plugins/firstorder/firstorder_plugin__Sequent.cmx
   plugins/firstorder/firstorder_plugin__Unify.cmi
   plugins/firstorder/firstorder_plugin__Unify.cmt
   plugins/firstorder/firstorder_plugin__Unify.cmti
   plugins/firstorder/firstorder_plugin__Unify.cmx
   plugins/firstorder/formula.ml
   plugins/firstorder/formula.mli
   plugins/firstorder/g_ground.ml
   plugins/firstorder/ground.ml
   plugins/firstorder/ground.mli
   plugins/firstorder/instances.ml
   plugins/firstorder/instances.mli
   plugins/firstorder/rules.ml
   plugins/firstorder/rules.mli
   plugins/firstorder/sequent.ml
   plugins/firstorder/sequent.mli
   plugins/firstorder/unify.ml
   plugins/firstorder/unify.mli
   plugins/funind/functional_principles_proofs.ml
   plugins/funind/functional_principles_proofs.mli
   plugins/funind/functional_principles_types.ml
   plugins/funind/functional_principles_types.mli
   plugins/funind/funind_plugin.a
   plugins/funind/funind_plugin.cma
   plugins/funind/funind_plugin.cmi
   plugins/funind/funind_plugin.cmt
   plugins/funind/funind_plugin.cmx
   plugins/funind/funind_plugin.cmxa
   plugins/funind/funind_plugin.ml
   plugins/funind/funind_plugin__Functional_principles_proofs.cmi
   plugins/funind/funind_plugin__Functional_principles_proofs.cmt
   plugins/funind/funind_plugin__Functional_principles_proofs.cmti
   plugins/funind/funind_plugin__Functional_principles_proofs.cmx
   plugins/funind/funind_plugin__Functional_principles_types.cmi
   plugins/funind/funind_plugin__Functional_principles_types.cmt
   plugins/funind/funind_plugin__Functional_principles_types.cmti
   plugins/funind/funind_plugin__Functional_principles_types.cmx
   plugins/funind/funind_plugin__G_indfun.cmi
   plugins/funind/funind_plugin__G_indfun.cmt
   plugins/funind/funind_plugin__G_indfun.cmx
   plugins/funind/funind_plugin__Gen_principle.cmi
   plugins/funind/funind_plugin__Gen_principle.cmt
   plugins/funind/funind_plugin__Gen_principle.cmti
   plugins/funind/funind_plugin__Gen_principle.cmx
   plugins/funind/funind_plugin__Glob_term_to_relation.cmi
   plugins/funind/funind_plugin__Glob_term_to_relation.cmt
   plugins/funind/funind_plugin__Glob_term_to_relation.cmti
   plugins/funind/funind_plugin__Glob_term_to_relation.cmx
   plugins/funind/funind_plugin__Glob_termops.cmi
   plugins/funind/funind_plugin__Glob_termops.cmt
   plugins/funind/funind_plugin__Glob_termops.cmti
   plugins/funind/funind_plugin__Glob_termops.cmx
   plugins/funind/funind_plugin__Indfun.cmi
   plugins/funind/funind_plugin__Indfun.cmt
   plugins/funind/funind_plugin__Indfun.cmti
   plugins/funind/funind_plugin__Indfun.cmx
   plugins/funind/funind_plugin__Indfun_common.cmi
   plugins/funind/funind_plugin__Indfun_common.cmt
   plugins/funind/funind_plugin__Indfun_common.cmti
   plugins/funind/funind_plugin__Indfun_common.cmx
   plugins/funind/funind_plugin__Invfun.cmi
   plugins/funind/funind_plugin__Invfun.cmt
   plugins/funind/funind_plugin__Invfun.cmti
   plugins/funind/funind_plugin__Invfun.cmx
   plugins/funind/funind_plugin__Recdef.cmi
   plugins/funind/funind_plugin__Recdef.cmt
   plugins/funind/funind_plugin__Recdef.cmti
   plugins/funind/funind_plugin__Recdef.cmx
   plugins/funind/g_indfun.ml
   plugins/funind/gen_principle.ml
   plugins/funind/gen_principle.mli
   plugins/funind/glob_term_to_relation.ml
   plugins/funind/glob_term_to_relation.mli
   plugins/funind/glob_termops.ml
   plugins/funind/glob_termops.mli
   plugins/funind/indfun.ml
   plugins/funind/indfun.mli
   plugins/funind/indfun_common.ml
   plugins/funind/indfun_common.mli
   plugins/funind/invfun.ml
   plugins/funind/invfun.mli
   plugins/funind/recdef.ml
   plugins/funind/recdef.mli
   plugins/ltac/comRewrite.ml
   plugins/ltac/comRewrite.mli
   plugins/ltac/coretactics.ml
   plugins/ltac/evar_tactics.ml
   plugins/ltac/evar_tactics.mli
   plugins/ltac/extraargs.ml
   plugins/ltac/extraargs.mli
   plugins/ltac/extratactics.ml
   plugins/ltac/extratactics.mli
   plugins/ltac/g_auto.ml
   plugins/ltac/g_class.ml
   plugins/ltac/g_eqdecide.ml
   plugins/ltac/g_ltac.ml
   plugins/ltac/g_obligations.ml
   plugins/ltac/g_rewrite.ml
   plugins/ltac/g_tactic.ml
   plugins/ltac/internals.ml
   plugins/ltac/internals.mli
   plugins/ltac/leminv.ml
   plugins/ltac/leminv.mli
   plugins/ltac/ltac_plugin.a
   plugins/ltac/ltac_plugin.cma
   plugins/ltac/ltac_plugin.cmi
   plugins/ltac/ltac_plugin.cmt
   plugins/ltac/ltac_plugin.cmx
   plugins/ltac/ltac_plugin.cmxa
   plugins/ltac/ltac_plugin.ml
   plugins/ltac/ltac_plugin__ComRewrite.cmi
   plugins/ltac/ltac_plugin__ComRewrite.cmt
   plugins/ltac/ltac_plugin__ComRewrite.cmti
   plugins/ltac/ltac_plugin__ComRewrite.cmx
   plugins/ltac/ltac_plugin__Coretactics.cmi
   plugins/ltac/ltac_plugin__Coretactics.cmt
   plugins/ltac/ltac_plugin__Coretactics.cmx
   plugins/ltac/ltac_plugin__Evar_tactics.cmi
   plugins/ltac/ltac_plugin__Evar_tactics.cmt
   plugins/ltac/ltac_plugin__Evar_tactics.cmti
   plugins/ltac/ltac_plugin__Evar_tactics.cmx
   plugins/ltac/ltac_plugin__Extraargs.cmi
   plugins/ltac/ltac_plugin__Extraargs.cmt
   plugins/ltac/ltac_plugin__Extraargs.cmti
   plugins/ltac/ltac_plugin__Extraargs.cmx
   plugins/ltac/ltac_plugin__Extratactics.cmi
   plugins/ltac/ltac_plugin__Extratactics.cmt
   plugins/ltac/ltac_plugin__Extratactics.cmti
   plugins/ltac/ltac_plugin__Extratactics.cmx
   plugins/ltac/ltac_plugin__G_auto.cmi
   plugins/ltac/ltac_plugin__G_auto.cmt
   plugins/ltac/ltac_plugin__G_auto.cmx
   plugins/ltac/ltac_plugin__G_class.cmi
   plugins/ltac/ltac_plugin__G_class.cmt
   plugins/ltac/ltac_plugin__G_class.cmx
   plugins/ltac/ltac_plugin__G_eqdecide.cmi
   plugins/ltac/ltac_plugin__G_eqdecide.cmt
   plugins/ltac/ltac_plugin__G_eqdecide.cmx
   plugins/ltac/ltac_plugin__G_ltac.cmi
   plugins/ltac/ltac_plugin__G_ltac.cmt
   plugins/ltac/ltac_plugin__G_ltac.cmx
   plugins/ltac/ltac_plugin__G_obligations.cmi
   plugins/ltac/ltac_plugin__G_obligations.cmt
   plugins/ltac/ltac_plugin__G_obligations.cmx
   plugins/ltac/ltac_plugin__G_rewrite.cmi
   plugins/ltac/ltac_plugin__G_rewrite.cmt
   plugins/ltac/ltac_plugin__G_rewrite.cmx
   plugins/ltac/ltac_plugin__G_tactic.cmi
   plugins/ltac/ltac_plugin__G_tactic.cmt
   plugins/ltac/ltac_plugin__G_tactic.cmx
   plugins/ltac/ltac_plugin__Internals.cmi
   plugins/ltac/ltac_plugin__Internals.cmt
   plugins/ltac/ltac_plugin__Internals.cmti
   plugins/ltac/ltac_plugin__Internals.cmx
   plugins/ltac/ltac_plugin__Leminv.cmi
   plugins/ltac/ltac_plugin__Leminv.cmt
   plugins/ltac/ltac_plugin__Leminv.cmti
   plugins/ltac/ltac_plugin__Leminv.cmx
   plugins/ltac/ltac_plugin__Pltac.cmi
   plugins/ltac/ltac_plugin__Pltac.cmt
   plugins/ltac/ltac_plugin__Pltac.cmti
   plugins/ltac/ltac_plugin__Pltac.cmx
   plugins/ltac/ltac_plugin__Pptactic.cmi
   plugins/ltac/ltac_plugin__Pptactic.cmt
   plugins/ltac/ltac_plugin__Pptactic.cmti
   plugins/ltac/ltac_plugin__Pptactic.cmx
   plugins/ltac/ltac_plugin__Profile_ltac.cmi
   plugins/ltac/ltac_plugin__Profile_ltac.cmt
   plugins/ltac/ltac_plugin__Profile_ltac.cmti
   plugins/ltac/ltac_plugin__Profile_ltac.cmx
   plugins/ltac/ltac_plugin__Profile_ltac_tactics.cmi
   plugins/ltac/ltac_plugin__Profile_ltac_tactics.cmt
   plugins/ltac/ltac_plugin__Profile_ltac_tactics.cmx
   plugins/ltac/ltac_plugin__Tacarg.cmi
   plugins/ltac/ltac_plugin__Tacarg.cmt
   plugins/ltac/ltac_plugin__Tacarg.cmti
   plugins/ltac/ltac_plugin__Tacarg.cmx
   plugins/ltac/ltac_plugin__Taccoerce.cmi
   plugins/ltac/ltac_plugin__Taccoerce.cmt
   plugins/ltac/ltac_plugin__Taccoerce.cmti
   plugins/ltac/ltac_plugin__Taccoerce.cmx
   plugins/ltac/ltac_plugin__Tacentries.cmi
   plugins/ltac/ltac_plugin__Tacentries.cmt
   plugins/ltac/ltac_plugin__Tacentries.cmti
   plugins/ltac/ltac_plugin__Tacentries.cmx
   plugins/ltac/ltac_plugin__Tacenv.cmi
   plugins/ltac/ltac_plugin__Tacenv.cmt
   plugins/ltac/ltac_plugin__Tacenv.cmti
   plugins/ltac/ltac_plugin__Tacenv.cmx
   plugins/ltac/ltac_plugin__Tacexpr.cmi
   plugins/ltac/ltac_plugin__Tacexpr.cmt
   plugins/ltac/ltac_plugin__Tacexpr.cmti
   plugins/ltac/ltac_plugin__Tacexpr.cmx
   plugins/ltac/ltac_plugin__Tacintern.cmi
   plugins/ltac/ltac_plugin__Tacintern.cmt
   plugins/ltac/ltac_plugin__Tacintern.cmti
   plugins/ltac/ltac_plugin__Tacintern.cmx
   plugins/ltac/ltac_plugin__Tacinterp.cmi
   plugins/ltac/ltac_plugin__Tacinterp.cmt
   plugins/ltac/ltac_plugin__Tacinterp.cmti
   plugins/ltac/ltac_plugin__Tacinterp.cmx
   plugins/ltac/ltac_plugin__Tacsubst.cmi
   plugins/ltac/ltac_plugin__Tacsubst.cmt
   plugins/ltac/ltac_plugin__Tacsubst.cmti
   plugins/ltac/ltac_plugin__Tacsubst.cmx
   plugins/ltac/ltac_plugin__Tactic_debug.cmi
   plugins/ltac/ltac_plugin__Tactic_debug.cmt
   plugins/ltac/ltac_plugin__Tactic_debug.cmti
   plugins/ltac/ltac_plugin__Tactic_debug.cmx
   plugins/ltac/ltac_plugin__Tactic_matching.cmi
   plugins/ltac/ltac_plugin__Tactic_matching.cmt
   plugins/ltac/ltac_plugin__Tactic_matching.cmti
   plugins/ltac/ltac_plugin__Tactic_matching.cmx
   plugins/ltac/ltac_plugin__Tactic_option.cmi
   plugins/ltac/ltac_plugin__Tactic_option.cmt
   plugins/ltac/ltac_plugin__Tactic_option.cmti
   plugins/ltac/ltac_plugin__Tactic_option.cmx
   plugins/ltac/pltac.ml
   plugins/ltac/pltac.mli
   plugins/ltac/pptactic.ml
   plugins/ltac/pptactic.mli
   plugins/ltac/profile_ltac.ml
   plugins/ltac/profile_ltac.mli
   plugins/ltac/profile_ltac_tactics.ml
   plugins/ltac/tacarg.ml
   plugins/ltac/tacarg.mli
   plugins/ltac/taccoerce.ml
   plugins/ltac/taccoerce.mli
   plugins/ltac/tacentries.ml
   plugins/ltac/tacentries.mli
   plugins/ltac/tacenv.ml
   plugins/ltac/tacenv.mli
   plugins/ltac/tacexpr.ml
   plugins/ltac/tacexpr.mli
   plugins/ltac/tacintern.ml
   plugins/ltac/tacintern.mli
   plugins/ltac/tacinterp.ml
   plugins/ltac/tacinterp.mli
   plugins/ltac/tacsubst.ml
   plugins/ltac/tacsubst.mli
   plugins/ltac/tactic_debug.ml
   plugins/ltac/tactic_debug.mli
   plugins/ltac/tactic_matching.ml
   plugins/ltac/tactic_matching.mli
   plugins/ltac/tactic_option.ml
   plugins/ltac/tactic_option.mli
   plugins/ltac2/g_ltac2.ml
   plugins/ltac2/ltac2_plugin.a
   plugins/ltac2/ltac2_plugin.cma
   plugins/ltac2/ltac2_plugin.cmi
   plugins/ltac2/ltac2_plugin.cmt
   plugins/ltac2/ltac2_plugin.cmx
   plugins/ltac2/ltac2_plugin.cmxa
   plugins/ltac2/ltac2_plugin.ml
   plugins/ltac2/ltac2_plugin__G_ltac2.cmi
   plugins/ltac2/ltac2_plugin__G_ltac2.cmt
   plugins/ltac2/ltac2_plugin__G_ltac2.cmx
   plugins/ltac2/ltac2_plugin__Tac2core.cmi
   plugins/ltac2/ltac2_plugin__Tac2core.cmt
   plugins/ltac2/ltac2_plugin__Tac2core.cmti
   plugins/ltac2/ltac2_plugin__Tac2core.cmx
   plugins/ltac2/ltac2_plugin__Tac2dyn.cmi
   plugins/ltac2/ltac2_plugin__Tac2dyn.cmt
   plugins/ltac2/ltac2_plugin__Tac2dyn.cmti
   plugins/ltac2/ltac2_plugin__Tac2dyn.cmx
   plugins/ltac2/ltac2_plugin__Tac2entries.cmi
   plugins/ltac2/ltac2_plugin__Tac2entries.cmt
   plugins/ltac2/ltac2_plugin__Tac2entries.cmti
   plugins/ltac2/ltac2_plugin__Tac2entries.cmx
   plugins/ltac2/ltac2_plugin__Tac2env.cmi
   plugins/ltac2/ltac2_plugin__Tac2env.cmt
   plugins/ltac2/ltac2_plugin__Tac2env.cmti
   plugins/ltac2/ltac2_plugin__Tac2env.cmx
   plugins/ltac2/ltac2_plugin__Tac2expr.cmi
   plugins/ltac2/ltac2_plugin__Tac2expr.cmti
   plugins/ltac2/ltac2_plugin__Tac2extffi.cmi
   plugins/ltac2/ltac2_plugin__Tac2extffi.cmt
   plugins/ltac2/ltac2_plugin__Tac2extffi.cmti
   plugins/ltac2/ltac2_plugin__Tac2extffi.cmx
   plugins/ltac2/ltac2_plugin__Tac2ffi.cmi
   plugins/ltac2/ltac2_plugin__Tac2ffi.cmt
   plugins/ltac2/ltac2_plugin__Tac2ffi.cmti
   plugins/ltac2/ltac2_plugin__Tac2ffi.cmx
   plugins/ltac2/ltac2_plugin__Tac2intern.cmi
   plugins/ltac2/ltac2_plugin__Tac2intern.cmt
   plugins/ltac2/ltac2_plugin__Tac2intern.cmti
   plugins/ltac2/ltac2_plugin__Tac2intern.cmx
   plugins/ltac2/ltac2_plugin__Tac2interp.cmi
   plugins/ltac2/ltac2_plugin__Tac2interp.cmt
   plugins/ltac2/ltac2_plugin__Tac2interp.cmti
   plugins/ltac2/ltac2_plugin__Tac2interp.cmx
   plugins/ltac2/ltac2_plugin__Tac2match.cmi
   plugins/ltac2/ltac2_plugin__Tac2match.cmt
   plugins/ltac2/ltac2_plugin__Tac2match.cmti
   plugins/ltac2/ltac2_plugin__Tac2match.cmx
   plugins/ltac2/ltac2_plugin__Tac2print.cmi
   plugins/ltac2/ltac2_plugin__Tac2print.cmt
   plugins/ltac2/ltac2_plugin__Tac2print.cmti
   plugins/ltac2/ltac2_plugin__Tac2print.cmx
   plugins/ltac2/ltac2_plugin__Tac2qexpr.cmi
   plugins/ltac2/ltac2_plugin__Tac2qexpr.cmti
   plugins/ltac2/ltac2_plugin__Tac2quote.cmi
   plugins/ltac2/ltac2_plugin__Tac2quote.cmt
   plugins/ltac2/ltac2_plugin__Tac2quote.cmti
   plugins/ltac2/ltac2_plugin__Tac2quote.cmx
   plugins/ltac2/ltac2_plugin__Tac2stdlib.cmi
   plugins/ltac2/ltac2_plugin__Tac2stdlib.cmt
   plugins/ltac2/ltac2_plugin__Tac2stdlib.cmti
   plugins/ltac2/ltac2_plugin__Tac2stdlib.cmx
   plugins/ltac2/ltac2_plugin__Tac2tactics.cmi
   plugins/ltac2/ltac2_plugin__Tac2tactics.cmt
   plugins/ltac2/ltac2_plugin__Tac2tactics.cmti
   plugins/ltac2/ltac2_plugin__Tac2tactics.cmx
   plugins/ltac2/ltac2_plugin__Tac2types.cmi
   plugins/ltac2/ltac2_plugin__Tac2types.cmti
   plugins/ltac2/tac2core.ml
   plugins/ltac2/tac2core.mli
   plugins/ltac2/tac2dyn.ml
   plugins/ltac2/tac2dyn.mli
   plugins/ltac2/tac2entries.ml
   plugins/ltac2/tac2entries.mli
   plugins/ltac2/tac2env.ml
   plugins/ltac2/tac2env.mli
   plugins/ltac2/tac2expr.mli
   plugins/ltac2/tac2extffi.ml
   plugins/ltac2/tac2extffi.mli
   plugins/ltac2/tac2ffi.ml
   plugins/ltac2/tac2ffi.mli
   plugins/ltac2/tac2intern.ml
   plugins/ltac2/tac2intern.mli
   plugins/ltac2/tac2interp.ml
   plugins/ltac2/tac2interp.mli
   plugins/ltac2/tac2match.ml
   plugins/ltac2/tac2match.mli
   plugins/ltac2/tac2print.ml
   plugins/ltac2/tac2print.mli
   plugins/ltac2/tac2qexpr.mli
   plugins/ltac2/tac2quote.ml
   plugins/ltac2/tac2quote.mli
   plugins/ltac2/tac2stdlib.ml
   plugins/ltac2/tac2stdlib.mli
   plugins/ltac2/tac2tactics.ml
   plugins/ltac2/tac2tactics.mli
   plugins/ltac2/tac2types.mli
   plugins/micromega/certificate.ml
   plugins/micromega/certificate.mli
   plugins/micromega/coq_micromega.ml
   plugins/micromega/coq_micromega.mli
   plugins/micromega/g_micromega.ml
   plugins/micromega/g_micromega.mli
   plugins/micromega/itv.ml
   plugins/micromega/itv.mli
   plugins/micromega/linsolve.ml
   plugins/micromega/linsolve.mli
   plugins/micromega/micromega.ml
   plugins/micromega/micromega.mli
   plugins/micromega/micromega_plugin.a
   plugins/micromega/micromega_plugin.cma
   plugins/micromega/micromega_plugin.cmi
   plugins/micromega/micromega_plugin.cmt
   plugins/micromega/micromega_plugin.cmx
   plugins/micromega/micromega_plugin.cmxa
   plugins/micromega/micromega_plugin.ml
   plugins/micromega/micromega_plugin__Certificate.cmi
   plugins/micromega/micromega_plugin__Certificate.cmt
   plugins/micromega/micromega_plugin__Certificate.cmti
   plugins/micromega/micromega_plugin__Certificate.cmx
   plugins/micromega/micromega_plugin__Coq_micromega.cmi
   plugins/micromega/micromega_plugin__Coq_micromega.cmt
   plugins/micromega/micromega_plugin__Coq_micromega.cmti
   plugins/micromega/micromega_plugin__Coq_micromega.cmx
   plugins/micromega/micromega_plugin__G_micromega.cmi
   plugins/micromega/micromega_plugin__G_micromega.cmt
   plugins/micromega/micromega_plugin__G_micromega.cmti
   plugins/micromega/micromega_plugin__G_micromega.cmx
   plugins/micromega/micromega_plugin__Itv.cmi
   plugins/micromega/micromega_plugin__Itv.cmt
   plugins/micromega/micromega_plugin__Itv.cmti
   plugins/micromega/micromega_plugin__Itv.cmx
   plugins/micromega/micromega_plugin__Linsolve.cmi
   plugins/micromega/micromega_plugin__Linsolve.cmt
   plugins/micromega/micromega_plugin__Linsolve.cmti
   plugins/micromega/micromega_plugin__Linsolve.cmx
   plugins/micromega/micromega_plugin__Micromega.cmi
   plugins/micromega/micromega_plugin__Micromega.cmt
   plugins/micromega/micromega_plugin__Micromega.cmti
   plugins/micromega/micromega_plugin__Micromega.cmx
   plugins/micromega/micromega_plugin__Mutils.cmi
   plugins/micromega/micromega_plugin__Mutils.cmt
   plugins/micromega/micromega_plugin__Mutils.cmti
   plugins/micromega/micromega_plugin__Mutils.cmx
   plugins/micromega/micromega_plugin__NumCompat.cmi
   plugins/micromega/micromega_plugin__NumCompat.cmt
   plugins/micromega/micromega_plugin__NumCompat.cmti
   plugins/micromega/micromega_plugin__NumCompat.cmx
   plugins/micromega/micromega_plugin__Persistent_cache.cmi
   plugins/micromega/micromega_plugin__Persistent_cache.cmt
   plugins/micromega/micromega_plugin__Persistent_cache.cmti
   plugins/micromega/micromega_plugin__Persistent_cache.cmx
   plugins/micromega/micromega_plugin__Polynomial.cmi
   plugins/micromega/micromega_plugin__Polynomial.cmt
   plugins/micromega/micromega_plugin__Polynomial.cmti
   plugins/micromega/micromega_plugin__Polynomial.cmx
   plugins/micromega/micromega_plugin__Simplex.cmi
   plugins/micromega/micromega_plugin__Simplex.cmt
   plugins/micromega/micromega_plugin__Simplex.cmti
   plugins/micromega/micromega_plugin__Simplex.cmx
   plugins/micromega/micromega_plugin__Sos.cmi
   plugins/micromega/micromega_plugin__Sos.cmt
   plugins/micromega/micromega_plugin__Sos.cmti
   plugins/micromega/micromega_plugin__Sos.cmx
   plugins/micromega/micromega_plugin__Sos_lib.cmi
   plugins/micromega/micromega_plugin__Sos_lib.cmt
   plugins/micromega/micromega_plugin__Sos_lib.cmti
   plugins/micromega/micromega_plugin__Sos_lib.cmx
   plugins/micromega/micromega_plugin__Sos_types.cmi
   plugins/micromega/micromega_plugin__Sos_types.cmt
   plugins/micromega/micromega_plugin__Sos_types.cmti
   plugins/micromega/micromega_plugin__Sos_types.cmx
   plugins/micromega/micromega_plugin__Vect.cmi
   plugins/micromega/micromega_plugin__Vect.cmt
   plugins/micromega/micromega_plugin__Vect.cmti
   plugins/micromega/micromega_plugin__Vect.cmx
   plugins/micromega/mutils.ml
   plugins/micromega/mutils.mli
   plugins/micromega/numCompat.ml
   plugins/micromega/numCompat.mli
   plugins/micromega/persistent_cache.ml
   plugins/micromega/persistent_cache.mli
   plugins/micromega/polynomial.ml
   plugins/micromega/polynomial.mli
   plugins/micromega/simplex.ml
   plugins/micromega/simplex.mli
   plugins/micromega/sos.ml
   plugins/micromega/sos.mli
   plugins/micromega/sos_lib.ml
   plugins/micromega/sos_lib.mli
   plugins/micromega/sos_types.ml
   plugins/micromega/sos_types.mli
   plugins/micromega/vect.ml
   plugins/micromega/vect.mli
   plugins/nsatz/g_nsatz.ml
   plugins/nsatz/ideal.ml
   plugins/nsatz/ideal.mli
   plugins/nsatz/nsatz.ml
   plugins/nsatz/nsatz.mli
   plugins/nsatz/nsatz_plugin.a
   plugins/nsatz/nsatz_plugin.cma
   plugins/nsatz/nsatz_plugin.cmi
   plugins/nsatz/nsatz_plugin.cmt
   plugins/nsatz/nsatz_plugin.cmx
   plugins/nsatz/nsatz_plugin.cmxa
   plugins/nsatz/nsatz_plugin.ml
   plugins/nsatz/nsatz_plugin__G_nsatz.cmi
   plugins/nsatz/nsatz_plugin__G_nsatz.cmt
   plugins/nsatz/nsatz_plugin__G_nsatz.cmx
   plugins/nsatz/nsatz_plugin__Ideal.cmi
   plugins/nsatz/nsatz_plugin__Ideal.cmt
   plugins/nsatz/nsatz_plugin__Ideal.cmti
   plugins/nsatz/nsatz_plugin__Ideal.cmx
   plugins/nsatz/nsatz_plugin__Nsatz.cmi
   plugins/nsatz/nsatz_plugin__Nsatz.cmt
   plugins/nsatz/nsatz_plugin__Nsatz.cmti
   plugins/nsatz/nsatz_plugin__Nsatz.cmx
   plugins/nsatz/nsatz_plugin__Polynom.cmi
   plugins/nsatz/nsatz_plugin__Polynom.cmt
   plugins/nsatz/nsatz_plugin__Polynom.cmti
   plugins/nsatz/nsatz_plugin__Polynom.cmx
   plugins/nsatz/nsatz_plugin__Utile.cmi
   plugins/nsatz/nsatz_plugin__Utile.cmt
   plugins/nsatz/nsatz_plugin__Utile.cmti
   plugins/nsatz/nsatz_plugin__Utile.cmx
   plugins/nsatz/polynom.ml
   plugins/nsatz/polynom.mli
   plugins/nsatz/utile.ml
   plugins/nsatz/utile.mli
   plugins/number_string_notation/g_number_string.ml
   plugins/number_string_notation/number.ml
   plugins/number_string_notation/number.mli
   plugins/number_string_notation/number_string_notation_plugin.a
   plugins/number_string_notation/number_string_notation_plugin.cma
   plugins/number_string_notation/number_string_notation_plugin.cmi
   plugins/number_string_notation/number_string_notation_plugin.cmt
   plugins/number_string_notation/number_string_notation_plugin.cmx
   plugins/number_string_notation/number_string_notation_plugin.cmxa
   plugins/number_string_notation/number_string_notation_plugin.ml
   plugins/number_string_notation/number_string_notation_plugin__G_number_string.cmi
   plugins/number_string_notation/number_string_notation_plugin__G_number_string.cmt
   plugins/number_string_notation/number_string_notation_plugin__G_number_string.cmx
   plugins/number_string_notation/number_string_notation_plugin__Number.cmi
   plugins/number_string_notation/number_string_notation_plugin__Number.cmt
   plugins/number_string_notation/number_string_notation_plugin__Number.cmti
   plugins/number_string_notation/number_string_notation_plugin__Number.cmx
   plugins/number_string_notation/number_string_notation_plugin__String_notation.cmi
   plugins/number_string_notation/number_string_notation_plugin__String_notation.cmt
   plugins/number_string_notation/number_string_notation_plugin__String_notation.cmti
   plugins/number_string_notation/number_string_notation_plugin__String_notation.cmx
   plugins/number_string_notation/string_notation.ml
   plugins/number_string_notation/string_notation.mli
   plugins/ring/g_ring.ml
   plugins/ring/ring.ml
   plugins/ring/ring.mli
   plugins/ring/ring_ast.ml
   plugins/ring/ring_ast.mli
   plugins/ring/ring_plugin.a
   plugins/ring/ring_plugin.cma
   plugins/ring/ring_plugin.cmi
   plugins/ring/ring_plugin.cmt
   plugins/ring/ring_plugin.cmx
   plugins/ring/ring_plugin.cmxa
   plugins/ring/ring_plugin.ml
   plugins/ring/ring_plugin__G_ring.cmi
   plugins/ring/ring_plugin__G_ring.cmt
   plugins/ring/ring_plugin__G_ring.cmx
   plugins/ring/ring_plugin__Ring.cmi
   plugins/ring/ring_plugin__Ring.cmt
   plugins/ring/ring_plugin__Ring.cmti
   plugins/ring/ring_plugin__Ring.cmx
   plugins/ring/ring_plugin__Ring_ast.cmi
   plugins/ring/ring_plugin__Ring_ast.cmt
   plugins/ring/ring_plugin__Ring_ast.cmti
   plugins/ring/ring_plugin__Ring_ast.cmx
   plugins/rtauto/g_rtauto.ml
   plugins/rtauto/proof_search.ml
   plugins/rtauto/proof_search.mli
   plugins/rtauto/refl_tauto.ml
   plugins/rtauto/refl_tauto.mli
   plugins/rtauto/rtauto_plugin.a
   plugins/rtauto/rtauto_plugin.cma
   plugins/rtauto/rtauto_plugin.cmi
   plugins/rtauto/rtauto_plugin.cmt
   plugins/rtauto/rtauto_plugin.cmx
   plugins/rtauto/rtauto_plugin.cmxa
   plugins/rtauto/rtauto_plugin.ml
   plugins/rtauto/rtauto_plugin__G_rtauto.cmi
   plugins/rtauto/rtauto_plugin__G_rtauto.cmt
   plugins/rtauto/rtauto_plugin__G_rtauto.cmx
   plugins/rtauto/rtauto_plugin__Proof_search.cmi
   plugins/rtauto/rtauto_plugin__Proof_search.cmt
   plugins/rtauto/rtauto_plugin__Proof_search.cmti
   plugins/rtauto/rtauto_plugin__Proof_search.cmx
   plugins/rtauto/rtauto_plugin__Refl_tauto.cmi
   plugins/rtauto/rtauto_plugin__Refl_tauto.cmt
   plugins/rtauto/rtauto_plugin__Refl_tauto.cmti
   plugins/rtauto/rtauto_plugin__Refl_tauto.cmx
   plugins/ssreflect/ssrast.mli
   plugins/ssreflect/ssrbwd.ml
   plugins/ssreflect/ssrbwd.mli
   plugins/ssreflect/ssrcommon.ml
   plugins/ssreflect/ssrcommon.mli
   plugins/ssreflect/ssreflect_plugin.a
   plugins/ssreflect/ssreflect_plugin.cma
   plugins/ssreflect/ssreflect_plugin.cmi
   plugins/ssreflect/ssreflect_plugin.cmt
   plugins/ssreflect/ssreflect_plugin.cmx
   plugins/ssreflect/ssreflect_plugin.cmxa
   plugins/ssreflect/ssreflect_plugin.ml
   plugins/ssreflect/ssreflect_plugin__Ssrast.cmi
   plugins/ssreflect/ssreflect_plugin__Ssrast.cmti
   plugins/ssreflect/ssreflect_plugin__Ssrbwd.cmi
   plugins/ssreflect/ssreflect_plugin__Ssrbwd.cmt
   plugins/ssreflect/ssreflect_plugin__Ssrbwd.cmti
   plugins/ssreflect/ssreflect_plugin__Ssrbwd.cmx
   plugins/ssreflect/ssreflect_plugin__Ssrcommon.cmi
   plugins/ssreflect/ssreflect_plugin__Ssrcommon.cmt
   plugins/ssreflect/ssreflect_plugin__Ssrcommon.cmti
   plugins/ssreflect/ssreflect_plugin__Ssrcommon.cmx
   plugins/ssreflect/ssreflect_plugin__Ssrelim.cmi
   plugins/ssreflect/ssreflect_plugin__Ssrelim.cmt
   plugins/ssreflect/ssreflect_plugin__Ssrelim.cmti
   plugins/ssreflect/ssreflect_plugin__Ssrelim.cmx
   plugins/ssreflect/ssreflect_plugin__Ssrequality.cmi
   plugins/ssreflect/ssreflect_plugin__Ssrequality.cmt
   plugins/ssreflect/ssreflect_plugin__Ssrequality.cmti
   plugins/ssreflect/ssreflect_plugin__Ssrequality.cmx
   plugins/ssreflect/ssreflect_plugin__Ssrfwd.cmi
   plugins/ssreflect/ssreflect_plugin__Ssrfwd.cmt
   plugins/ssreflect/ssreflect_plugin__Ssrfwd.cmti
   plugins/ssreflect/ssreflect_plugin__Ssrfwd.cmx
   plugins/ssreflect/ssreflect_plugin__Ssripats.cmi
   plugins/ssreflect/ssreflect_plugin__Ssripats.cmt
   plugins/ssreflect/ssreflect_plugin__Ssripats.cmti
   plugins/ssreflect/ssreflect_plugin__Ssripats.cmx
   plugins/ssreflect/ssreflect_plugin__Ssrparser.cmi
   plugins/ssreflect/ssreflect_plugin__Ssrparser.cmt
   plugins/ssreflect/ssreflect_plugin__Ssrparser.cmti
   plugins/ssreflect/ssreflect_plugin__Ssrparser.cmx
   plugins/ssreflect/ssreflect_plugin__Ssrprinters.cmi
   plugins/ssreflect/ssreflect_plugin__Ssrprinters.cmt
   plugins/ssreflect/ssreflect_plugin__Ssrprinters.cmti
   plugins/ssreflect/ssreflect_plugin__Ssrprinters.cmx
   plugins/ssreflect/ssreflect_plugin__Ssrtacticals.cmi
   plugins/ssreflect/ssreflect_plugin__Ssrtacticals.cmt
   plugins/ssreflect/ssreflect_plugin__Ssrtacticals.cmti
   plugins/ssreflect/ssreflect_plugin__Ssrtacticals.cmx
   plugins/ssreflect/ssreflect_plugin__Ssrvernac.cmi
   plugins/ssreflect/ssreflect_plugin__Ssrvernac.cmt
   plugins/ssreflect/ssreflect_plugin__Ssrvernac.cmti
   plugins/ssreflect/ssreflect_plugin__Ssrvernac.cmx
   plugins/ssreflect/ssreflect_plugin__Ssrview.cmi
   plugins/ssreflect/ssreflect_plugin__Ssrview.cmt
   plugins/ssreflect/ssreflect_plugin__Ssrview.cmti
   plugins/ssreflect/ssreflect_plugin__Ssrview.cmx
   plugins/ssreflect/ssrelim.ml
   plugins/ssreflect/ssrelim.mli
   plugins/ssreflect/ssrequality.ml
   plugins/ssreflect/ssrequality.mli
   plugins/ssreflect/ssrfwd.ml
   plugins/ssreflect/ssrfwd.mli
   plugins/ssreflect/ssripats.ml
   plugins/ssreflect/ssripats.mli
   plugins/ssreflect/ssrparser.ml
   plugins/ssreflect/ssrparser.mli
   plugins/ssreflect/ssrprinters.ml
   plugins/ssreflect/ssrprinters.mli
   plugins/ssreflect/ssrtacticals.ml
   plugins/ssreflect/ssrtacticals.mli
   plugins/ssreflect/ssrvernac.ml
   plugins/ssreflect/ssrvernac.mli
   plugins/ssreflect/ssrview.ml
   plugins/ssreflect/ssrview.mli
   plugins/ssrmatching/g_ssrmatching.ml
   plugins/ssrmatching/g_ssrmatching.mli
   plugins/ssrmatching/ssrmatching.ml
   plugins/ssrmatching/ssrmatching.mli
   plugins/ssrmatching/ssrmatching_plugin.a
   plugins/ssrmatching/ssrmatching_plugin.cma
   plugins/ssrmatching/ssrmatching_plugin.cmi
   plugins/ssrmatching/ssrmatching_plugin.cmt
   plugins/ssrmatching/ssrmatching_plugin.cmx
   plugins/ssrmatching/ssrmatching_plugin.cmxa
   plugins/ssrmatching/ssrmatching_plugin.ml
   plugins/ssrmatching/ssrmatching_plugin__G_ssrmatching.cmi
   plugins/ssrmatching/ssrmatching_plugin__G_ssrmatching.cmt
   plugins/ssrmatching/ssrmatching_plugin__G_ssrmatching.cmti
   plugins/ssrmatching/ssrmatching_plugin__G_ssrmatching.cmx
   plugins/ssrmatching/ssrmatching_plugin__Ssrmatching.cmi
   plugins/ssrmatching/ssrmatching_plugin__Ssrmatching.cmt
   plugins/ssrmatching/ssrmatching_plugin__Ssrmatching.cmti
   plugins/ssrmatching/ssrmatching_plugin__Ssrmatching.cmx
   plugins/tauto/tauto.ml
   plugins/tauto/tauto.mli
   plugins/tauto/tauto_plugin.a
   plugins/tauto/tauto_plugin.cma
   plugins/tauto/tauto_plugin.cmi
   plugins/tauto/tauto_plugin.cmt
   plugins/tauto/tauto_plugin.cmx
   plugins/tauto/tauto_plugin.cmxa
   plugins/tauto/tauto_plugin.ml
   plugins/tauto/tauto_plugin__Tauto.cmi
   plugins/tauto/tauto_plugin__Tauto.cmt
   plugins/tauto/tauto_plugin__Tauto.cmti
   plugins/tauto/tauto_plugin__Tauto.cmx
   plugins/tutorial/p0/g_tuto0.ml
   plugins/tutorial/p0/tuto0_main.ml
   plugins/tutorial/p0/tuto0_main.mli
   plugins/tutorial/p0/tuto0_plugin.a
   plugins/tutorial/p0/tuto0_plugin.cma
   plugins/tutorial/p0/tuto0_plugin.cmi
   plugins/tutorial/p0/tuto0_plugin.cmt
   plugins/tutorial/p0/tuto0_plugin.cmx
   plugins/tutorial/p0/tuto0_plugin.cmxa
   plugins/tutorial/p0/tuto0_plugin.ml
   plugins/tutorial/p0/tuto0_plugin__G_tuto0.cmi
   plugins/tutorial/p0/tuto0_plugin__G_tuto0.cmt
   plugins/tutorial/p0/tuto0_plugin__G_tuto0.cmx
   plugins/tutorial/p0/tuto0_plugin__Tuto0_main.cmi
   plugins/tutorial/p0/tuto0_plugin__Tuto0_main.cmt
   plugins/tutorial/p0/tuto0_plugin__Tuto0_main.cmti
   plugins/tutorial/p0/tuto0_plugin__Tuto0_main.cmx
   plugins/tutorial/p1/g_tuto1.ml
   plugins/tutorial/p1/inspector.ml
   plugins/tutorial/p1/inspector.mli
   plugins/tutorial/p1/simple_check.ml
   plugins/tutorial/p1/simple_check.mli
   plugins/tutorial/p1/simple_declare.ml
   plugins/tutorial/p1/simple_declare.mli
   plugins/tutorial/p1/simple_print.ml
   plugins/tutorial/p1/simple_print.mli
   plugins/tutorial/p1/tuto1_plugin.a
   plugins/tutorial/p1/tuto1_plugin.cma
   plugins/tutorial/p1/tuto1_plugin.cmi
   plugins/tutorial/p1/tuto1_plugin.cmt
   plugins/tutorial/p1/tuto1_plugin.cmx
   plugins/tutorial/p1/tuto1_plugin.cmxa
   plugins/tutorial/p1/tuto1_plugin.ml
   plugins/tutorial/p1/tuto1_plugin__G_tuto1.cmi
   plugins/tutorial/p1/tuto1_plugin__G_tuto1.cmt
   plugins/tutorial/p1/tuto1_plugin__G_tuto1.cmx
   plugins/tutorial/p1/tuto1_plugin__Inspector.cmi
   plugins/tutorial/p1/tuto1_plugin__Inspector.cmt
   plugins/tutorial/p1/tuto1_plugin__Inspector.cmti
   plugins/tutorial/p1/tuto1_plugin__Inspector.cmx
   plugins/tutorial/p1/tuto1_plugin__Simple_check.cmi
   plugins/tutorial/p1/tuto1_plugin__Simple_check.cmt
   plugins/tutorial/p1/tuto1_plugin__Simple_check.cmti
   plugins/tutorial/p1/tuto1_plugin__Simple_check.cmx
   plugins/tutorial/p1/tuto1_plugin__Simple_declare.cmi
   plugins/tutorial/p1/tuto1_plugin__Simple_declare.cmt
   plugins/tutorial/p1/tuto1_plugin__Simple_declare.cmti
   plugins/tutorial/p1/tuto1_plugin__Simple_declare.cmx
   plugins/tutorial/p1/tuto1_plugin__Simple_print.cmi
   plugins/tutorial/p1/tuto1_plugin__Simple_print.cmt
   plugins/tutorial/p1/tuto1_plugin__Simple_print.cmti
   plugins/tutorial/p1/tuto1_plugin__Simple_print.cmx
   plugins/tutorial/p2/counter.ml
   plugins/tutorial/p2/counter.mli
   plugins/tutorial/p2/custom.ml
   plugins/tutorial/p2/custom.mli
   plugins/tutorial/p2/g_tuto2.ml
   plugins/tutorial/p2/persistent_counter.ml
   plugins/tutorial/p2/persistent_counter.mli
   plugins/tutorial/p2/tuto2_plugin.a
   plugins/tutorial/p2/tuto2_plugin.cma
   plugins/tutorial/p2/tuto2_plugin.cmi
   plugins/tutorial/p2/tuto2_plugin.cmt
   plugins/tutorial/p2/tuto2_plugin.cmx
   plugins/tutorial/p2/tuto2_plugin.cmxa
   plugins/tutorial/p2/tuto2_plugin.ml
   plugins/tutorial/p2/tuto2_plugin__Counter.cmi
   plugins/tutorial/p2/tuto2_plugin__Counter.cmt
   plugins/tutorial/p2/tuto2_plugin__Counter.cmti
   plugins/tutorial/p2/tuto2_plugin__Counter.cmx
   plugins/tutorial/p2/tuto2_plugin__Custom.cmi
   plugins/tutorial/p2/tuto2_plugin__Custom.cmt
   plugins/tutorial/p2/tuto2_plugin__Custom.cmti
   plugins/tutorial/p2/tuto2_plugin__Custom.cmx
   plugins/tutorial/p2/tuto2_plugin__G_tuto2.cmi
   plugins/tutorial/p2/tuto2_plugin__G_tuto2.cmt
   plugins/tutorial/p2/tuto2_plugin__G_tuto2.cmx
   plugins/tutorial/p2/tuto2_plugin__Persistent_counter.cmi
   plugins/tutorial/p2/tuto2_plugin__Persistent_counter.cmt
   plugins/tutorial/p2/tuto2_plugin__Persistent_counter.cmti
   plugins/tutorial/p2/tuto2_plugin__Persistent_counter.cmx
   plugins/tutorial/p3/construction_game.ml
   plugins/tutorial/p3/construction_game.mli
   plugins/tutorial/p3/g_tuto3.ml
   plugins/tutorial/p3/tuto3_plugin.a
   plugins/tutorial/p3/tuto3_plugin.cma
   plugins/tutorial/p3/tuto3_plugin.cmi
   plugins/tutorial/p3/tuto3_plugin.cmt
   plugins/tutorial/p3/tuto3_plugin.cmx
   plugins/tutorial/p3/tuto3_plugin.cmxa
   plugins/tutorial/p3/tuto3_plugin.ml
   plugins/tutorial/p3/tuto3_plugin__Construction_game.cmi
   plugins/tutorial/p3/tuto3_plugin__Construction_game.cmt
   plugins/tutorial/p3/tuto3_plugin__Construction_game.cmti
   plugins/tutorial/p3/tuto3_plugin__Construction_game.cmx
   plugins/tutorial/p3/tuto3_plugin__G_tuto3.cmi
   plugins/tutorial/p3/tuto3_plugin__G_tuto3.cmt
   plugins/tutorial/p3/tuto3_plugin__G_tuto3.cmx
   plugins/tutorial/p3/tuto3_plugin__Tuto_tactic.cmi
   plugins/tutorial/p3/tuto3_plugin__Tuto_tactic.cmt
   plugins/tutorial/p3/tuto3_plugin__Tuto_tactic.cmti
   plugins/tutorial/p3/tuto3_plugin__Tuto_tactic.cmx
   plugins/tutorial/p3/tuto_tactic.ml
   plugins/tutorial/p3/tuto_tactic.mli
   plugins/zify/g_zify.ml
   plugins/zify/zify.ml
   plugins/zify/zify.mli
   plugins/zify/zify_plugin.a
   plugins/zify/zify_plugin.cma
   plugins/zify/zify_plugin.cmi
   plugins/zify/zify_plugin.cmt
   plugins/zify/zify_plugin.cmx
   plugins/zify/zify_plugin.cmxa
   plugins/zify/zify_plugin.ml
   plugins/zify/zify_plugin__G_zify.cmi
   plugins/zify/zify_plugin__G_zify.cmt
   plugins/zify/zify_plugin__G_zify.cmx
   plugins/zify/zify_plugin__Zify.cmi
   plugins/zify/zify_plugin__Zify.cmt
   plugins/zify/zify_plugin__Zify.cmti
   plugins/zify/zify_plugin__Zify.cmx
   pretyping/arguments_renaming.cmi
   pretyping/arguments_renaming.cmt
   pretyping/arguments_renaming.cmti
   pretyping/arguments_renaming.cmx
   pretyping/arguments_renaming.ml
   pretyping/arguments_renaming.mli
   pretyping/cases.cmi
   pretyping/cases.cmt
   pretyping/cases.cmti
   pretyping/cases.cmx
   pretyping/cases.ml
   pretyping/cases.mli
   pretyping/cbv.cmi
   pretyping/cbv.cmt
   pretyping/cbv.cmti
   pretyping/cbv.cmx
   pretyping/cbv.ml
   pretyping/cbv.mli
   pretyping/coercion.cmi
   pretyping/coercion.cmt
   pretyping/coercion.cmti
   pretyping/coercion.cmx
   pretyping/coercion.ml
   pretyping/coercion.mli
   pretyping/coercionops.cmi
   pretyping/coercionops.cmt
   pretyping/coercionops.cmti
   pretyping/coercionops.cmx
   pretyping/coercionops.ml
   pretyping/coercionops.mli
   pretyping/constr_matching.cmi
   pretyping/constr_matching.cmt
   pretyping/constr_matching.cmti
   pretyping/constr_matching.cmx
   pretyping/constr_matching.ml
   pretyping/constr_matching.mli
   pretyping/detyping.cmi
   pretyping/detyping.cmt
   pretyping/detyping.cmti
   pretyping/detyping.cmx
   pretyping/detyping.ml
   pretyping/detyping.mli
   pretyping/evarconv.cmi
   pretyping/evarconv.cmt
   pretyping/evarconv.cmti
   pretyping/evarconv.cmx
   pretyping/evarconv.ml
   pretyping/evarconv.mli
   pretyping/evardefine.cmi
   pretyping/evardefine.cmt
   pretyping/evardefine.cmti
   pretyping/evardefine.cmx
   pretyping/evardefine.ml
   pretyping/evardefine.mli
   pretyping/evarsolve.cmi
   pretyping/evarsolve.cmt
   pretyping/evarsolve.cmti
   pretyping/evarsolve.cmx
   pretyping/evarsolve.ml
   pretyping/evarsolve.mli
   pretyping/find_subterm.cmi
   pretyping/find_subterm.cmt
   pretyping/find_subterm.cmti
   pretyping/find_subterm.cmx
   pretyping/find_subterm.ml
   pretyping/find_subterm.mli
   pretyping/geninterp.cmi
   pretyping/geninterp.cmt
   pretyping/geninterp.cmti
   pretyping/geninterp.cmx
   pretyping/geninterp.ml
   pretyping/geninterp.mli
   pretyping/globEnv.cmi
   pretyping/globEnv.cmt
   pretyping/globEnv.cmti
   pretyping/globEnv.cmx
   pretyping/globEnv.ml
   pretyping/globEnv.mli
   pretyping/glob_ops.cmi
   pretyping/glob_ops.cmt
   pretyping/glob_ops.cmti
   pretyping/glob_ops.cmx
   pretyping/glob_ops.ml
   pretyping/glob_ops.mli
   pretyping/glob_term.cmi
   pretyping/glob_term.cmt
   pretyping/glob_term.cmx
   pretyping/glob_term.ml
   pretyping/heads.cmi
   pretyping/heads.cmt
   pretyping/heads.cmti
   pretyping/heads.cmx
   pretyping/heads.ml
   pretyping/heads.mli
   pretyping/indrec.cmi
   pretyping/indrec.cmt
   pretyping/indrec.cmti
   pretyping/indrec.cmx
   pretyping/indrec.ml
   pretyping/indrec.mli
   pretyping/inductiveops.cmi
   pretyping/inductiveops.cmt
   pretyping/inductiveops.cmti
   pretyping/inductiveops.cmx
   pretyping/inductiveops.ml
   pretyping/inductiveops.mli
   pretyping/keys.cmi
   pretyping/keys.cmt
   pretyping/keys.cmti
   pretyping/keys.cmx
   pretyping/keys.ml
   pretyping/keys.mli
   pretyping/locus.cmi
   pretyping/locus.cmt
   pretyping/locus.cmx
   pretyping/locus.ml
   pretyping/locusops.cmi
   pretyping/locusops.cmt
   pretyping/locusops.cmti
   pretyping/locusops.cmx
   pretyping/locusops.ml
   pretyping/locusops.mli
   pretyping/ltac_pretype.cmi
   pretyping/ltac_pretype.cmt
   pretyping/ltac_pretype.cmx
   pretyping/ltac_pretype.ml
   pretyping/nativenorm.cmi
   pretyping/nativenorm.cmt
   pretyping/nativenorm.cmti
   pretyping/nativenorm.cmx
   pretyping/nativenorm.ml
   pretyping/nativenorm.mli
   pretyping/pattern.cmi
   pretyping/pattern.cmt
   pretyping/pattern.cmx
   pretyping/pattern.ml
   pretyping/patternops.cmi
   pretyping/patternops.cmt
   pretyping/patternops.cmti
   pretyping/patternops.cmx
   pretyping/patternops.ml
   pretyping/patternops.mli
   pretyping/pretype_errors.cmi
   pretyping/pretype_errors.cmt
   pretyping/pretype_errors.cmti
   pretyping/pretype_errors.cmx
   pretyping/pretype_errors.ml
   pretyping/pretype_errors.mli
   pretyping/pretyping.a
   pretyping/pretyping.cma
   pretyping/pretyping.cmi
   pretyping/pretyping.cmt
   pretyping/pretyping.cmti
   pretyping/pretyping.cmx
   pretyping/pretyping.cmxa
   pretyping/pretyping.ml
   pretyping/pretyping.mli
   pretyping/program.cmi
   pretyping/program.cmt
   pretyping/program.cmti
   pretyping/program.cmx
   pretyping/program.ml
   pretyping/program.mli
   pretyping/reductionops.cmi
   pretyping/reductionops.cmt
   pretyping/reductionops.cmti
   pretyping/reductionops.cmx
   pretyping/reductionops.ml
   pretyping/reductionops.mli
   pretyping/retyping.cmi
   pretyping/retyping.cmt
   pretyping/retyping.cmti
   pretyping/retyping.cmx
   pretyping/retyping.ml
   pretyping/retyping.mli
   pretyping/structures.cmi
   pretyping/structures.cmt
   pretyping/structures.cmti
   pretyping/structures.cmx
   pretyping/structures.ml
   pretyping/structures.mli
   pretyping/tacred.cmi
   pretyping/tacred.cmt
   pretyping/tacred.cmti
   pretyping/tacred.cmx
   pretyping/tacred.ml
   pretyping/tacred.mli
   pretyping/typeclasses.cmi
   pretyping/typeclasses.cmt
   pretyping/typeclasses.cmti
   pretyping/typeclasses.cmx
   pretyping/typeclasses.ml
   pretyping/typeclasses.mli
   pretyping/typeclasses_errors.cmi
   pretyping/typeclasses_errors.cmt
   pretyping/typeclasses_errors.cmti
   pretyping/typeclasses_errors.cmx
   pretyping/typeclasses_errors.ml
   pretyping/typeclasses_errors.mli
   pretyping/typing.cmi
   pretyping/typing.cmt
   pretyping/typing.cmti
   pretyping/typing.cmx
   pretyping/typing.ml
   pretyping/typing.mli
   pretyping/unification.cmi
   pretyping/unification.cmt
   pretyping/unification.cmti
   pretyping/unification.cmx
   pretyping/unification.ml
   pretyping/unification.mli
   pretyping/vnorm.cmi
   pretyping/vnorm.cmt
   pretyping/vnorm.cmti
   pretyping/vnorm.cmx
   pretyping/vnorm.ml
   pretyping/vnorm.mli
   printing/genprint.cmi
   printing/genprint.cmt
   printing/genprint.cmti
   printing/genprint.cmx
   printing/genprint.ml
   printing/genprint.mli
   printing/ppconstr.cmi
   printing/ppconstr.cmt
   printing/ppconstr.cmti
   printing/ppconstr.cmx
   printing/ppconstr.ml
   printing/ppconstr.mli
   printing/ppextend.cmi
   printing/ppextend.cmt
   printing/ppextend.cmti
   printing/ppextend.cmx
   printing/ppextend.ml
   printing/ppextend.mli
   printing/pputils.cmi
   printing/pputils.cmt
   printing/pputils.cmti
   printing/pputils.cmx
   printing/pputils.ml
   printing/pputils.mli
   printing/printer.cmi
   printing/printer.cmt
   printing/printer.cmti
   printing/printer.cmx
   printing/printer.ml
   printing/printer.mli
   printing/printing.a
   printing/printing.cma
   printing/printing.cmxa
   printing/proof_diffs.cmi
   printing/proof_diffs.cmt
   printing/proof_diffs.cmti
   printing/proof_diffs.cmx
   printing/proof_diffs.ml
   printing/proof_diffs.mli
   proofs/clenv.cmi
   proofs/clenv.cmt
   proofs/clenv.cmti
   proofs/clenv.cmx
   proofs/clenv.ml
   proofs/clenv.mli
   proofs/evar_refiner.cmi
   proofs/evar_refiner.cmt
   proofs/evar_refiner.cmti
   proofs/evar_refiner.cmx
   proofs/evar_refiner.ml
   proofs/evar_refiner.mli
   proofs/goal.cmi
   proofs/goal.cmt
   proofs/goal.cmti
   proofs/goal.cmx
   proofs/goal.ml
   proofs/goal.mli
   proofs/goal_select.cmi
   proofs/goal_select.cmt
   proofs/goal_select.cmti
   proofs/goal_select.cmx
   proofs/goal_select.ml
   proofs/goal_select.mli
   proofs/logic.cmi
   proofs/logic.cmt
   proofs/logic.cmti
   proofs/logic.cmx
   proofs/logic.ml
   proofs/logic.mli
   proofs/miscprint.cmi
   proofs/miscprint.cmt
   proofs/miscprint.cmti
   proofs/miscprint.cmx
   proofs/miscprint.ml
   proofs/miscprint.mli
   proofs/proof.cmi
   proofs/proof.cmt
   proofs/proof.cmti
   proofs/proof.cmx
   proofs/proof.ml
   proofs/proof.mli
   proofs/proof_bullet.cmi
   proofs/proof_bullet.cmt
   proofs/proof_bullet.cmti
   proofs/proof_bullet.cmx
   proofs/proof_bullet.ml
   proofs/proof_bullet.mli
   proofs/proofs.a
   proofs/proofs.cma
   proofs/proofs.cmxa
   proofs/refine.cmi
   proofs/refine.cmt
   proofs/refine.cmti
   proofs/refine.cmx
   proofs/refine.ml
   proofs/refine.mli
   proofs/tacmach.cmi
   proofs/tacmach.cmt
   proofs/tacmach.cmti
   proofs/tacmach.cmx
   proofs/tacmach.ml
   proofs/tacmach.mli
   proofs/tactypes.cmi
   proofs/tactypes.cmt
   proofs/tactypes.cmx
   proofs/tactypes.ml
   revision
   stm/asyncTaskQueue.cmi
   stm/asyncTaskQueue.cmt
   stm/asyncTaskQueue.cmti
   stm/asyncTaskQueue.cmx
   stm/asyncTaskQueue.ml
   stm/asyncTaskQueue.mli
   stm/coqworkmgrApi.cmi
   stm/coqworkmgrApi.cmt
   stm/coqworkmgrApi.cmti
   stm/coqworkmgrApi.cmx
   stm/coqworkmgrApi.ml
   stm/coqworkmgrApi.mli
   stm/dag.cmi
   stm/dag.cmt
   stm/dag.cmti
   stm/dag.cmx
   stm/dag.ml
   stm/dag.mli
   stm/partac.cmi
   stm/partac.cmt
   stm/partac.cmti
   stm/partac.cmx
   stm/partac.ml
   stm/partac.mli
   stm/proofBlockDelimiter.cmi
   stm/proofBlockDelimiter.cmt
   stm/proofBlockDelimiter.cmti
   stm/proofBlockDelimiter.cmx
   stm/proofBlockDelimiter.ml
   stm/proofBlockDelimiter.mli
   stm/spawned.cmi
   stm/spawned.cmt
   stm/spawned.cmti
   stm/spawned.cmx
   stm/spawned.ml
   stm/spawned.mli
   stm/stm.a
   stm/stm.cma
   stm/stm.cmi
   stm/stm.cmt
   stm/stm.cmti
   stm/stm.cmx
   stm/stm.cmxa
   stm/stm.ml
   stm/stm.mli
   stm/stmargs.cmi
   stm/stmargs.cmt
   stm/stmargs.cmti
   stm/stmargs.cmx
   stm/stmargs.ml
   stm/stmargs.mli
   stm/tQueue.cmi
   stm/tQueue.cmt
   stm/tQueue.cmti
   stm/tQueue.cmx
   stm/tQueue.ml
   stm/tQueue.mli
   stm/vcs.cmi
   stm/vcs.cmt
   stm/vcs.cmti
   stm/vcs.cmx
   stm/vcs.ml
   stm/vcs.mli
   stm/vio_checking.cmi
   stm/vio_checking.cmt
   stm/vio_checking.cmti
   stm/vio_checking.cmx
   stm/vio_checking.ml
   stm/vio_checking.mli
   stm/workerPool.cmi
   stm/workerPool.cmt
   stm/workerPool.cmti
   stm/workerPool.cmx
   stm/workerPool.ml
   stm/workerPool.mli
   sysinit/coqargs.cmi
   sysinit/coqargs.cmt
   sysinit/coqargs.cmti
   sysinit/coqargs.cmx
   sysinit/coqargs.ml
   sysinit/coqargs.mli
   sysinit/coqinit.cmi
   sysinit/coqinit.cmt
   sysinit/coqinit.cmti
   sysinit/coqinit.cmx
   sysinit/coqinit.ml
   sysinit/coqinit.mli
   sysinit/coqloadpath.cmi
   sysinit/coqloadpath.cmt
   sysinit/coqloadpath.cmti
   sysinit/coqloadpath.cmx
   sysinit/coqloadpath.ml
   sysinit/coqloadpath.mli
   sysinit/sysinit.a
   sysinit/sysinit.cma
   sysinit/sysinit.cmxa
   tactics/abstract.cmi
   tactics/abstract.cmt
   tactics/abstract.cmti
   tactics/abstract.cmx
   tactics/abstract.ml
   tactics/abstract.mli
   tactics/auto.cmi
   tactics/auto.cmt
   tactics/auto.cmti
   tactics/auto.cmx
   tactics/auto.ml
   tactics/auto.mli
   tactics/autorewrite.cmi
   tactics/autorewrite.cmt
   tactics/autorewrite.cmti
   tactics/autorewrite.cmx
   tactics/autorewrite.ml
   tactics/autorewrite.mli
   tactics/btermdn.cmi
   tactics/btermdn.cmt
   tactics/btermdn.cmti
   tactics/btermdn.cmx
   tactics/btermdn.ml
   tactics/btermdn.mli
   tactics/cbn.cmi
   tactics/cbn.cmt
   tactics/cbn.cmti
   tactics/cbn.cmx
   tactics/cbn.ml
   tactics/cbn.mli
   tactics/class_tactics.cmi
   tactics/class_tactics.cmt
   tactics/class_tactics.cmti
   tactics/class_tactics.cmx
   tactics/class_tactics.ml
   tactics/class_tactics.mli
   tactics/contradiction.cmi
   tactics/contradiction.cmt
   tactics/contradiction.cmti
   tactics/contradiction.cmx
   tactics/contradiction.ml
   tactics/contradiction.mli
   tactics/declareScheme.cmi
   tactics/declareScheme.cmt
   tactics/declareScheme.cmti
   tactics/declareScheme.cmx
   tactics/declareScheme.ml
   tactics/declareScheme.mli
   tactics/dn.cmi
   tactics/dn.cmt
   tactics/dn.cmti
   tactics/dn.cmx
   tactics/dn.ml
   tactics/dn.mli
   tactics/dnet.cmi
   tactics/dnet.cmt
   tactics/dnet.cmti
   tactics/dnet.cmx
   tactics/dnet.ml
   tactics/dnet.mli
   tactics/eauto.cmi
   tactics/eauto.cmt
   tactics/eauto.cmti
   tactics/eauto.cmx
   tactics/eauto.ml
   tactics/eauto.mli
   tactics/elim.cmi
   tactics/elim.cmt
   tactics/elim.cmti
   tactics/elim.cmx
   tactics/elim.ml
   tactics/elim.mli
   tactics/elimschemes.cmi
   tactics/elimschemes.cmt
   tactics/elimschemes.cmti
   tactics/elimschemes.cmx
   tactics/elimschemes.ml
   tactics/elimschemes.mli
   tactics/eqdecide.cmi
   tactics/eqdecide.cmt
   tactics/eqdecide.cmti
   tactics/eqdecide.cmx
   tactics/eqdecide.ml
   tactics/eqdecide.mli
   tactics/eqschemes.cmi
   tactics/eqschemes.cmt
   tactics/eqschemes.cmti
   tactics/eqschemes.cmx
   tactics/eqschemes.ml
   tactics/eqschemes.mli
   tactics/equality.cmi
   tactics/equality.cmt
   tactics/equality.cmti
   tactics/equality.cmx
   tactics/equality.ml
   tactics/equality.mli
   tactics/genredexpr.cmi
   tactics/genredexpr.cmt
   tactics/genredexpr.cmx
   tactics/genredexpr.ml
   tactics/hints.cmi
   tactics/hints.cmt
   tactics/hints.cmti
   tactics/hints.cmx
   tactics/hints.ml
   tactics/hints.mli
   tactics/hipattern.cmi
   tactics/hipattern.cmt
   tactics/hipattern.cmti
   tactics/hipattern.cmx
   tactics/hipattern.ml
   tactics/hipattern.mli
   tactics/ind_tables.cmi
   tactics/ind_tables.cmt
   tactics/ind_tables.cmti
   tactics/ind_tables.cmx
   tactics/ind_tables.ml
   tactics/ind_tables.mli
   tactics/inv.cmi
   tactics/inv.cmt
   tactics/inv.cmti
   tactics/inv.cmx
   tactics/inv.ml
   tactics/inv.mli
   tactics/ppred.cmi
   tactics/ppred.cmt
   tactics/ppred.cmti
   tactics/ppred.cmx
   tactics/ppred.ml
   tactics/ppred.mli
   tactics/redexpr.cmi
   tactics/redexpr.cmt
   tactics/redexpr.cmti
   tactics/redexpr.cmx
   tactics/redexpr.ml
   tactics/redexpr.mli
   tactics/redops.cmi
   tactics/redops.cmt
   tactics/redops.cmti
   tactics/redops.cmx
   tactics/redops.ml
   tactics/redops.mli
   tactics/rewrite.cmi
   tactics/rewrite.cmt
   tactics/rewrite.cmti
   tactics/rewrite.cmx
   tactics/rewrite.ml
   tactics/rewrite.mli
   tactics/tacticals.cmi
   tactics/tacticals.cmt
   tactics/tacticals.cmti
   tactics/tacticals.cmx
   tactics/tacticals.ml
   tactics/tacticals.mli
   tactics/tactics.a
   tactics/tactics.cma
   tactics/tactics.cmi
   tactics/tactics.cmt
   tactics/tactics.cmti
   tactics/tactics.cmx
   tactics/tactics.cmxa
   tactics/tactics.ml
   tactics/tactics.mli
   tactics/term_dnet.cmi
   tactics/term_dnet.cmt
   tactics/term_dnet.cmti
   tactics/term_dnet.cmx
   tactics/term_dnet.ml
   tactics/term_dnet.mli
   tools/CoqMakefile.in
   tools/coqdoc/coqdoc.css
   tools/coqdoc/coqdoc.sty
   top_printers/top_printers.a
   top_printers/top_printers.cma
   top_printers/top_printers.cmi
   top_printers/top_printers.cmt
   top_printers/top_printers.cmti
   top_printers/top_printers.cmx
   top_printers/top_printers.cmxa
   top_printers/top_printers.ml
   top_printers/top_printers.mli
   toplevel/ccompile.cmi
   toplevel/ccompile.cmt
   toplevel/ccompile.cmti
   toplevel/ccompile.cmx
   toplevel/ccompile.ml
   toplevel/ccompile.mli
   toplevel/coqc.cmi
   toplevel/coqc.cmt
   toplevel/coqc.cmti
   toplevel/coqc.cmx
   toplevel/coqc.ml
   toplevel/coqc.mli
   toplevel/coqcargs.cmi
   toplevel/coqcargs.cmt
   toplevel/coqcargs.cmti
   toplevel/coqcargs.cmx
   toplevel/coqcargs.ml
   toplevel/coqcargs.mli
   toplevel/coqloop.cmi
   toplevel/coqloop.cmt
   toplevel/coqloop.cmti
   toplevel/coqloop.cmx
   toplevel/coqloop.ml
   toplevel/coqloop.mli
   toplevel/coqrc.cmi
   toplevel/coqrc.cmt
   toplevel/coqrc.cmti
   toplevel/coqrc.cmx
   toplevel/coqrc.ml
   toplevel/coqrc.mli
   toplevel/coqtop.cmi
   toplevel/coqtop.cmt
   toplevel/coqtop.cmti
   toplevel/coqtop.cmx
   toplevel/coqtop.ml
   toplevel/coqtop.mli
   toplevel/g_toplevel.cmi
   toplevel/g_toplevel.cmt
   toplevel/g_toplevel.cmx
   toplevel/g_toplevel.ml
   toplevel/toplevel.a
   toplevel/toplevel.cma
   toplevel/toplevel.cmxa
   toplevel/vernac.cmi
   toplevel/vernac.cmt
   toplevel/vernac.cmti
   toplevel/vernac.cmx
   toplevel/vernac.ml
   toplevel/vernac.mli
   toplevel/workerLoop.cmi
   toplevel/workerLoop.cmt
   toplevel/workerLoop.cmti
   toplevel/workerLoop.cmx
   toplevel/workerLoop.ml
   toplevel/workerLoop.mli
   vernac/assumptions.cmi
   vernac/assumptions.cmt
   vernac/assumptions.cmti
   vernac/assumptions.cmx
   vernac/assumptions.ml
   vernac/assumptions.mli
   vernac/attributes.cmi
   vernac/attributes.cmt
   vernac/attributes.cmti
   vernac/attributes.cmx
   vernac/attributes.ml
   vernac/attributes.mli
   vernac/auto_ind_decl.cmi
   vernac/auto_ind_decl.cmt
   vernac/auto_ind_decl.cmti
   vernac/auto_ind_decl.cmx
   vernac/auto_ind_decl.ml
   vernac/auto_ind_decl.mli
   vernac/canonical.cmi
   vernac/canonical.cmt
   vernac/canonical.cmti
   vernac/canonical.cmx
   vernac/canonical.ml
   vernac/canonical.mli
   vernac/classes.cmi
   vernac/classes.cmt
   vernac/classes.cmti
   vernac/classes.cmx
   vernac/classes.ml
   vernac/classes.mli
   vernac/comArguments.cmi
   vernac/comArguments.cmt
   vernac/comArguments.cmti
   vernac/comArguments.cmx
   vernac/comArguments.ml
   vernac/comArguments.mli
   vernac/comAssumption.cmi
   vernac/comAssumption.cmt
   vernac/comAssumption.cmti
   vernac/comAssumption.cmx
   vernac/comAssumption.ml
   vernac/comAssumption.mli
   vernac/comCoercion.cmi
   vernac/comCoercion.cmt
   vernac/comCoercion.cmti
   vernac/comCoercion.cmx
   vernac/comCoercion.ml
   vernac/comCoercion.mli
   vernac/comDefinition.cmi
   vernac/comDefinition.cmt
   vernac/comDefinition.cmti
   vernac/comDefinition.cmx
   vernac/comDefinition.ml
   vernac/comDefinition.mli
   vernac/comExtraDeps.cmi
   vernac/comExtraDeps.cmt
   vernac/comExtraDeps.cmti
   vernac/comExtraDeps.cmx
   vernac/comExtraDeps.ml
   vernac/comExtraDeps.mli
   vernac/comFixpoint.cmi
   vernac/comFixpoint.cmt
   vernac/comFixpoint.cmti
   vernac/comFixpoint.cmx
   vernac/comFixpoint.ml
   vernac/comFixpoint.mli
   vernac/comHints.cmi
   vernac/comHints.cmt
   vernac/comHints.cmti
   vernac/comHints.cmx
   vernac/comHints.ml
   vernac/comHints.mli
   vernac/comInductive.cmi
   vernac/comInductive.cmt
   vernac/comInductive.cmti
   vernac/comInductive.cmx
   vernac/comInductive.ml
   vernac/comInductive.mli
   vernac/comPrimitive.cmi
   vernac/comPrimitive.cmt
   vernac/comPrimitive.cmti
   vernac/comPrimitive.cmx
   vernac/comPrimitive.ml
   vernac/comPrimitive.mli
   vernac/comProgramFixpoint.cmi
   vernac/comProgramFixpoint.cmt
   vernac/comProgramFixpoint.cmti
   vernac/comProgramFixpoint.cmx
   vernac/comProgramFixpoint.ml
   vernac/comProgramFixpoint.mli
   vernac/comSearch.cmi
   vernac/comSearch.cmt
   vernac/comSearch.cmti
   vernac/comSearch.cmx
   vernac/comSearch.ml
   vernac/comSearch.mli
   vernac/comTactic.cmi
   vernac/comTactic.cmt
   vernac/comTactic.cmti
   vernac/comTactic.cmx
   vernac/comTactic.ml
   vernac/comTactic.mli
   vernac/debugHook.cmi
   vernac/debugHook.cmt
   vernac/debugHook.cmti
   vernac/debugHook.cmx
   vernac/debugHook.ml
   vernac/debugHook.mli
   vernac/declare.cmi
   vernac/declare.cmt
   vernac/declare.cmti
   vernac/declare.cmx
   vernac/declare.ml
   vernac/declare.mli
   vernac/declareInd.cmi
   vernac/declareInd.cmt
   vernac/declareInd.cmti
   vernac/declareInd.cmx
   vernac/declareInd.ml
   vernac/declareInd.mli
   vernac/declareUctx.cmi
   vernac/declareUctx.cmt
   vernac/declareUctx.cmti
   vernac/declareUctx.cmx
   vernac/declareUctx.ml
   vernac/declareUctx.mli
   vernac/declareUniv.cmi
   vernac/declareUniv.cmt
   vernac/declareUniv.cmti
   vernac/declareUniv.cmx
   vernac/declareUniv.ml
   vernac/declareUniv.mli
   vernac/declaremods.cmi
   vernac/declaremods.cmt
   vernac/declaremods.cmti
   vernac/declaremods.cmx
   vernac/declaremods.ml
   vernac/declaremods.mli
   vernac/egramcoq.cmi
   vernac/egramcoq.cmt
   vernac/egramcoq.cmti
   vernac/egramcoq.cmx
   vernac/egramcoq.ml
   vernac/egramcoq.mli
   vernac/egramml.cmi
   vernac/egramml.cmt
   vernac/egramml.cmti
   vernac/egramml.cmx
   vernac/egramml.ml
   vernac/egramml.mli
   vernac/future.cmi
   vernac/future.cmt
   vernac/future.cmti
   vernac/future.cmx
   vernac/future.ml
   vernac/future.mli
   vernac/g_proofs.cmi
   vernac/g_proofs.cmt
   vernac/g_proofs.cmx
   vernac/g_proofs.ml
   vernac/g_vernac.cmi
   vernac/g_vernac.cmt
   vernac/g_vernac.cmx
   vernac/g_vernac.ml
   vernac/himsg.cmi
   vernac/himsg.cmt
   vernac/himsg.cmti
   vernac/himsg.cmx
   vernac/himsg.ml
   vernac/himsg.mli
   vernac/indschemes.cmi
   vernac/indschemes.cmt
   vernac/indschemes.cmti
   vernac/indschemes.cmx
   vernac/indschemes.ml
   vernac/indschemes.mli
   vernac/library.cmi
   vernac/library.cmt
   vernac/library.cmti
   vernac/library.cmx
   vernac/library.ml
   vernac/library.mli
   vernac/loadpath.cmi
   vernac/loadpath.cmt
   vernac/loadpath.cmti
   vernac/loadpath.cmx
   vernac/loadpath.ml
   vernac/loadpath.mli
   vernac/locality.cmi
   vernac/locality.cmt
   vernac/locality.cmti
   vernac/locality.cmx
   vernac/locality.ml
   vernac/locality.mli
   vernac/metasyntax.cmi
   vernac/metasyntax.cmt
   vernac/metasyntax.cmti
   vernac/metasyntax.cmx
   vernac/metasyntax.ml
   vernac/metasyntax.mli
   vernac/mltop.cmi
   vernac/mltop.cmt
   vernac/mltop.cmti
   vernac/mltop.cmx
   vernac/mltop.ml
   vernac/mltop.mli
   vernac/opaques.cmi
   vernac/opaques.cmt
   vernac/opaques.cmti
   vernac/opaques.cmx
   vernac/opaques.ml
   vernac/opaques.mli
   vernac/ppvernac.cmi
   vernac/ppvernac.cmt
   vernac/ppvernac.cmti
   vernac/ppvernac.cmx
   vernac/ppvernac.ml
   vernac/ppvernac.mli
   vernac/prettyp.cmi
   vernac/prettyp.cmt
   vernac/prettyp.cmti
   vernac/prettyp.cmx
   vernac/prettyp.ml
   vernac/prettyp.mli
   vernac/printmod.cmi
   vernac/printmod.cmt
   vernac/printmod.cmti
   vernac/printmod.cmx
   vernac/printmod.ml
   vernac/printmod.mli
   vernac/proof_using.cmi
   vernac/proof_using.cmt
   vernac/proof_using.cmti
   vernac/proof_using.cmx
   vernac/proof_using.ml
   vernac/proof_using.mli
   vernac/pvernac.cmi
   vernac/pvernac.cmt
   vernac/pvernac.cmti
   vernac/pvernac.cmx
   vernac/pvernac.ml
   vernac/pvernac.mli
   vernac/recLemmas.cmi
   vernac/recLemmas.cmt
   vernac/recLemmas.cmti
   vernac/recLemmas.cmx
   vernac/recLemmas.ml
   vernac/recLemmas.mli
   vernac/record.cmi
   vernac/record.cmt
   vernac/record.cmti
   vernac/record.cmx
   vernac/record.ml
   vernac/record.mli
   vernac/retrieveObl.cmi
   vernac/retrieveObl.cmt
   vernac/retrieveObl.cmti
   vernac/retrieveObl.cmx
   vernac/retrieveObl.ml
   vernac/retrieveObl.mli
   vernac/search.cmi
   vernac/search.cmt
   vernac/search.cmti
   vernac/search.cmx
   vernac/search.ml
   vernac/search.mli
   vernac/topfmt.cmi
   vernac/topfmt.cmt
   vernac/topfmt.cmti
   vernac/topfmt.cmx
   vernac/topfmt.ml
   vernac/topfmt.mli
   vernac/vernac.a
   vernac/vernac.cma
   vernac/vernac.cmxa
   vernac/vernac_classifier.cmi
   vernac/vernac_classifier.cmt
   vernac/vernac_classifier.cmti
   vernac/vernac_classifier.cmx
   vernac/vernac_classifier.ml
   vernac/vernac_classifier.mli
   vernac/vernacentries.cmi
   vernac/vernacentries.cmt
   vernac/vernacentries.cmti
   vernac/vernacentries.cmx
   vernac/vernacentries.ml
   vernac/vernacentries.mli
   vernac/vernacexpr.cmi
   vernac/vernacexpr.cmt
   vernac/vernacexpr.cmx
   vernac/vernacexpr.ml
   vernac/vernacextend.cmi
   vernac/vernacextend.cmt
   vernac/vernacextend.cmti
   vernac/vernacextend.cmx
   vernac/vernacextend.ml
   vernac/vernacextend.mli
   vernac/vernacinterp.cmi
   vernac/vernacinterp.cmt
   vernac/vernacinterp.cmti
   vernac/vernacinterp.cmx
   vernac/vernacinterp.ml
   vernac/vernacinterp.mli
   vernac/vernacprop.cmi
   vernac/vernacprop.cmt
   vernac/vernacprop.cmti
   vernac/vernacprop.cmx
   vernac/vernacprop.ml
   vernac/vernacprop.mli
   vernac/vernacstate.cmi
   vernac/vernacstate.cmt
   vernac/vernacstate.cmti
   vernac/vernacstate.cmx
   vernac/vernacstate.ml
   vernac/vernacstate.mli
   vm/coqrun.a
   vm/coqrun.cma
   vm/coqrun.cmi
   vm/coqrun.cmt
   vm/coqrun.cmx
   vm/coqrun.cmxa
   vm/coqrun.ml
   vm/libcoqrun_stubs.a))
 (libexec
  (boot/boot.cmxs
   clib/clib.cmxs
   config/config.cmxs
   engine/engine.cmxs
   gramlib/gramlib.cmxs
   interp/interp.cmxs
   kernel/kernel.cmxs
   lib/lib.cmxs
   library/library.cmxs
   parsing/parsing.cmxs
   plugins/btauto/btauto_plugin.cmxs
   plugins/cc/cc_plugin.cmxs
   plugins/derive/derive_plugin.cmxs
   plugins/extraction/extraction_plugin.cmxs
   plugins/firstorder/firstorder_plugin.cmxs
   plugins/funind/funind_plugin.cmxs
   plugins/ltac/ltac_plugin.cmxs
   plugins/ltac2/ltac2_plugin.cmxs
   plugins/micromega/micromega_plugin.cmxs
   plugins/nsatz/nsatz_plugin.cmxs
   plugins/number_string_notation/number_string_notation_plugin.cmxs
   plugins/ring/ring_plugin.cmxs
   plugins/rtauto/rtauto_plugin.cmxs
   plugins/ssreflect/ssreflect_plugin.cmxs
   plugins/ssrmatching/ssrmatching_plugin.cmxs
   plugins/tauto/tauto_plugin.cmxs
   plugins/tutorial/p0/tuto0_plugin.cmxs
   plugins/tutorial/p1/tuto1_plugin.cmxs
   plugins/tutorial/p2/tuto2_plugin.cmxs
   plugins/tutorial/p3/tuto3_plugin.cmxs
   plugins/zify/zify_plugin.cmxs
   pretyping/pretyping.cmxs
   printing/printing.cmxs
   proofs/proofs.cmxs
   stm/stm.cmxs
   sysinit/sysinit.cmxs
   tactics/tactics.cmxs
   tools/TimeFileMaker.py
   tools/make-both-single-timing-files.py
   tools/make-both-time-files.py
   tools/make-one-time-file.py
   top_printers/top_printers.cmxs
   toplevel/toplevel.cmxs
   vernac/vernac.cmxs
   vm/coqrun.cmxs))
 (bin
  (coq-tex
   coq_makefile
   coqc
   coqc.byte
   coqchk
   coqdep
   coqdoc
   coqnative
   coqpp
   coqproofworker.opt
   coqqueryworker.opt
   coqtacticworker.opt
   coqtop
   coqtop.byte
   coqtop.opt
   coqwc
   coqworkmgr
   csdpcert
   ocamllibdep
   votour))
 (share_root (texmf/tex/latex/misc/coqdoc.sty))
 (doc (LICENSE README.md))
 (stublibs (dllcoqrun_stubs.so))
 (man
  (man1/coq-tex.1
   man1/coq_makefile.1
   man1/coqc.1
   man1/coqchk.1
   man1/coqdep.1
   man1/coqdoc.1
   man1/coqnative.1
   man1/coqtop.1
   man1/coqtop.byte.1
   man1/coqtop.opt.1
   man1/coqwc.1)))
(library
 (name coq-core.boot)
 (kind normal)
 (synopsis "Coq Enviroment and Paths facilities")
 (archives (byte boot/boot.cma) (native boot/boot.cmxa))
 (plugins (byte boot/boot.cma) (native boot/boot.cmxs))
 (native_archives boot/boot.a)
 (requires coq-core.config)
 (main_module_name Boot)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name boot)
     (visibility public)
     (kind alias)
     (source (path Boot) (impl (path boot/boot.ml-gen))))
    (name Boot)
    (modules
     (module
      (obj_name boot__Env)
      (visibility public)
      (source (path Env) (intf (path boot/env.mli)) (impl (path boot/env.ml))))
     (module
      (obj_name boot__Path)
      (visibility public)
      (source (path Path) (impl (path boot/path.ml))))
     (module
      (obj_name boot__Usage)
      (visibility public)
      (source
       (path Usage)
       (intf (path boot/usage.mli))
       (impl (path boot/usage.ml))))
     (module
      (obj_name boot__Util)
      (visibility public)
      (source (path Util) (impl (path boot/util.ml))))))
   (wrapped true))))
(library
 (name coq-core.clib)
 (kind normal)
 (synopsis "Coq's Utility Library [general purpose]")
 (archives (byte clib/clib.cma) (native clib/clib.cmxa))
 (plugins (byte clib/clib.cma) (native clib/clib.cmxs))
 (native_archives clib/clib.a)
 (requires str unix threads)
 (modes byte native)
 (modules
  (unwrapped
   (module
    (obj_name cArray)
    (visibility public)
    (source
     (path CArray)
     (intf (path clib/cArray.mli))
     (impl (path clib/cArray.ml))))
   (module
    (obj_name cEphemeron)
    (visibility public)
    (source
     (path CEphemeron)
     (intf (path clib/cEphemeron.mli))
     (impl (path clib/cEphemeron.ml))))
   (module
    (obj_name cList)
    (visibility public)
    (source
     (path CList)
     (intf (path clib/cList.mli))
     (impl (path clib/cList.ml))))
   (module
    (obj_name cMap)
    (visibility public)
    (source
     (path CMap)
     (intf (path clib/cMap.mli))
     (impl (path clib/cMap.ml))))
   (module
    (obj_name cObj)
    (visibility public)
    (source
     (path CObj)
     (intf (path clib/cObj.mli))
     (impl (path clib/cObj.ml))))
   (module
    (obj_name cSet)
    (visibility public)
    (source
     (path CSet)
     (intf (path clib/cSet.mli))
     (impl (path clib/cSet.ml))))
   (module
    (obj_name cSig)
    (visibility public)
    (source (path CSig) (intf (path clib/cSig.mli))))
   (module
    (obj_name cString)
    (visibility public)
    (source
     (path CString)
     (intf (path clib/cString.mli))
     (impl (path clib/cString.ml))))
   (module
    (obj_name cThread)
    (visibility public)
    (source
     (path CThread)
     (intf (path clib/cThread.mli))
     (impl (path clib/cThread.ml))))
   (module
    (obj_name cUnix)
    (visibility public)
    (source
     (path CUnix)
     (intf (path clib/cUnix.mli))
     (impl (path clib/cUnix.ml))))
   (module
    (obj_name diff2)
    (visibility public)
    (source
     (path Diff2)
     (intf (path clib/diff2.mli))
     (impl (path clib/diff2.ml))))
   (module
    (obj_name dyn)
    (visibility public)
    (source (path Dyn) (intf (path clib/dyn.mli)) (impl (path clib/dyn.ml))))
   (module
    (obj_name exninfo)
    (visibility public)
    (source
     (path Exninfo)
     (intf (path clib/exninfo.mli))
     (impl (path clib/exninfo.ml))))
   (module
    (obj_name hMap)
    (visibility public)
    (source
     (path HMap)
     (intf (path clib/hMap.mli))
     (impl (path clib/hMap.ml))))
   (module
    (obj_name hashcons)
    (visibility public)
    (source
     (path Hashcons)
     (intf (path clib/hashcons.mli))
     (impl (path clib/hashcons.ml))))
   (module
    (obj_name hashset)
    (visibility public)
    (source
     (path Hashset)
     (intf (path clib/hashset.mli))
     (impl (path clib/hashset.ml))))
   (module
    (obj_name heap)
    (visibility public)
    (source
     (path Heap)
     (intf (path clib/heap.mli))
     (impl (path clib/heap.ml))))
   (module
    (obj_name iStream)
    (visibility public)
    (source
     (path IStream)
     (intf (path clib/iStream.mli))
     (impl (path clib/iStream.ml))))
   (module
    (obj_name int)
    (visibility public)
    (source (path Int) (intf (path clib/int.mli)) (impl (path clib/int.ml))))
   (module
    (obj_name monad)
    (visibility public)
    (source
     (path Monad)
     (intf (path clib/monad.mli))
     (impl (path clib/monad.ml))))
   (module
    (obj_name neList)
    (visibility public)
    (source
     (path NeList)
     (intf (path clib/neList.mli))
     (impl (path clib/neList.ml))))
   (module
    (obj_name option)
    (visibility public)
    (source
     (path Option)
     (intf (path clib/option.mli))
     (impl (path clib/option.ml))))
   (module
    (obj_name orderedType)
    (visibility public)
    (source
     (path OrderedType)
     (intf (path clib/orderedType.mli))
     (impl (path clib/orderedType.ml))))
   (module
    (obj_name predicate)
    (visibility public)
    (source
     (path Predicate)
     (intf (path clib/predicate.mli))
     (impl (path clib/predicate.ml))))
   (module
    (obj_name range)
    (visibility public)
    (source
     (path Range)
     (intf (path clib/range.mli))
     (impl (path clib/range.ml))))
   (module
    (obj_name segmenttree)
    (visibility public)
    (source
     (path Segmenttree)
     (intf (path clib/segmenttree.mli))
     (impl (path clib/segmenttree.ml))))
   (module
    (obj_name store)
    (visibility public)
    (source
     (path Store)
     (intf (path clib/store.mli))
     (impl (path clib/store.ml))))
   (module
    (obj_name terminal)
    (visibility public)
    (source
     (path Terminal)
     (intf (path clib/terminal.mli))
     (impl (path clib/terminal.ml))))
   (module
    (obj_name trie)
    (visibility public)
    (source
     (path Trie)
     (intf (path clib/trie.mli))
     (impl (path clib/trie.ml))))
   (module
    (obj_name unicode)
    (visibility public)
    (source
     (path Unicode)
     (intf (path clib/unicode.mli))
     (impl (path clib/unicode.ml))))
   (module
    (obj_name unicodetable)
    (visibility public)
    (source (path Unicodetable) (impl (path clib/unicodetable.ml))))
   (module
    (obj_name unionfind)
    (visibility public)
    (source
     (path Unionfind)
     (intf (path clib/unionfind.mli))
     (impl (path clib/unionfind.ml)))))))
(library
 (name coq-core.config)
 (kind normal)
 (synopsis "Coq Configuration Variables")
 (archives (byte config/config.cma) (native config/config.cmxa))
 (plugins (byte config/config.cma) (native config/config.cmxs))
 (native_archives config/config.a)
 (modes byte native)
 (modules
  (singleton
   (obj_name coq_config)
   (visibility public)
   (source
    (path Coq_config)
    (intf (path config/coq_config.mli))
    (impl (path config/coq_config.ml))))))
(library
 (name coq-core.engine)
 (kind normal)
 (synopsis "Coq's Tactic Engine")
 (archives (byte engine/engine.cma) (native engine/engine.cmxa))
 (plugins (byte engine/engine.cma) (native engine/engine.cmxs))
 (native_archives engine/engine.a)
 (requires coq-core.library)
 (modes byte native)
 (modules
  (unwrapped
   (module
    (obj_name eConstr)
    (visibility public)
    (source
     (path EConstr)
     (intf (path engine/eConstr.mli))
     (impl (path engine/eConstr.ml))))
   (module
    (obj_name evar_kinds)
    (visibility public)
    (source
     (path Evar_kinds)
     (intf (path engine/evar_kinds.mli))
     (impl (path engine/evar_kinds.ml))))
   (module
    (obj_name evarutil)
    (visibility public)
    (source
     (path Evarutil)
     (intf (path engine/evarutil.mli))
     (impl (path engine/evarutil.ml))))
   (module
    (obj_name evd)
    (visibility public)
    (source
     (path Evd)
     (intf (path engine/evd.mli))
     (impl (path engine/evd.ml))))
   (module
    (obj_name ftactic)
    (visibility public)
    (source
     (path Ftactic)
     (intf (path engine/ftactic.mli))
     (impl (path engine/ftactic.ml))))
   (module
    (obj_name logic_monad)
    (visibility public)
    (source
     (path Logic_monad)
     (intf (path engine/logic_monad.mli))
     (impl (path engine/logic_monad.ml))))
   (module
    (obj_name namegen)
    (visibility public)
    (source
     (path Namegen)
     (intf (path engine/namegen.mli))
     (impl (path engine/namegen.ml))))
   (module
    (obj_name nameops)
    (visibility public)
    (source
     (path Nameops)
     (intf (path engine/nameops.mli))
     (impl (path engine/nameops.ml))))
   (module
    (obj_name proofview)
    (visibility public)
    (source
     (path Proofview)
     (intf (path engine/proofview.mli))
     (impl (path engine/proofview.ml))))
   (module
    (obj_name proofview_monad)
    (visibility public)
    (source
     (path Proofview_monad)
     (intf (path engine/proofview_monad.mli))
     (impl (path engine/proofview_monad.ml))))
   (module
    (obj_name termops)
    (visibility public)
    (source
     (path Termops)
     (intf (path engine/termops.mli))
     (impl (path engine/termops.ml))))
   (module
    (obj_name uState)
    (visibility public)
    (source
     (path UState)
     (intf (path engine/uState.mli))
     (impl (path engine/uState.ml))))
   (module
    (obj_name univGen)
    (visibility public)
    (source
     (path UnivGen)
     (intf (path engine/univGen.mli))
     (impl (path engine/univGen.ml))))
   (module
    (obj_name univMinim)
    (visibility public)
    (source
     (path UnivMinim)
     (intf (path engine/univMinim.mli))
     (impl (path engine/univMinim.ml))))
   (module
    (obj_name univNames)
    (visibility public)
    (source
     (path UnivNames)
     (intf (path engine/univNames.mli))
     (impl (path engine/univNames.ml))))
   (module
    (obj_name univProblem)
    (visibility public)
    (source
     (path UnivProblem)
     (intf (path engine/univProblem.mli))
     (impl (path engine/univProblem.ml))))
   (module
    (obj_name univSubst)
    (visibility public)
    (source
     (path UnivSubst)
     (intf (path engine/univSubst.mli))
     (impl (path engine/univSubst.ml)))))))
(library
 (name coq-core.gramlib)
 (kind normal)
 (archives (byte gramlib/gramlib.cma) (native gramlib/gramlib.cmxa))
 (plugins (byte gramlib/gramlib.cma) (native gramlib/gramlib.cmxs))
 (native_archives gramlib/gramlib.a)
 (requires coq-core.lib)
 (main_module_name Gramlib)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name gramlib)
     (visibility public)
     (kind alias)
     (source (path Gramlib) (impl (path gramlib/gramlib.ml-gen))))
    (name Gramlib)
    (modules
     (module
      (obj_name gramlib__Gramext)
      (visibility public)
      (source
       (path Gramext)
       (intf (path gramlib/gramext.mli))
       (impl (path gramlib/gramext.ml))))
     (module
      (obj_name gramlib__Grammar)
      (visibility public)
      (source
       (path Grammar)
       (intf (path gramlib/grammar.mli))
       (impl (path gramlib/grammar.ml))))
     (module
      (obj_name gramlib__Plexing)
      (visibility public)
      (source
       (path Plexing)
       (intf (path gramlib/plexing.mli))
       (impl (path gramlib/plexing.ml))))))
   (wrapped true))))
(library
 (name coq-core.interp)
 (kind normal)
 (synopsis "Coq's Syntactic Interpretation for AST [notations, implicits]")
 (archives (byte interp/interp.cma) (native interp/interp.cmxa))
 (plugins (byte interp/interp.cma) (native interp/interp.cmxs))
 (native_archives interp/interp.a)
 (requires zarith coq-core.pretyping)
 (modes byte native)
 (modules
  (unwrapped
   (module
    (obj_name abbreviation)
    (visibility public)
    (source
     (path Abbreviation)
     (intf (path interp/abbreviation.mli))
     (impl (path interp/abbreviation.ml))))
   (module
    (obj_name constrexpr)
    (visibility public)
    (source (path Constrexpr) (impl (path interp/constrexpr.ml))))
   (module
    (obj_name constrexpr_ops)
    (visibility public)
    (source
     (path Constrexpr_ops)
     (intf (path interp/constrexpr_ops.mli))
     (impl (path interp/constrexpr_ops.ml))))
   (module
    (obj_name constrextern)
    (visibility public)
    (source
     (path Constrextern)
     (intf (path interp/constrextern.mli))
     (impl (path interp/constrextern.ml))))
   (module
    (obj_name constrintern)
    (visibility public)
    (source
     (path Constrintern)
     (intf (path interp/constrintern.mli))
     (impl (path interp/constrintern.ml))))
   (module
    (obj_name decls)
    (visibility public)
    (source
     (path Decls)
     (intf (path interp/decls.mli))
     (impl (path interp/decls.ml))))
   (module
    (obj_name deprecation)
    (visibility public)
    (source
     (path Deprecation)
     (intf (path interp/deprecation.mli))
     (impl (path interp/deprecation.ml))))
   (module
    (obj_name dumpglob)
    (visibility public)
    (source
     (path Dumpglob)
     (intf (path interp/dumpglob.mli))
     (impl (path interp/dumpglob.ml))))
   (module
    (obj_name genintern)
    (visibility public)
    (source
     (path Genintern)
     (intf (path interp/genintern.mli))
     (impl (path interp/genintern.ml))))
   (module
    (obj_name impargs)
    (visibility public)
    (source
     (path Impargs)
     (intf (path interp/impargs.mli))
     (impl (path interp/impargs.ml))))
   (module
    (obj_name implicit_quantifiers)
    (visibility public)
    (source
     (path Implicit_quantifiers)
     (intf (path interp/implicit_quantifiers.mli))
     (impl (path interp/implicit_quantifiers.ml))))
   (module
    (obj_name modintern)
    (visibility public)
    (source
     (path Modintern)
     (intf (path interp/modintern.mli))
     (impl (path interp/modintern.ml))))
   (module
    (obj_name notation)
    (visibility public)
    (source
     (path Notation)
     (intf (path interp/notation.mli))
     (impl (path interp/notation.ml))))
   (module
    (obj_name notation_ops)
    (visibility public)
    (source
     (path Notation_ops)
     (intf (path interp/notation_ops.mli))
     (impl (path interp/notation_ops.ml))))
   (module
    (obj_name notation_term)
    (visibility public)
    (source (path Notation_term) (impl (path interp/notation_term.ml))))
   (module
    (obj_name numTok)
    (visibility public)
    (source
     (path NumTok)
     (intf (path interp/numTok.mli))
     (impl (path interp/numTok.ml))))
   (module
    (obj_name reserve)
    (visibility public)
    (source
     (path Reserve)
     (intf (path interp/reserve.mli))
     (impl (path interp/reserve.ml))))
   (module
    (obj_name smartlocate)
    (visibility public)
    (source
     (path Smartlocate)
     (intf (path interp/smartlocate.mli))
     (impl (path interp/smartlocate.ml))))
   (module
    (obj_name stdarg)
    (visibility public)
    (source
     (path Stdarg)
     (intf (path interp/stdarg.mli))
     (impl (path interp/stdarg.ml)))))))
(library
 (name coq-core.kernel)
 (kind normal)
 (synopsis "The Coq Kernel")
 (archives (byte kernel/kernel.cma) (native kernel/kernel.cmxa))
 (plugins (byte kernel/kernel.cma) (native kernel/kernel.cmxs))
 (native_archives kernel/kernel.a)
 (requires coq-core.boot coq-core.lib coq-core.vm dynlink)
 (modes byte native)
 (modules
  (unwrapped
   (module
    (obj_name cClosure)
    (visibility public)
    (source
     (path CClosure)
     (intf (path kernel/cClosure.mli))
     (impl (path kernel/cClosure.ml))))
   (module
    (obj_name cPrimitives)
    (visibility public)
    (source
     (path CPrimitives)
     (intf (path kernel/cPrimitives.mli))
     (impl (path kernel/cPrimitives.ml))))
   (module
    (obj_name constr)
    (visibility public)
    (source
     (path Constr)
     (intf (path kernel/constr.mli))
     (impl (path kernel/constr.ml))))
   (module
    (obj_name context)
    (visibility public)
    (source
     (path Context)
     (intf (path kernel/context.mli))
     (impl (path kernel/context.ml))))
   (module
    (obj_name conv_oracle)
    (visibility public)
    (source
     (path Conv_oracle)
     (intf (path kernel/conv_oracle.mli))
     (impl (path kernel/conv_oracle.ml))))
   (module
    (obj_name cooking)
    (visibility public)
    (source
     (path Cooking)
     (intf (path kernel/cooking.mli))
     (impl (path kernel/cooking.ml))))
   (module
    (obj_name declarations)
    (visibility public)
    (source (path Declarations) (impl (path kernel/declarations.ml))))
   (module
    (obj_name declareops)
    (visibility public)
    (source
     (path Declareops)
     (intf (path kernel/declareops.mli))
     (impl (path kernel/declareops.ml))))
   (module
    (obj_name discharge)
    (visibility public)
    (source
     (path Discharge)
     (intf (path kernel/discharge.mli))
     (impl (path kernel/discharge.ml))))
   (module
    (obj_name entries)
    (visibility public)
    (source (path Entries) (impl (path kernel/entries.ml))))
   (module
    (obj_name environ)
    (visibility public)
    (source
     (path Environ)
     (intf (path kernel/environ.mli))
     (impl (path kernel/environ.ml))))
   (module
    (obj_name esubst)
    (visibility public)
    (source
     (path Esubst)
     (intf (path kernel/esubst.mli))
     (impl (path kernel/esubst.ml))))
   (module
    (obj_name evar)
    (visibility public)
    (source
     (path Evar)
     (intf (path kernel/evar.mli))
     (impl (path kernel/evar.ml))))
   (module
    (obj_name float64)
    (visibility public)
    (source
     (path Float64)
     (intf (path kernel/float64.mli))
     (impl (path kernel/float64.ml))))
   (module
    (obj_name float64_common)
    (visibility public)
    (source
     (path Float64_common)
     (intf (path kernel/float64_common.mli))
     (impl (path kernel/float64_common.ml))))
   (module
    (obj_name indTyping)
    (visibility public)
    (source
     (path IndTyping)
     (intf (path kernel/indTyping.mli))
     (impl (path kernel/indTyping.ml))))
   (module
    (obj_name indtypes)
    (visibility public)
    (source
     (path Indtypes)
     (intf (path kernel/indtypes.mli))
     (impl (path kernel/indtypes.ml))))
   (module
    (obj_name inductive)
    (visibility public)
    (source
     (path Inductive)
     (intf (path kernel/inductive.mli))
     (impl (path kernel/inductive.ml))))
   (module
    (obj_name inferCumulativity)
    (visibility public)
    (source
     (path InferCumulativity)
     (intf (path kernel/inferCumulativity.mli))
     (impl (path kernel/inferCumulativity.ml))))
   (module
    (obj_name mod_subst)
    (visibility public)
    (source
     (path Mod_subst)
     (intf (path kernel/mod_subst.mli))
     (impl (path kernel/mod_subst.ml))))
   (module
    (obj_name mod_typing)
    (visibility public)
    (source
     (path Mod_typing)
     (intf (path kernel/mod_typing.mli))
     (impl (path kernel/mod_typing.ml))))
   (module
    (obj_name modops)
    (visibility public)
    (source
     (path Modops)
     (intf (path kernel/modops.mli))
     (impl (path kernel/modops.ml))))
   (module
    (obj_name names)
    (visibility public)
    (source
     (path Names)
     (intf (path kernel/names.mli))
     (impl (path kernel/names.ml))))
   (module
    (obj_name nativecode)
    (visibility public)
    (source
     (path Nativecode)
     (intf (path kernel/nativecode.mli))
     (impl (path kernel/nativecode.ml))))
   (module
    (obj_name nativeconv)
    (visibility public)
    (source
     (path Nativeconv)
     (intf (path kernel/nativeconv.mli))
     (impl (path kernel/nativeconv.ml))))
   (module
    (obj_name nativelambda)
    (visibility public)
    (source
     (path Nativelambda)
     (intf (path kernel/nativelambda.mli))
     (impl (path kernel/nativelambda.ml))))
   (module
    (obj_name nativelib)
    (visibility public)
    (source
     (path Nativelib)
     (intf (path kernel/nativelib.mli))
     (impl (path kernel/nativelib.ml))))
   (module
    (obj_name nativelibrary)
    (visibility public)
    (source
     (path Nativelibrary)
     (intf (path kernel/nativelibrary.mli))
     (impl (path kernel/nativelibrary.ml))))
   (module
    (obj_name nativevalues)
    (visibility public)
    (source
     (path Nativevalues)
     (intf (path kernel/nativevalues.mli))
     (impl (path kernel/nativevalues.ml))))
   (module
    (obj_name opaqueproof)
    (visibility public)
    (source
     (path Opaqueproof)
     (intf (path kernel/opaqueproof.mli))
     (impl (path kernel/opaqueproof.ml))))
   (module
    (obj_name parray)
    (visibility public)
    (source
     (path Parray)
     (intf (path kernel/parray.mli))
     (impl (path kernel/parray.ml))))
   (module
    (obj_name primred)
    (visibility public)
    (source
     (path Primred)
     (intf (path kernel/primred.mli))
     (impl (path kernel/primred.ml))))
   (module
    (obj_name reduction)
    (visibility public)
    (source
     (path Reduction)
     (intf (path kernel/reduction.mli))
     (impl (path kernel/reduction.ml))))
   (module
    (obj_name relevanceops)
    (visibility public)
    (source
     (path Relevanceops)
     (intf (path kernel/relevanceops.mli))
     (impl (path kernel/relevanceops.ml))))
   (module
    (obj_name retroknowledge)
    (visibility public)
    (source
     (path Retroknowledge)
     (intf (path kernel/retroknowledge.mli))
     (impl (path kernel/retroknowledge.ml))))
   (module
    (obj_name safe_typing)
    (visibility public)
    (source
     (path Safe_typing)
     (intf (path kernel/safe_typing.mli))
     (impl (path kernel/safe_typing.ml))))
   (module
    (obj_name section)
    (visibility public)
    (source
     (path Section)
     (intf (path kernel/section.mli))
     (impl (path kernel/section.ml))))
   (module
    (obj_name sorts)
    (visibility public)
    (source
     (path Sorts)
     (intf (path kernel/sorts.mli))
     (impl (path kernel/sorts.ml))))
   (module
    (obj_name subtyping)
    (visibility public)
    (source
     (path Subtyping)
     (intf (path kernel/subtyping.mli))
     (impl (path kernel/subtyping.ml))))
   (module
    (obj_name term)
    (visibility public)
    (source
     (path Term)
     (intf (path kernel/term.mli))
     (impl (path kernel/term.ml))))
   (module
    (obj_name term_typing)
    (visibility public)
    (source
     (path Term_typing)
     (intf (path kernel/term_typing.mli))
     (impl (path kernel/term_typing.ml))))
   (module
    (obj_name transparentState)
    (visibility public)
    (source
     (path TransparentState)
     (intf (path kernel/transparentState.mli))
     (impl (path kernel/transparentState.ml))))
   (module
    (obj_name type_errors)
    (visibility public)
    (source
     (path Type_errors)
     (intf (path kernel/type_errors.mli))
     (impl (path kernel/type_errors.ml))))
   (module
    (obj_name typeops)
    (visibility public)
    (source
     (path Typeops)
     (intf (path kernel/typeops.mli))
     (impl (path kernel/typeops.ml))))
   (module
    (obj_name uGraph)
    (visibility public)
    (source
     (path UGraph)
     (intf (path kernel/uGraph.mli))
     (impl (path kernel/uGraph.ml))))
   (module
    (obj_name uint63)
    (visibility public)
    (source
     (path Uint63)
     (intf (path kernel/uint63.mli))
     (impl (path kernel/uint63.ml))))
   (module
    (obj_name univ)
    (visibility public)
    (source
     (path Univ)
     (intf (path kernel/univ.mli))
     (impl (path kernel/univ.ml))))
   (module
    (obj_name vars)
    (visibility public)
    (source
     (path Vars)
     (intf (path kernel/vars.mli))
     (impl (path kernel/vars.ml))))
   (module
    (obj_name vconv)
    (visibility public)
    (source
     (path Vconv)
     (intf (path kernel/vconv.mli))
     (impl (path kernel/vconv.ml))))
   (module
    (obj_name vm)
    (visibility public)
    (source (path Vm) (intf (path kernel/vm.mli)) (impl (path kernel/vm.ml))))
   (module
    (obj_name vmbytecodes)
    (visibility public)
    (source
     (path Vmbytecodes)
     (intf (path kernel/vmbytecodes.mli))
     (impl (path kernel/vmbytecodes.ml))))
   (module
    (obj_name vmbytegen)
    (visibility public)
    (source
     (path Vmbytegen)
     (intf (path kernel/vmbytegen.mli))
     (impl (path kernel/vmbytegen.ml))))
   (module
    (obj_name vmemitcodes)
    (visibility public)
    (source
     (path Vmemitcodes)
     (intf (path kernel/vmemitcodes.mli))
     (impl (path kernel/vmemitcodes.ml))))
   (module
    (obj_name vmlambda)
    (visibility public)
    (source
     (path Vmlambda)
     (intf (path kernel/vmlambda.mli))
     (impl (path kernel/vmlambda.ml))))
   (module
    (obj_name vmopcodes)
    (visibility public)
    (source (path Vmopcodes) (impl (path kernel/vmopcodes.ml))))
   (module
    (obj_name vmsymtable)
    (visibility public)
    (source
     (path Vmsymtable)
     (intf (path kernel/vmsymtable.mli))
     (impl (path kernel/vmsymtable.ml))))
   (module
    (obj_name vmvalues)
    (visibility public)
    (source
     (path Vmvalues)
     (intf (path kernel/vmvalues.mli))
     (impl (path kernel/vmvalues.ml)))))))
(library
 (name coq-core.lib)
 (kind normal)
 (synopsis "Coq's Utility Library [coq-specific]")
 (archives (byte lib/lib.cma) (native lib/lib.cmxa))
 (plugins (byte lib/lib.cma) (native lib/lib.cmxs))
 (native_archives lib/lib.a)
 (requires coq-core.boot coq-core.clib coq-core.config)
 (modes byte native)
 (modules
  (unwrapped
   (module
    (obj_name acyclicGraph)
    (visibility public)
    (source
     (path AcyclicGraph)
     (intf (path lib/acyclicGraph.mli))
     (impl (path lib/acyclicGraph.ml))))
   (module
    (obj_name aux_file)
    (visibility public)
    (source
     (path Aux_file)
     (intf (path lib/aux_file.mli))
     (impl (path lib/aux_file.ml))))
   (module
    (obj_name cAst)
    (visibility public)
    (source (path CAst) (intf (path lib/cAst.mli)) (impl (path lib/cAst.ml))))
   (module
    (obj_name cDebug)
    (visibility public)
    (source
     (path CDebug)
     (intf (path lib/cDebug.mli))
     (impl (path lib/cDebug.ml))))
   (module
    (obj_name cErrors)
    (visibility public)
    (source
     (path CErrors)
     (intf (path lib/cErrors.mli))
     (impl (path lib/cErrors.ml))))
   (module
    (obj_name cProfile)
    (visibility public)
    (source
     (path CProfile)
     (intf (path lib/cProfile.mli))
     (impl (path lib/cProfile.ml))))
   (module
    (obj_name cWarnings)
    (visibility public)
    (source
     (path CWarnings)
     (intf (path lib/cWarnings.mli))
     (impl (path lib/cWarnings.ml))))
   (module
    (obj_name control)
    (visibility public)
    (source
     (path Control)
     (intf (path lib/control.mli))
     (impl (path lib/control.ml))))
   (module
    (obj_name coqProject_file)
    (visibility public)
    (source
     (path CoqProject_file)
     (intf (path lib/coqProject_file.mli))
     (impl (path lib/coqProject_file.ml))))
   (module
    (obj_name core_plugins_findlib_compat)
    (visibility public)
    (source
     (path Core_plugins_findlib_compat)
     (intf (path lib/core_plugins_findlib_compat.mli))
     (impl (path lib/core_plugins_findlib_compat.ml))))
   (module
    (obj_name dAst)
    (visibility public)
    (source (path DAst) (intf (path lib/dAst.mli)) (impl (path lib/dAst.ml))))
   (module
    (obj_name envars)
    (visibility public)
    (source
     (path Envars)
     (intf (path lib/envars.mli))
     (impl (path lib/envars.ml))))
   (module
    (obj_name feedback)
    (visibility public)
    (source
     (path Feedback)
     (intf (path lib/feedback.mli))
     (impl (path lib/feedback.ml))))
   (module
    (obj_name flags)
    (visibility public)
    (source
     (path Flags)
     (intf (path lib/flags.mli))
     (impl (path lib/flags.ml))))
   (module
    (obj_name genarg)
    (visibility public)
    (source
     (path Genarg)
     (intf (path lib/genarg.mli))
     (impl (path lib/genarg.ml))))
   (module
    (obj_name hook)
    (visibility public)
    (source (path Hook) (intf (path lib/hook.mli)) (impl (path lib/hook.ml))))
   (module
    (obj_name lStream)
    (visibility public)
    (source
     (path LStream)
     (intf (path lib/lStream.mli))
     (impl (path lib/lStream.ml))))
   (module
    (obj_name loc)
    (visibility public)
    (source (path Loc) (intf (path lib/loc.mli)) (impl (path lib/loc.ml))))
   (module
    (obj_name objFile)
    (visibility public)
    (source
     (path ObjFile)
     (intf (path lib/objFile.mli))
     (impl (path lib/objFile.ml))))
   (module
    (obj_name pp)
    (visibility public)
    (source (path Pp) (intf (path lib/pp.mli)) (impl (path lib/pp.ml))))
   (module
    (obj_name pp_diff)
    (visibility public)
    (source
     (path Pp_diff)
     (intf (path lib/pp_diff.mli))
     (impl (path lib/pp_diff.ml))))
   (module
    (obj_name rtree)
    (visibility public)
    (source
     (path Rtree)
     (intf (path lib/rtree.mli))
     (impl (path lib/rtree.ml))))
   (module
    (obj_name spawn)
    (visibility public)
    (source
     (path Spawn)
     (intf (path lib/spawn.mli))
     (impl (path lib/spawn.ml))))
   (module
    (obj_name stateid)
    (visibility public)
    (source
     (path Stateid)
     (intf (path lib/stateid.mli))
     (impl (path lib/stateid.ml))))
   (module
    (obj_name system)
    (visibility public)
    (source
     (path System)
     (intf (path lib/system.mli))
     (impl (path lib/system.ml))))
   (module
    (obj_name util)
    (visibility public)
    (source (path Util) (intf (path lib/util.mli)) (impl (path lib/util.ml))))
   (module
    (obj_name xml_datatype)
    (visibility public)
    (source (path Xml_datatype) (intf (path lib/xml_datatype.mli)))))))
(library
 (name coq-core.library)
 (kind normal)
 (synopsis "Coq's Loadable Libraries (vo) Support")
 (archives (byte library/library.cma) (native library/library.cmxa))
 (plugins (byte library/library.cma) (native library/library.cmxs))
 (native_archives library/library.a)
 (requires coq-core.kernel)
 (modes byte native)
 (modules
  (unwrapped
   (module
    (obj_name coqlib)
    (visibility public)
    (source
     (path Coqlib)
     (intf (path library/coqlib.mli))
     (impl (path library/coqlib.ml))))
   (module
    (obj_name global)
    (visibility public)
    (source
     (path Global)
     (intf (path library/global.mli))
     (impl (path library/global.ml))))
   (module
    (obj_name globnames)
    (visibility public)
    (source
     (path Globnames)
     (intf (path library/globnames.mli))
     (impl (path library/globnames.ml))))
   (module
    (obj_name goptions)
    (visibility public)
    (source
     (path Goptions)
     (intf (path library/goptions.mli))
     (impl (path library/goptions.ml))))
   (module
    (obj_name lib)
    (visibility public)
    (source
     (path Lib)
     (intf (path library/lib.mli))
     (impl (path library/lib.ml))))
   (module
    (obj_name libnames)
    (visibility public)
    (source
     (path Libnames)
     (intf (path library/libnames.mli))
     (impl (path library/libnames.ml))))
   (module
    (obj_name libobject)
    (visibility public)
    (source
     (path Libobject)
     (intf (path library/libobject.mli))
     (impl (path library/libobject.ml))))
   (module
    (obj_name nametab)
    (visibility public)
    (source
     (path Nametab)
     (intf (path library/nametab.mli))
     (impl (path library/nametab.ml))))
   (module
    (obj_name summary)
    (visibility public)
    (source
     (path Summary)
     (intf (path library/summary.mli))
     (impl (path library/summary.ml)))))))
(library
 (name coq-core.parsing)
 (kind normal)
 (archives (byte parsing/parsing.cma) (native parsing/parsing.cmxa))
 (plugins (byte parsing/parsing.cma) (native parsing/parsing.cmxs))
 (native_archives parsing/parsing.a)
 (requires coq-core.gramlib coq-core.interp)
 (modes byte native)
 (modules
  (unwrapped
   (module
    (obj_name cLexer)
    (visibility public)
    (source
     (path CLexer)
     (intf (path parsing/cLexer.mli))
     (impl (path parsing/cLexer.ml))))
   (module
    (obj_name extend)
    (visibility public)
    (source
     (path Extend)
     (intf (path parsing/extend.mli))
     (impl (path parsing/extend.ml))))
   (module
    (obj_name g_constr)
    (visibility public)
    (source (path G_constr) (impl (path parsing/g_constr.ml))))
   (module
    (obj_name g_prim)
    (visibility public)
    (source (path G_prim) (impl (path parsing/g_prim.ml))))
   (module
    (obj_name notation_gram)
    (visibility public)
    (source (path Notation_gram) (impl (path parsing/notation_gram.ml))))
   (module
    (obj_name notgram_ops)
    (visibility public)
    (source
     (path Notgram_ops)
     (intf (path parsing/notgram_ops.mli))
     (impl (path parsing/notgram_ops.ml))))
   (module
    (obj_name pcoq)
    (visibility public)
    (source
     (path Pcoq)
     (intf (path parsing/pcoq.mli))
     (impl (path parsing/pcoq.ml))))
   (module
    (obj_name tok)
    (visibility public)
    (source
     (path Tok)
     (intf (path parsing/tok.mli))
     (impl (path parsing/tok.ml)))))))
(library
 (name coq-core.plugins.btauto)
 (kind normal)
 (synopsis "Coq's btauto plugin")
 (archives
  (byte plugins/btauto/btauto_plugin.cma)
  (native plugins/btauto/btauto_plugin.cmxa))
 (plugins
  (byte plugins/btauto/btauto_plugin.cma)
  (native plugins/btauto/btauto_plugin.cmxs))
 (native_archives plugins/btauto/btauto_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Btauto_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name btauto_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Btauto_plugin)
      (impl (path plugins/btauto/btauto_plugin.ml-gen))))
    (name Btauto_plugin)
    (modules
     (module
      (obj_name btauto_plugin__G_btauto)
      (visibility public)
      (source (path G_btauto) (impl (path plugins/btauto/g_btauto.ml))))
     (module
      (obj_name btauto_plugin__Refl_btauto)
      (visibility public)
      (source
       (path Refl_btauto)
       (intf (path plugins/btauto/refl_btauto.mli))
       (impl (path plugins/btauto/refl_btauto.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.cc)
 (kind normal)
 (synopsis "Coq's congruence closure plugin")
 (archives (byte plugins/cc/cc_plugin.cma) (native plugins/cc/cc_plugin.cmxa))
 (plugins (byte plugins/cc/cc_plugin.cma) (native plugins/cc/cc_plugin.cmxs))
 (native_archives plugins/cc/cc_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Cc_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name cc_plugin)
     (visibility public)
     (kind alias)
     (source (path Cc_plugin) (impl (path plugins/cc/cc_plugin.ml-gen))))
    (name Cc_plugin)
    (modules
     (module
      (obj_name cc_plugin__Ccalgo)
      (visibility public)
      (source
       (path Ccalgo)
       (intf (path plugins/cc/ccalgo.mli))
       (impl (path plugins/cc/ccalgo.ml))))
     (module
      (obj_name cc_plugin__Ccproof)
      (visibility public)
      (source
       (path Ccproof)
       (intf (path plugins/cc/ccproof.mli))
       (impl (path plugins/cc/ccproof.ml))))
     (module
      (obj_name cc_plugin__Cctac)
      (visibility public)
      (source
       (path Cctac)
       (intf (path plugins/cc/cctac.mli))
       (impl (path plugins/cc/cctac.ml))))
     (module
      (obj_name cc_plugin__G_congruence)
      (visibility public)
      (source (path G_congruence) (impl (path plugins/cc/g_congruence.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.derive)
 (kind normal)
 (synopsis "Coq's derive plugin")
 (archives
  (byte plugins/derive/derive_plugin.cma)
  (native plugins/derive/derive_plugin.cmxa))
 (plugins
  (byte plugins/derive/derive_plugin.cma)
  (native plugins/derive/derive_plugin.cmxs))
 (native_archives plugins/derive/derive_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Derive_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name derive_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Derive_plugin)
      (impl (path plugins/derive/derive_plugin.ml-gen))))
    (name Derive_plugin)
    (modules
     (module
      (obj_name derive_plugin__Derive)
      (visibility public)
      (source
       (path Derive)
       (intf (path plugins/derive/derive.mli))
       (impl (path plugins/derive/derive.ml))))
     (module
      (obj_name derive_plugin__G_derive)
      (visibility public)
      (source (path G_derive) (impl (path plugins/derive/g_derive.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.extraction)
 (kind normal)
 (synopsis "Coq's extraction plugin")
 (archives
  (byte plugins/extraction/extraction_plugin.cma)
  (native plugins/extraction/extraction_plugin.cmxa))
 (plugins
  (byte plugins/extraction/extraction_plugin.cma)
  (native plugins/extraction/extraction_plugin.cmxs))
 (native_archives plugins/extraction/extraction_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Extraction_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name extraction_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Extraction_plugin)
      (impl (path plugins/extraction/extraction_plugin.ml-gen))))
    (name Extraction_plugin)
    (modules
     (module
      (obj_name extraction_plugin__Common)
      (visibility public)
      (source
       (path Common)
       (intf (path plugins/extraction/common.mli))
       (impl (path plugins/extraction/common.ml))))
     (module
      (obj_name extraction_plugin__Extract_env)
      (visibility public)
      (source
       (path Extract_env)
       (intf (path plugins/extraction/extract_env.mli))
       (impl (path plugins/extraction/extract_env.ml))))
     (module
      (obj_name extraction_plugin__Extraction)
      (visibility public)
      (source
       (path Extraction)
       (intf (path plugins/extraction/extraction.mli))
       (impl (path plugins/extraction/extraction.ml))))
     (module
      (obj_name extraction_plugin__G_extraction)
      (visibility public)
      (source
       (path G_extraction)
       (impl (path plugins/extraction/g_extraction.ml))))
     (module
      (obj_name extraction_plugin__Haskell)
      (visibility public)
      (source
       (path Haskell)
       (intf (path plugins/extraction/haskell.mli))
       (impl (path plugins/extraction/haskell.ml))))
     (module
      (obj_name extraction_plugin__Json)
      (visibility public)
      (source
       (path Json)
       (intf (path plugins/extraction/json.mli))
       (impl (path plugins/extraction/json.ml))))
     (module
      (obj_name extraction_plugin__Miniml)
      (visibility public)
      (source
       (path Miniml)
       (intf (path plugins/extraction/miniml.mli))
       (impl (path plugins/extraction/miniml.ml))))
     (module
      (obj_name extraction_plugin__Mlutil)
      (visibility public)
      (source
       (path Mlutil)
       (intf (path plugins/extraction/mlutil.mli))
       (impl (path plugins/extraction/mlutil.ml))))
     (module
      (obj_name extraction_plugin__Modutil)
      (visibility public)
      (source
       (path Modutil)
       (intf (path plugins/extraction/modutil.mli))
       (impl (path plugins/extraction/modutil.ml))))
     (module
      (obj_name extraction_plugin__Ocaml)
      (visibility public)
      (source
       (path Ocaml)
       (intf (path plugins/extraction/ocaml.mli))
       (impl (path plugins/extraction/ocaml.ml))))
     (module
      (obj_name extraction_plugin__Scheme)
      (visibility public)
      (source
       (path Scheme)
       (intf (path plugins/extraction/scheme.mli))
       (impl (path plugins/extraction/scheme.ml))))
     (module
      (obj_name extraction_plugin__Table)
      (visibility public)
      (source
       (path Table)
       (intf (path plugins/extraction/table.mli))
       (impl (path plugins/extraction/table.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.firstorder)
 (kind normal)
 (synopsis "Coq's first order logic solver plugin")
 (archives
  (byte plugins/firstorder/firstorder_plugin.cma)
  (native plugins/firstorder/firstorder_plugin.cmxa))
 (plugins
  (byte plugins/firstorder/firstorder_plugin.cma)
  (native plugins/firstorder/firstorder_plugin.cmxs))
 (native_archives plugins/firstorder/firstorder_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Firstorder_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name firstorder_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Firstorder_plugin)
      (impl (path plugins/firstorder/firstorder_plugin.ml-gen))))
    (name Firstorder_plugin)
    (modules
     (module
      (obj_name firstorder_plugin__Formula)
      (visibility public)
      (source
       (path Formula)
       (intf (path plugins/firstorder/formula.mli))
       (impl (path plugins/firstorder/formula.ml))))
     (module
      (obj_name firstorder_plugin__G_ground)
      (visibility public)
      (source (path G_ground) (impl (path plugins/firstorder/g_ground.ml))))
     (module
      (obj_name firstorder_plugin__Ground)
      (visibility public)
      (source
       (path Ground)
       (intf (path plugins/firstorder/ground.mli))
       (impl (path plugins/firstorder/ground.ml))))
     (module
      (obj_name firstorder_plugin__Instances)
      (visibility public)
      (source
       (path Instances)
       (intf (path plugins/firstorder/instances.mli))
       (impl (path plugins/firstorder/instances.ml))))
     (module
      (obj_name firstorder_plugin__Rules)
      (visibility public)
      (source
       (path Rules)
       (intf (path plugins/firstorder/rules.mli))
       (impl (path plugins/firstorder/rules.ml))))
     (module
      (obj_name firstorder_plugin__Sequent)
      (visibility public)
      (source
       (path Sequent)
       (intf (path plugins/firstorder/sequent.mli))
       (impl (path plugins/firstorder/sequent.ml))))
     (module
      (obj_name firstorder_plugin__Unify)
      (visibility public)
      (source
       (path Unify)
       (intf (path plugins/firstorder/unify.mli))
       (impl (path plugins/firstorder/unify.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.funind)
 (kind normal)
 (synopsis "Coq's functional induction plugin")
 (archives
  (byte plugins/funind/funind_plugin.cma)
  (native plugins/funind/funind_plugin.cmxa))
 (plugins
  (byte plugins/funind/funind_plugin.cma)
  (native plugins/funind/funind_plugin.cmxs))
 (native_archives plugins/funind/funind_plugin.a)
 (requires coq-core.plugins.extraction)
 (main_module_name Funind_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name funind_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Funind_plugin)
      (impl (path plugins/funind/funind_plugin.ml-gen))))
    (name Funind_plugin)
    (modules
     (module
      (obj_name funind_plugin__Functional_principles_proofs)
      (visibility public)
      (source
       (path Functional_principles_proofs)
       (intf (path plugins/funind/functional_principles_proofs.mli))
       (impl (path plugins/funind/functional_principles_proofs.ml))))
     (module
      (obj_name funind_plugin__Functional_principles_types)
      (visibility public)
      (source
       (path Functional_principles_types)
       (intf (path plugins/funind/functional_principles_types.mli))
       (impl (path plugins/funind/functional_principles_types.ml))))
     (module
      (obj_name funind_plugin__G_indfun)
      (visibility public)
      (source (path G_indfun) (impl (path plugins/funind/g_indfun.ml))))
     (module
      (obj_name funind_plugin__Gen_principle)
      (visibility public)
      (source
       (path Gen_principle)
       (intf (path plugins/funind/gen_principle.mli))
       (impl (path plugins/funind/gen_principle.ml))))
     (module
      (obj_name funind_plugin__Glob_term_to_relation)
      (visibility public)
      (source
       (path Glob_term_to_relation)
       (intf (path plugins/funind/glob_term_to_relation.mli))
       (impl (path plugins/funind/glob_term_to_relation.ml))))
     (module
      (obj_name funind_plugin__Glob_termops)
      (visibility public)
      (source
       (path Glob_termops)
       (intf (path plugins/funind/glob_termops.mli))
       (impl (path plugins/funind/glob_termops.ml))))
     (module
      (obj_name funind_plugin__Indfun)
      (visibility public)
      (source
       (path Indfun)
       (intf (path plugins/funind/indfun.mli))
       (impl (path plugins/funind/indfun.ml))))
     (module
      (obj_name funind_plugin__Indfun_common)
      (visibility public)
      (source
       (path Indfun_common)
       (intf (path plugins/funind/indfun_common.mli))
       (impl (path plugins/funind/indfun_common.ml))))
     (module
      (obj_name funind_plugin__Invfun)
      (visibility public)
      (source
       (path Invfun)
       (intf (path plugins/funind/invfun.mli))
       (impl (path plugins/funind/invfun.ml))))
     (module
      (obj_name funind_plugin__Recdef)
      (visibility public)
      (source
       (path Recdef)
       (intf (path plugins/funind/recdef.mli))
       (impl (path plugins/funind/recdef.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.ltac)
 (kind normal)
 (synopsis "Coq's LTAC tactic language")
 (archives
  (byte plugins/ltac/ltac_plugin.cma)
  (native plugins/ltac/ltac_plugin.cmxa))
 (plugins
  (byte plugins/ltac/ltac_plugin.cma)
  (native plugins/ltac/ltac_plugin.cmxs))
 (native_archives plugins/ltac/ltac_plugin.a)
 (requires coq-core.stm)
 (main_module_name Ltac_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name ltac_plugin)
     (visibility public)
     (kind alias)
     (source (path Ltac_plugin) (impl (path plugins/ltac/ltac_plugin.ml-gen))))
    (name Ltac_plugin)
    (modules
     (module
      (obj_name ltac_plugin__ComRewrite)
      (visibility public)
      (source
       (path ComRewrite)
       (intf (path plugins/ltac/comRewrite.mli))
       (impl (path plugins/ltac/comRewrite.ml))))
     (module
      (obj_name ltac_plugin__Coretactics)
      (visibility public)
      (source (path Coretactics) (impl (path plugins/ltac/coretactics.ml))))
     (module
      (obj_name ltac_plugin__Evar_tactics)
      (visibility public)
      (source
       (path Evar_tactics)
       (intf (path plugins/ltac/evar_tactics.mli))
       (impl (path plugins/ltac/evar_tactics.ml))))
     (module
      (obj_name ltac_plugin__Extraargs)
      (visibility public)
      (source
       (path Extraargs)
       (intf (path plugins/ltac/extraargs.mli))
       (impl (path plugins/ltac/extraargs.ml))))
     (module
      (obj_name ltac_plugin__Extratactics)
      (visibility public)
      (source
       (path Extratactics)
       (intf (path plugins/ltac/extratactics.mli))
       (impl (path plugins/ltac/extratactics.ml))))
     (module
      (obj_name ltac_plugin__G_auto)
      (visibility public)
      (source (path G_auto) (impl (path plugins/ltac/g_auto.ml))))
     (module
      (obj_name ltac_plugin__G_class)
      (visibility public)
      (source (path G_class) (impl (path plugins/ltac/g_class.ml))))
     (module
      (obj_name ltac_plugin__G_eqdecide)
      (visibility public)
      (source (path G_eqdecide) (impl (path plugins/ltac/g_eqdecide.ml))))
     (module
      (obj_name ltac_plugin__G_ltac)
      (visibility public)
      (source (path G_ltac) (impl (path plugins/ltac/g_ltac.ml))))
     (module
      (obj_name ltac_plugin__G_obligations)
      (visibility public)
      (source
       (path G_obligations)
       (impl (path plugins/ltac/g_obligations.ml))))
     (module
      (obj_name ltac_plugin__G_rewrite)
      (visibility public)
      (source (path G_rewrite) (impl (path plugins/ltac/g_rewrite.ml))))
     (module
      (obj_name ltac_plugin__G_tactic)
      (visibility public)
      (source (path G_tactic) (impl (path plugins/ltac/g_tactic.ml))))
     (module
      (obj_name ltac_plugin__Internals)
      (visibility public)
      (source
       (path Internals)
       (intf (path plugins/ltac/internals.mli))
       (impl (path plugins/ltac/internals.ml))))
     (module
      (obj_name ltac_plugin__Leminv)
      (visibility public)
      (source
       (path Leminv)
       (intf (path plugins/ltac/leminv.mli))
       (impl (path plugins/ltac/leminv.ml))))
     (module
      (obj_name ltac_plugin__Pltac)
      (visibility public)
      (source
       (path Pltac)
       (intf (path plugins/ltac/pltac.mli))
       (impl (path plugins/ltac/pltac.ml))))
     (module
      (obj_name ltac_plugin__Pptactic)
      (visibility public)
      (source
       (path Pptactic)
       (intf (path plugins/ltac/pptactic.mli))
       (impl (path plugins/ltac/pptactic.ml))))
     (module
      (obj_name ltac_plugin__Profile_ltac)
      (visibility public)
      (source
       (path Profile_ltac)
       (intf (path plugins/ltac/profile_ltac.mli))
       (impl (path plugins/ltac/profile_ltac.ml))))
     (module
      (obj_name ltac_plugin__Profile_ltac_tactics)
      (visibility public)
      (source
       (path Profile_ltac_tactics)
       (impl (path plugins/ltac/profile_ltac_tactics.ml))))
     (module
      (obj_name ltac_plugin__Tacarg)
      (visibility public)
      (source
       (path Tacarg)
       (intf (path plugins/ltac/tacarg.mli))
       (impl (path plugins/ltac/tacarg.ml))))
     (module
      (obj_name ltac_plugin__Taccoerce)
      (visibility public)
      (source
       (path Taccoerce)
       (intf (path plugins/ltac/taccoerce.mli))
       (impl (path plugins/ltac/taccoerce.ml))))
     (module
      (obj_name ltac_plugin__Tacentries)
      (visibility public)
      (source
       (path Tacentries)
       (intf (path plugins/ltac/tacentries.mli))
       (impl (path plugins/ltac/tacentries.ml))))
     (module
      (obj_name ltac_plugin__Tacenv)
      (visibility public)
      (source
       (path Tacenv)
       (intf (path plugins/ltac/tacenv.mli))
       (impl (path plugins/ltac/tacenv.ml))))
     (module
      (obj_name ltac_plugin__Tacexpr)
      (visibility public)
      (source
       (path Tacexpr)
       (intf (path plugins/ltac/tacexpr.mli))
       (impl (path plugins/ltac/tacexpr.ml))))
     (module
      (obj_name ltac_plugin__Tacintern)
      (visibility public)
      (source
       (path Tacintern)
       (intf (path plugins/ltac/tacintern.mli))
       (impl (path plugins/ltac/tacintern.ml))))
     (module
      (obj_name ltac_plugin__Tacinterp)
      (visibility public)
      (source
       (path Tacinterp)
       (intf (path plugins/ltac/tacinterp.mli))
       (impl (path plugins/ltac/tacinterp.ml))))
     (module
      (obj_name ltac_plugin__Tacsubst)
      (visibility public)
      (source
       (path Tacsubst)
       (intf (path plugins/ltac/tacsubst.mli))
       (impl (path plugins/ltac/tacsubst.ml))))
     (module
      (obj_name ltac_plugin__Tactic_debug)
      (visibility public)
      (source
       (path Tactic_debug)
       (intf (path plugins/ltac/tactic_debug.mli))
       (impl (path plugins/ltac/tactic_debug.ml))))
     (module
      (obj_name ltac_plugin__Tactic_matching)
      (visibility public)
      (source
       (path Tactic_matching)
       (intf (path plugins/ltac/tactic_matching.mli))
       (impl (path plugins/ltac/tactic_matching.ml))))
     (module
      (obj_name ltac_plugin__Tactic_option)
      (visibility public)
      (source
       (path Tactic_option)
       (intf (path plugins/ltac/tactic_option.mli))
       (impl (path plugins/ltac/tactic_option.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.ltac2)
 (kind normal)
 (synopsis "Ltac2 plugin")
 (archives
  (byte plugins/ltac2/ltac2_plugin.cma)
  (native plugins/ltac2/ltac2_plugin.cmxa))
 (plugins
  (byte plugins/ltac2/ltac2_plugin.cma)
  (native plugins/ltac2/ltac2_plugin.cmxs))
 (native_archives plugins/ltac2/ltac2_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Ltac2_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name ltac2_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Ltac2_plugin)
      (impl (path plugins/ltac2/ltac2_plugin.ml-gen))))
    (name Ltac2_plugin)
    (modules
     (module
      (obj_name ltac2_plugin__G_ltac2)
      (visibility public)
      (source (path G_ltac2) (impl (path plugins/ltac2/g_ltac2.ml))))
     (module
      (obj_name ltac2_plugin__Tac2core)
      (visibility public)
      (source
       (path Tac2core)
       (intf (path plugins/ltac2/tac2core.mli))
       (impl (path plugins/ltac2/tac2core.ml))))
     (module
      (obj_name ltac2_plugin__Tac2dyn)
      (visibility public)
      (source
       (path Tac2dyn)
       (intf (path plugins/ltac2/tac2dyn.mli))
       (impl (path plugins/ltac2/tac2dyn.ml))))
     (module
      (obj_name ltac2_plugin__Tac2entries)
      (visibility public)
      (source
       (path Tac2entries)
       (intf (path plugins/ltac2/tac2entries.mli))
       (impl (path plugins/ltac2/tac2entries.ml))))
     (module
      (obj_name ltac2_plugin__Tac2env)
      (visibility public)
      (source
       (path Tac2env)
       (intf (path plugins/ltac2/tac2env.mli))
       (impl (path plugins/ltac2/tac2env.ml))))
     (module
      (obj_name ltac2_plugin__Tac2expr)
      (visibility public)
      (source (path Tac2expr) (intf (path plugins/ltac2/tac2expr.mli))))
     (module
      (obj_name ltac2_plugin__Tac2extffi)
      (visibility public)
      (source
       (path Tac2extffi)
       (intf (path plugins/ltac2/tac2extffi.mli))
       (impl (path plugins/ltac2/tac2extffi.ml))))
     (module
      (obj_name ltac2_plugin__Tac2ffi)
      (visibility public)
      (source
       (path Tac2ffi)
       (intf (path plugins/ltac2/tac2ffi.mli))
       (impl (path plugins/ltac2/tac2ffi.ml))))
     (module
      (obj_name ltac2_plugin__Tac2intern)
      (visibility public)
      (source
       (path Tac2intern)
       (intf (path plugins/ltac2/tac2intern.mli))
       (impl (path plugins/ltac2/tac2intern.ml))))
     (module
      (obj_name ltac2_plugin__Tac2interp)
      (visibility public)
      (source
       (path Tac2interp)
       (intf (path plugins/ltac2/tac2interp.mli))
       (impl (path plugins/ltac2/tac2interp.ml))))
     (module
      (obj_name ltac2_plugin__Tac2match)
      (visibility public)
      (source
       (path Tac2match)
       (intf (path plugins/ltac2/tac2match.mli))
       (impl (path plugins/ltac2/tac2match.ml))))
     (module
      (obj_name ltac2_plugin__Tac2print)
      (visibility public)
      (source
       (path Tac2print)
       (intf (path plugins/ltac2/tac2print.mli))
       (impl (path plugins/ltac2/tac2print.ml))))
     (module
      (obj_name ltac2_plugin__Tac2qexpr)
      (visibility public)
      (source (path Tac2qexpr) (intf (path plugins/ltac2/tac2qexpr.mli))))
     (module
      (obj_name ltac2_plugin__Tac2quote)
      (visibility public)
      (source
       (path Tac2quote)
       (intf (path plugins/ltac2/tac2quote.mli))
       (impl (path plugins/ltac2/tac2quote.ml))))
     (module
      (obj_name ltac2_plugin__Tac2stdlib)
      (visibility public)
      (source
       (path Tac2stdlib)
       (intf (path plugins/ltac2/tac2stdlib.mli))
       (impl (path plugins/ltac2/tac2stdlib.ml))))
     (module
      (obj_name ltac2_plugin__Tac2tactics)
      (visibility public)
      (source
       (path Tac2tactics)
       (intf (path plugins/ltac2/tac2tactics.mli))
       (impl (path plugins/ltac2/tac2tactics.ml))))
     (module
      (obj_name ltac2_plugin__Tac2types)
      (visibility public)
      (source (path Tac2types) (intf (path plugins/ltac2/tac2types.mli))))))
   (wrapped true))))
(library
 (name coq-core.plugins.micromega)
 (kind normal)
 (synopsis "Coq's micromega plugin")
 (archives
  (byte plugins/micromega/micromega_plugin.cma)
  (native plugins/micromega/micromega_plugin.cmxa))
 (plugins
  (byte plugins/micromega/micromega_plugin.cma)
  (native plugins/micromega/micromega_plugin.cmxs))
 (native_archives plugins/micromega/micromega_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Micromega_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name micromega_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Micromega_plugin)
      (impl (path plugins/micromega/micromega_plugin.ml-gen))))
    (name Micromega_plugin)
    (modules
     (module
      (obj_name micromega_plugin__Certificate)
      (visibility public)
      (source
       (path Certificate)
       (intf (path plugins/micromega/certificate.mli))
       (impl (path plugins/micromega/certificate.ml))))
     (module
      (obj_name micromega_plugin__Coq_micromega)
      (visibility public)
      (source
       (path Coq_micromega)
       (intf (path plugins/micromega/coq_micromega.mli))
       (impl (path plugins/micromega/coq_micromega.ml))))
     (module
      (obj_name micromega_plugin__G_micromega)
      (visibility public)
      (source
       (path G_micromega)
       (intf (path plugins/micromega/g_micromega.mli))
       (impl (path plugins/micromega/g_micromega.ml))))
     (module
      (obj_name micromega_plugin__Itv)
      (visibility public)
      (source
       (path Itv)
       (intf (path plugins/micromega/itv.mli))
       (impl (path plugins/micromega/itv.ml))))
     (module
      (obj_name micromega_plugin__Linsolve)
      (visibility public)
      (source
       (path Linsolve)
       (intf (path plugins/micromega/linsolve.mli))
       (impl (path plugins/micromega/linsolve.ml))))
     (module
      (obj_name micromega_plugin__Micromega)
      (visibility public)
      (source
       (path Micromega)
       (intf (path plugins/micromega/micromega.mli))
       (impl (path plugins/micromega/micromega.ml))))
     (module
      (obj_name micromega_plugin__Mutils)
      (visibility public)
      (source
       (path Mutils)
       (intf (path plugins/micromega/mutils.mli))
       (impl (path plugins/micromega/mutils.ml))))
     (module
      (obj_name micromega_plugin__NumCompat)
      (visibility public)
      (source
       (path NumCompat)
       (intf (path plugins/micromega/numCompat.mli))
       (impl (path plugins/micromega/numCompat.ml))))
     (module
      (obj_name micromega_plugin__Persistent_cache)
      (visibility public)
      (source
       (path Persistent_cache)
       (intf (path plugins/micromega/persistent_cache.mli))
       (impl (path plugins/micromega/persistent_cache.ml))))
     (module
      (obj_name micromega_plugin__Polynomial)
      (visibility public)
      (source
       (path Polynomial)
       (intf (path plugins/micromega/polynomial.mli))
       (impl (path plugins/micromega/polynomial.ml))))
     (module
      (obj_name micromega_plugin__Simplex)
      (visibility public)
      (source
       (path Simplex)
       (intf (path plugins/micromega/simplex.mli))
       (impl (path plugins/micromega/simplex.ml))))
     (module
      (obj_name micromega_plugin__Sos)
      (visibility public)
      (source
       (path Sos)
       (intf (path plugins/micromega/sos.mli))
       (impl (path plugins/micromega/sos.ml))))
     (module
      (obj_name micromega_plugin__Sos_lib)
      (visibility public)
      (source
       (path Sos_lib)
       (intf (path plugins/micromega/sos_lib.mli))
       (impl (path plugins/micromega/sos_lib.ml))))
     (module
      (obj_name micromega_plugin__Sos_types)
      (visibility public)
      (source
       (path Sos_types)
       (intf (path plugins/micromega/sos_types.mli))
       (impl (path plugins/micromega/sos_types.ml))))
     (module
      (obj_name micromega_plugin__Vect)
      (visibility public)
      (source
       (path Vect)
       (intf (path plugins/micromega/vect.mli))
       (impl (path plugins/micromega/vect.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.nsatz)
 (kind normal)
 (synopsis "Coq's nsatz solver plugin")
 (archives
  (byte plugins/nsatz/nsatz_plugin.cma)
  (native plugins/nsatz/nsatz_plugin.cmxa))
 (plugins
  (byte plugins/nsatz/nsatz_plugin.cma)
  (native plugins/nsatz/nsatz_plugin.cmxs))
 (native_archives plugins/nsatz/nsatz_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Nsatz_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name nsatz_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Nsatz_plugin)
      (impl (path plugins/nsatz/nsatz_plugin.ml-gen))))
    (name Nsatz_plugin)
    (modules
     (module
      (obj_name nsatz_plugin__G_nsatz)
      (visibility public)
      (source (path G_nsatz) (impl (path plugins/nsatz/g_nsatz.ml))))
     (module
      (obj_name nsatz_plugin__Ideal)
      (visibility public)
      (source
       (path Ideal)
       (intf (path plugins/nsatz/ideal.mli))
       (impl (path plugins/nsatz/ideal.ml))))
     (module
      (obj_name nsatz_plugin__Nsatz)
      (visibility public)
      (source
       (path Nsatz)
       (intf (path plugins/nsatz/nsatz.mli))
       (impl (path plugins/nsatz/nsatz.ml))))
     (module
      (obj_name nsatz_plugin__Polynom)
      (visibility public)
      (source
       (path Polynom)
       (intf (path plugins/nsatz/polynom.mli))
       (impl (path plugins/nsatz/polynom.ml))))
     (module
      (obj_name nsatz_plugin__Utile)
      (visibility public)
      (source
       (path Utile)
       (intf (path plugins/nsatz/utile.mli))
       (impl (path plugins/nsatz/utile.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.number_string_notation)
 (kind normal)
 (synopsis "Coq number and string notation plugin")
 (archives
  (byte plugins/number_string_notation/number_string_notation_plugin.cma)
  (native plugins/number_string_notation/number_string_notation_plugin.cmxa))
 (plugins
  (byte plugins/number_string_notation/number_string_notation_plugin.cma)
  (native plugins/number_string_notation/number_string_notation_plugin.cmxs))
 (native_archives
  plugins/number_string_notation/number_string_notation_plugin.a)
 (requires coq-core.vernac)
 (main_module_name Number_string_notation_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name number_string_notation_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Number_string_notation_plugin)
      (impl
       (path
        plugins/number_string_notation/number_string_notation_plugin.ml-gen))))
    (name Number_string_notation_plugin)
    (modules
     (module
      (obj_name number_string_notation_plugin__G_number_string)
      (visibility public)
      (source
       (path G_number_string)
       (impl (path plugins/number_string_notation/g_number_string.ml))))
     (module
      (obj_name number_string_notation_plugin__Number)
      (visibility public)
      (source
       (path Number)
       (intf (path plugins/number_string_notation/number.mli))
       (impl (path plugins/number_string_notation/number.ml))))
     (module
      (obj_name number_string_notation_plugin__String_notation)
      (visibility public)
      (source
       (path String_notation)
       (intf (path plugins/number_string_notation/string_notation.mli))
       (impl (path plugins/number_string_notation/string_notation.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.ring)
 (kind normal)
 (synopsis "Coq's ring plugin")
 (archives
  (byte plugins/ring/ring_plugin.cma)
  (native plugins/ring/ring_plugin.cmxa))
 (plugins
  (byte plugins/ring/ring_plugin.cma)
  (native plugins/ring/ring_plugin.cmxs))
 (native_archives plugins/ring/ring_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Ring_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name ring_plugin)
     (visibility public)
     (kind alias)
     (source (path Ring_plugin) (impl (path plugins/ring/ring_plugin.ml-gen))))
    (name Ring_plugin)
    (modules
     (module
      (obj_name ring_plugin__G_ring)
      (visibility public)
      (source (path G_ring) (impl (path plugins/ring/g_ring.ml))))
     (module
      (obj_name ring_plugin__Ring)
      (visibility public)
      (source
       (path Ring)
       (intf (path plugins/ring/ring.mli))
       (impl (path plugins/ring/ring.ml))))
     (module
      (obj_name ring_plugin__Ring_ast)
      (visibility public)
      (source
       (path Ring_ast)
       (intf (path plugins/ring/ring_ast.mli))
       (impl (path plugins/ring/ring_ast.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.rtauto)
 (kind normal)
 (synopsis "Coq's rtauto plugin")
 (archives
  (byte plugins/rtauto/rtauto_plugin.cma)
  (native plugins/rtauto/rtauto_plugin.cmxa))
 (plugins
  (byte plugins/rtauto/rtauto_plugin.cma)
  (native plugins/rtauto/rtauto_plugin.cmxs))
 (native_archives plugins/rtauto/rtauto_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Rtauto_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name rtauto_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Rtauto_plugin)
      (impl (path plugins/rtauto/rtauto_plugin.ml-gen))))
    (name Rtauto_plugin)
    (modules
     (module
      (obj_name rtauto_plugin__G_rtauto)
      (visibility public)
      (source (path G_rtauto) (impl (path plugins/rtauto/g_rtauto.ml))))
     (module
      (obj_name rtauto_plugin__Proof_search)
      (visibility public)
      (source
       (path Proof_search)
       (intf (path plugins/rtauto/proof_search.mli))
       (impl (path plugins/rtauto/proof_search.ml))))
     (module
      (obj_name rtauto_plugin__Refl_tauto)
      (visibility public)
      (source
       (path Refl_tauto)
       (intf (path plugins/rtauto/refl_tauto.mli))
       (impl (path plugins/rtauto/refl_tauto.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.ssreflect)
 (kind normal)
 (synopsis "Coq's ssreflect plugin")
 (archives
  (byte plugins/ssreflect/ssreflect_plugin.cma)
  (native plugins/ssreflect/ssreflect_plugin.cmxa))
 (plugins
  (byte plugins/ssreflect/ssreflect_plugin.cma)
  (native plugins/ssreflect/ssreflect_plugin.cmxs))
 (native_archives plugins/ssreflect/ssreflect_plugin.a)
 (requires coq-core.plugins.ssrmatching)
 (main_module_name Ssreflect_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name ssreflect_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Ssreflect_plugin)
      (impl (path plugins/ssreflect/ssreflect_plugin.ml-gen))))
    (name Ssreflect_plugin)
    (modules
     (module
      (obj_name ssreflect_plugin__Ssrast)
      (visibility public)
      (source (path Ssrast) (intf (path plugins/ssreflect/ssrast.mli))))
     (module
      (obj_name ssreflect_plugin__Ssrbwd)
      (visibility public)
      (source
       (path Ssrbwd)
       (intf (path plugins/ssreflect/ssrbwd.mli))
       (impl (path plugins/ssreflect/ssrbwd.ml))))
     (module
      (obj_name ssreflect_plugin__Ssrcommon)
      (visibility public)
      (source
       (path Ssrcommon)
       (intf (path plugins/ssreflect/ssrcommon.mli))
       (impl (path plugins/ssreflect/ssrcommon.ml))))
     (module
      (obj_name ssreflect_plugin__Ssrelim)
      (visibility public)
      (source
       (path Ssrelim)
       (intf (path plugins/ssreflect/ssrelim.mli))
       (impl (path plugins/ssreflect/ssrelim.ml))))
     (module
      (obj_name ssreflect_plugin__Ssrequality)
      (visibility public)
      (source
       (path Ssrequality)
       (intf (path plugins/ssreflect/ssrequality.mli))
       (impl (path plugins/ssreflect/ssrequality.ml))))
     (module
      (obj_name ssreflect_plugin__Ssrfwd)
      (visibility public)
      (source
       (path Ssrfwd)
       (intf (path plugins/ssreflect/ssrfwd.mli))
       (impl (path plugins/ssreflect/ssrfwd.ml))))
     (module
      (obj_name ssreflect_plugin__Ssripats)
      (visibility public)
      (source
       (path Ssripats)
       (intf (path plugins/ssreflect/ssripats.mli))
       (impl (path plugins/ssreflect/ssripats.ml))))
     (module
      (obj_name ssreflect_plugin__Ssrparser)
      (visibility public)
      (source
       (path Ssrparser)
       (intf (path plugins/ssreflect/ssrparser.mli))
       (impl (path plugins/ssreflect/ssrparser.ml))))
     (module
      (obj_name ssreflect_plugin__Ssrprinters)
      (visibility public)
      (source
       (path Ssrprinters)
       (intf (path plugins/ssreflect/ssrprinters.mli))
       (impl (path plugins/ssreflect/ssrprinters.ml))))
     (module
      (obj_name ssreflect_plugin__Ssrtacticals)
      (visibility public)
      (source
       (path Ssrtacticals)
       (intf (path plugins/ssreflect/ssrtacticals.mli))
       (impl (path plugins/ssreflect/ssrtacticals.ml))))
     (module
      (obj_name ssreflect_plugin__Ssrvernac)
      (visibility public)
      (source
       (path Ssrvernac)
       (intf (path plugins/ssreflect/ssrvernac.mli))
       (impl (path plugins/ssreflect/ssrvernac.ml))))
     (module
      (obj_name ssreflect_plugin__Ssrview)
      (visibility public)
      (source
       (path Ssrview)
       (intf (path plugins/ssreflect/ssrview.mli))
       (impl (path plugins/ssreflect/ssrview.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.ssrmatching)
 (kind normal)
 (synopsis "Coq ssrmatching plugin")
 (archives
  (byte plugins/ssrmatching/ssrmatching_plugin.cma)
  (native plugins/ssrmatching/ssrmatching_plugin.cmxa))
 (plugins
  (byte plugins/ssrmatching/ssrmatching_plugin.cma)
  (native plugins/ssrmatching/ssrmatching_plugin.cmxs))
 (native_archives plugins/ssrmatching/ssrmatching_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Ssrmatching_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name ssrmatching_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Ssrmatching_plugin)
      (impl (path plugins/ssrmatching/ssrmatching_plugin.ml-gen))))
    (name Ssrmatching_plugin)
    (modules
     (module
      (obj_name ssrmatching_plugin__G_ssrmatching)
      (visibility public)
      (source
       (path G_ssrmatching)
       (intf (path plugins/ssrmatching/g_ssrmatching.mli))
       (impl (path plugins/ssrmatching/g_ssrmatching.ml))))
     (module
      (obj_name ssrmatching_plugin__Ssrmatching)
      (visibility public)
      (source
       (path Ssrmatching)
       (intf (path plugins/ssrmatching/ssrmatching.mli))
       (impl (path plugins/ssrmatching/ssrmatching.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.tauto)
 (kind normal)
 (synopsis "Coq's tauto tactic")
 (archives
  (byte plugins/tauto/tauto_plugin.cma)
  (native plugins/tauto/tauto_plugin.cmxa))
 (plugins
  (byte plugins/tauto/tauto_plugin.cma)
  (native plugins/tauto/tauto_plugin.cmxs))
 (native_archives plugins/tauto/tauto_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Tauto_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name tauto_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Tauto_plugin)
      (impl (path plugins/tauto/tauto_plugin.ml-gen))))
    (name Tauto_plugin)
    (modules
     (module
      (obj_name tauto_plugin__Tauto)
      (visibility public)
      (source
       (path Tauto)
       (intf (path plugins/tauto/tauto.mli))
       (impl (path plugins/tauto/tauto.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.tutorial.p0)
 (kind normal)
 (archives
  (byte plugins/tutorial/p0/tuto0_plugin.cma)
  (native plugins/tutorial/p0/tuto0_plugin.cmxa))
 (plugins
  (byte plugins/tutorial/p0/tuto0_plugin.cma)
  (native plugins/tutorial/p0/tuto0_plugin.cmxs))
 (native_archives plugins/tutorial/p0/tuto0_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Tuto0_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name tuto0_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Tuto0_plugin)
      (impl (path plugins/tutorial/p0/tuto0_plugin.ml-gen))))
    (name Tuto0_plugin)
    (modules
     (module
      (obj_name tuto0_plugin__G_tuto0)
      (visibility public)
      (source (path G_tuto0) (impl (path plugins/tutorial/p0/g_tuto0.ml))))
     (module
      (obj_name tuto0_plugin__Tuto0_main)
      (visibility public)
      (source
       (path Tuto0_main)
       (intf (path plugins/tutorial/p0/tuto0_main.mli))
       (impl (path plugins/tutorial/p0/tuto0_main.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.tutorial.p1)
 (kind normal)
 (archives
  (byte plugins/tutorial/p1/tuto1_plugin.cma)
  (native plugins/tutorial/p1/tuto1_plugin.cmxa))
 (plugins
  (byte plugins/tutorial/p1/tuto1_plugin.cma)
  (native plugins/tutorial/p1/tuto1_plugin.cmxs))
 (native_archives plugins/tutorial/p1/tuto1_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Tuto1_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name tuto1_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Tuto1_plugin)
      (impl (path plugins/tutorial/p1/tuto1_plugin.ml-gen))))
    (name Tuto1_plugin)
    (modules
     (module
      (obj_name tuto1_plugin__G_tuto1)
      (visibility public)
      (source (path G_tuto1) (impl (path plugins/tutorial/p1/g_tuto1.ml))))
     (module
      (obj_name tuto1_plugin__Inspector)
      (visibility public)
      (source
       (path Inspector)
       (intf (path plugins/tutorial/p1/inspector.mli))
       (impl (path plugins/tutorial/p1/inspector.ml))))
     (module
      (obj_name tuto1_plugin__Simple_check)
      (visibility public)
      (source
       (path Simple_check)
       (intf (path plugins/tutorial/p1/simple_check.mli))
       (impl (path plugins/tutorial/p1/simple_check.ml))))
     (module
      (obj_name tuto1_plugin__Simple_declare)
      (visibility public)
      (source
       (path Simple_declare)
       (intf (path plugins/tutorial/p1/simple_declare.mli))
       (impl (path plugins/tutorial/p1/simple_declare.ml))))
     (module
      (obj_name tuto1_plugin__Simple_print)
      (visibility public)
      (source
       (path Simple_print)
       (intf (path plugins/tutorial/p1/simple_print.mli))
       (impl (path plugins/tutorial/p1/simple_print.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.tutorial.p2)
 (kind normal)
 (archives
  (byte plugins/tutorial/p2/tuto2_plugin.cma)
  (native plugins/tutorial/p2/tuto2_plugin.cmxa))
 (plugins
  (byte plugins/tutorial/p2/tuto2_plugin.cma)
  (native plugins/tutorial/p2/tuto2_plugin.cmxs))
 (native_archives plugins/tutorial/p2/tuto2_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Tuto2_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name tuto2_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Tuto2_plugin)
      (impl (path plugins/tutorial/p2/tuto2_plugin.ml-gen))))
    (name Tuto2_plugin)
    (modules
     (module
      (obj_name tuto2_plugin__Counter)
      (visibility public)
      (source
       (path Counter)
       (intf (path plugins/tutorial/p2/counter.mli))
       (impl (path plugins/tutorial/p2/counter.ml))))
     (module
      (obj_name tuto2_plugin__Custom)
      (visibility public)
      (source
       (path Custom)
       (intf (path plugins/tutorial/p2/custom.mli))
       (impl (path plugins/tutorial/p2/custom.ml))))
     (module
      (obj_name tuto2_plugin__G_tuto2)
      (visibility public)
      (source (path G_tuto2) (impl (path plugins/tutorial/p2/g_tuto2.ml))))
     (module
      (obj_name tuto2_plugin__Persistent_counter)
      (visibility public)
      (source
       (path Persistent_counter)
       (intf (path plugins/tutorial/p2/persistent_counter.mli))
       (impl (path plugins/tutorial/p2/persistent_counter.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.tutorial.p3)
 (kind normal)
 (archives
  (byte plugins/tutorial/p3/tuto3_plugin.cma)
  (native plugins/tutorial/p3/tuto3_plugin.cmxa))
 (plugins
  (byte plugins/tutorial/p3/tuto3_plugin.cma)
  (native plugins/tutorial/p3/tuto3_plugin.cmxs))
 (native_archives plugins/tutorial/p3/tuto3_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Tuto3_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name tuto3_plugin)
     (visibility public)
     (kind alias)
     (source
      (path Tuto3_plugin)
      (impl (path plugins/tutorial/p3/tuto3_plugin.ml-gen))))
    (name Tuto3_plugin)
    (modules
     (module
      (obj_name tuto3_plugin__Construction_game)
      (visibility public)
      (source
       (path Construction_game)
       (intf (path plugins/tutorial/p3/construction_game.mli))
       (impl (path plugins/tutorial/p3/construction_game.ml))))
     (module
      (obj_name tuto3_plugin__G_tuto3)
      (visibility public)
      (source (path G_tuto3) (impl (path plugins/tutorial/p3/g_tuto3.ml))))
     (module
      (obj_name tuto3_plugin__Tuto_tactic)
      (visibility public)
      (source
       (path Tuto_tactic)
       (intf (path plugins/tutorial/p3/tuto_tactic.mli))
       (impl (path plugins/tutorial/p3/tuto_tactic.ml))))))
   (wrapped true))))
(library
 (name coq-core.plugins.zify)
 (kind normal)
 (synopsis "Coq's zify plugin")
 (archives
  (byte plugins/zify/zify_plugin.cma)
  (native plugins/zify/zify_plugin.cmxa))
 (plugins
  (byte plugins/zify/zify_plugin.cma)
  (native plugins/zify/zify_plugin.cmxs))
 (native_archives plugins/zify/zify_plugin.a)
 (requires coq-core.plugins.ltac)
 (main_module_name Zify_plugin)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name zify_plugin)
     (visibility public)
     (kind alias)
     (source (path Zify_plugin) (impl (path plugins/zify/zify_plugin.ml-gen))))
    (name Zify_plugin)
    (modules
     (module
      (obj_name zify_plugin__G_zify)
      (visibility public)
      (source (path G_zify) (impl (path plugins/zify/g_zify.ml))))
     (module
      (obj_name zify_plugin__Zify)
      (visibility public)
      (source
       (path Zify)
       (intf (path plugins/zify/zify.mli))
       (impl (path plugins/zify/zify.ml))))))
   (wrapped true))))
(library
 (name coq-core.pretyping)
 (kind normal)
 (synopsis "Coq's Type Inference Component (Pretyper)")
 (archives (byte pretyping/pretyping.cma) (native pretyping/pretyping.cmxa))
 (plugins (byte pretyping/pretyping.cma) (native pretyping/pretyping.cmxs))
 (native_archives pretyping/pretyping.a)
 (requires coq-core.engine)
 (modes byte native)
 (modules
  (unwrapped
   (module
    (obj_name arguments_renaming)
    (visibility public)
    (source
     (path Arguments_renaming)
     (intf (path pretyping/arguments_renaming.mli))
     (impl (path pretyping/arguments_renaming.ml))))
   (module
    (obj_name cases)
    (visibility public)
    (source
     (path Cases)
     (intf (path pretyping/cases.mli))
     (impl (path pretyping/cases.ml))))
   (module
    (obj_name cbv)
    (visibility public)
    (source
     (path Cbv)
     (intf (path pretyping/cbv.mli))
     (impl (path pretyping/cbv.ml))))
   (module
    (obj_name coercion)
    (visibility public)
    (source
     (path Coercion)
     (intf (path pretyping/coercion.mli))
     (impl (path pretyping/coercion.ml))))
   (module
    (obj_name coercionops)
    (visibility public)
    (source
     (path Coercionops)
     (intf (path pretyping/coercionops.mli))
     (impl (path pretyping/coercionops.ml))))
   (module
    (obj_name constr_matching)
    (visibility public)
    (source
     (path Constr_matching)
     (intf (path pretyping/constr_matching.mli))
     (impl (path pretyping/constr_matching.ml))))
   (module
    (obj_name detyping)
    (visibility public)
    (source
     (path Detyping)
     (intf (path pretyping/detyping.mli))
     (impl (path pretyping/detyping.ml))))
   (module
    (obj_name evarconv)
    (visibility public)
    (source
     (path Evarconv)
     (intf (path pretyping/evarconv.mli))
     (impl (path pretyping/evarconv.ml))))
   (module
    (obj_name evardefine)
    (visibility public)
    (source
     (path Evardefine)
     (intf (path pretyping/evardefine.mli))
     (impl (path pretyping/evardefine.ml))))
   (module
    (obj_name evarsolve)
    (visibility public)
    (source
     (path Evarsolve)
     (intf (path pretyping/evarsolve.mli))
     (impl (path pretyping/evarsolve.ml))))
   (module
    (obj_name find_subterm)
    (visibility public)
    (source
     (path Find_subterm)
     (intf (path pretyping/find_subterm.mli))
     (impl (path pretyping/find_subterm.ml))))
   (module
    (obj_name geninterp)
    (visibility public)
    (source
     (path Geninterp)
     (intf (path pretyping/geninterp.mli))
     (impl (path pretyping/geninterp.ml))))
   (module
    (obj_name globEnv)
    (visibility public)
    (source
     (path GlobEnv)
     (intf (path pretyping/globEnv.mli))
     (impl (path pretyping/globEnv.ml))))
   (module
    (obj_name glob_ops)
    (visibility public)
    (source
     (path Glob_ops)
     (intf (path pretyping/glob_ops.mli))
     (impl (path pretyping/glob_ops.ml))))
   (module
    (obj_name glob_term)
    (visibility public)
    (source (path Glob_term) (impl (path pretyping/glob_term.ml))))
   (module
    (obj_name heads)
    (visibility public)
    (source
     (path Heads)
     (intf (path pretyping/heads.mli))
     (impl (path pretyping/heads.ml))))
   (module
    (obj_name indrec)
    (visibility public)
    (source
     (path Indrec)
     (intf (path pretyping/indrec.mli))
     (impl (path pretyping/indrec.ml))))
   (module
    (obj_name inductiveops)
    (visibility public)
    (source
     (path Inductiveops)
     (intf (path pretyping/inductiveops.mli))
     (impl (path pretyping/inductiveops.ml))))
   (module
    (obj_name keys)
    (visibility public)
    (source
     (path Keys)
     (intf (path pretyping/keys.mli))
     (impl (path pretyping/keys.ml))))
   (module
    (obj_name locus)
    (visibility public)
    (source (path Locus) (impl (path pretyping/locus.ml))))
   (module
    (obj_name locusops)
    (visibility public)
    (source
     (path Locusops)
     (intf (path pretyping/locusops.mli))
     (impl (path pretyping/locusops.ml))))
   (module
    (obj_name ltac_pretype)
    (visibility public)
    (source (path Ltac_pretype) (impl (path pretyping/ltac_pretype.ml))))
   (module
    (obj_name nativenorm)
    (visibility public)
    (source
     (path Nativenorm)
     (intf (path pretyping/nativenorm.mli))
     (impl (path pretyping/nativenorm.ml))))
   (module
    (obj_name pattern)
    (visibility public)
    (source (path Pattern) (impl (path pretyping/pattern.ml))))
   (module
    (obj_name patternops)
    (visibility public)
    (source
     (path Patternops)
     (intf (path pretyping/patternops.mli))
     (impl (path pretyping/patternops.ml))))
   (module
    (obj_name pretype_errors)
    (visibility public)
    (source
     (path Pretype_errors)
     (intf (path pretyping/pretype_errors.mli))
     (impl (path pretyping/pretype_errors.ml))))
   (module
    (obj_name pretyping)
    (visibility public)
    (source
     (path Pretyping)
     (intf (path pretyping/pretyping.mli))
     (impl (path pretyping/pretyping.ml))))
   (module
    (obj_name program)
    (visibility public)
    (source
     (path Program)
     (intf (path pretyping/program.mli))
     (impl (path pretyping/program.ml))))
   (module
    (obj_name reductionops)
    (visibility public)
    (source
     (path Reductionops)
     (intf (path pretyping/reductionops.mli))
     (impl (path pretyping/reductionops.ml))))
   (module
    (obj_name retyping)
    (visibility public)
    (source
     (path Retyping)
     (intf (path pretyping/retyping.mli))
     (impl (path pretyping/retyping.ml))))
   (module
    (obj_name structures)
    (visibility public)
    (source
     (path Structures)
     (intf (path pretyping/structures.mli))
     (impl (path pretyping/structures.ml))))
   (module
    (obj_name tacred)
    (visibility public)
    (source
     (path Tacred)
     (intf (path pretyping/tacred.mli))
     (impl (path pretyping/tacred.ml))))
   (module
    (obj_name typeclasses)
    (visibility public)
    (source
     (path Typeclasses)
     (intf (path pretyping/typeclasses.mli))
     (impl (path pretyping/typeclasses.ml))))
   (module
    (obj_name typeclasses_errors)
    (visibility public)
    (source
     (path Typeclasses_errors)
     (intf (path pretyping/typeclasses_errors.mli))
     (impl (path pretyping/typeclasses_errors.ml))))
   (module
    (obj_name typing)
    (visibility public)
    (source
     (path Typing)
     (intf (path pretyping/typing.mli))
     (impl (path pretyping/typing.ml))))
   (module
    (obj_name unification)
    (visibility public)
    (source
     (path Unification)
     (intf (path pretyping/unification.mli))
     (impl (path pretyping/unification.ml))))
   (module
    (obj_name vnorm)
    (visibility public)
    (source
     (path Vnorm)
     (intf (path pretyping/vnorm.mli))
     (impl (path pretyping/vnorm.ml)))))))
(library
 (name coq-core.printing)
 (kind normal)
 (synopsis "Coq's Term Pretty Printing Library")
 (archives (byte printing/printing.cma) (native printing/printing.cmxa))
 (plugins (byte printing/printing.cma) (native printing/printing.cmxs))
 (native_archives printing/printing.a)
 (requires coq-core.parsing coq-core.proofs)
 (modes byte native)
 (modules
  (unwrapped
   (module
    (obj_name genprint)
    (visibility public)
    (source
     (path Genprint)
     (intf (path printing/genprint.mli))
     (impl (path printing/genprint.ml))))
   (module
    (obj_name ppconstr)
    (visibility public)
    (source
     (path Ppconstr)
     (intf (path printing/ppconstr.mli))
     (impl (path printing/ppconstr.ml))))
   (module
    (obj_name ppextend)
    (visibility public)
    (source
     (path Ppextend)
     (intf (path printing/ppextend.mli))
     (impl (path printing/ppextend.ml))))
   (module
    (obj_name pputils)
    (visibility public)
    (source
     (path Pputils)
     (intf (path printing/pputils.mli))
     (impl (path printing/pputils.ml))))
   (module
    (obj_name printer)
    (visibility public)
    (source
     (path Printer)
     (intf (path printing/printer.mli))
     (impl (path printing/printer.ml))))
   (module
    (obj_name proof_diffs)
    (visibility public)
    (source
     (path Proof_diffs)
     (intf (path printing/proof_diffs.mli))
     (impl (path printing/proof_diffs.ml)))))))
(library
 (name coq-core.proofs)
 (kind normal)
 (synopsis
  "Coq's Higher-level Refinement Proof Engine and Top-level Proof Structure")
 (archives (byte proofs/proofs.cma) (native proofs/proofs.cmxa))
 (plugins (byte proofs/proofs.cma) (native proofs/proofs.cmxs))
 (native_archives proofs/proofs.a)
 (requires coq-core.pretyping)
 (modes byte native)
 (modules
  (unwrapped
   (module
    (obj_name clenv)
    (visibility public)
    (source
     (path Clenv)
     (intf (path proofs/clenv.mli))
     (impl (path proofs/clenv.ml))))
   (module
    (obj_name evar_refiner)
    (visibility public)
    (source
     (path Evar_refiner)
     (intf (path proofs/evar_refiner.mli))
     (impl (path proofs/evar_refiner.ml))))
   (module
    (obj_name goal)
    (visibility public)
    (source
     (path Goal)
     (intf (path proofs/goal.mli))
     (impl (path proofs/goal.ml))))
   (module
    (obj_name goal_select)
    (visibility public)
    (source
     (path Goal_select)
     (intf (path proofs/goal_select.mli))
     (impl (path proofs/goal_select.ml))))
   (module
    (obj_name logic)
    (visibility public)
    (source
     (path Logic)
     (intf (path proofs/logic.mli))
     (impl (path proofs/logic.ml))))
   (module
    (obj_name miscprint)
    (visibility public)
    (source
     (path Miscprint)
     (intf (path proofs/miscprint.mli))
     (impl (path proofs/miscprint.ml))))
   (module
    (obj_name proof)
    (visibility public)
    (source
     (path Proof)
     (intf (path proofs/proof.mli))
     (impl (path proofs/proof.ml))))
   (module
    (obj_name proof_bullet)
    (visibility public)
    (source
     (path Proof_bullet)
     (intf (path proofs/proof_bullet.mli))
     (impl (path proofs/proof_bullet.ml))))
   (module
    (obj_name refine)
    (visibility public)
    (source
     (path Refine)
     (intf (path proofs/refine.mli))
     (impl (path proofs/refine.ml))))
   (module
    (obj_name tacmach)
    (visibility public)
    (source
     (path Tacmach)
     (intf (path proofs/tacmach.mli))
     (impl (path proofs/tacmach.ml))))
   (module
    (obj_name tactypes)
    (visibility public)
    (source (path Tactypes) (impl (path proofs/tactypes.ml)))))))
(library
 (name coq-core.stm)
 (kind normal)
 (synopsis "Coq's Document Manager and Proof Checking Scheduler")
 (archives (byte stm/stm.cma) (native stm/stm.cmxa))
 (plugins (byte stm/stm.cma) (native stm/stm.cmxs))
 (native_archives stm/stm.a)
 (requires coq-core.sysinit)
 (modes byte native)
 (modules
  (unwrapped
   (module
    (obj_name asyncTaskQueue)
    (visibility public)
    (source
     (path AsyncTaskQueue)
     (intf (path stm/asyncTaskQueue.mli))
     (impl (path stm/asyncTaskQueue.ml))))
   (module
    (obj_name coqworkmgrApi)
    (visibility public)
    (source
     (path CoqworkmgrApi)
     (intf (path stm/coqworkmgrApi.mli))
     (impl (path stm/coqworkmgrApi.ml))))
   (module
    (obj_name dag)
    (visibility public)
    (source (path Dag) (intf (path stm/dag.mli)) (impl (path stm/dag.ml))))
   (module
    (obj_name partac)
    (visibility public)
    (source
     (path Partac)
     (intf (path stm/partac.mli))
     (impl (path stm/partac.ml))))
   (module
    (obj_name proofBlockDelimiter)
    (visibility public)
    (source
     (path ProofBlockDelimiter)
     (intf (path stm/proofBlockDelimiter.mli))
     (impl (path stm/proofBlockDelimiter.ml))))
   (module
    (obj_name spawned)
    (visibility public)
    (source
     (path Spawned)
     (intf (path stm/spawned.mli))
     (impl (path stm/spawned.ml))))
   (module
    (obj_name stm)
    (visibility public)
    (source (path Stm) (intf (path stm/stm.mli)) (impl (path stm/stm.ml))))
   (module
    (obj_name stmargs)
    (visibility public)
    (source
     (path Stmargs)
     (intf (path stm/stmargs.mli))
     (impl (path stm/stmargs.ml))))
   (module
    (obj_name tQueue)
    (visibility public)
    (source
     (path TQueue)
     (intf (path stm/tQueue.mli))
     (impl (path stm/tQueue.ml))))
   (module
    (obj_name vcs)
    (visibility public)
    (source (path Vcs) (intf (path stm/vcs.mli)) (impl (path stm/vcs.ml))))
   (module
    (obj_name vio_checking)
    (visibility public)
    (source
     (path Vio_checking)
     (intf (path stm/vio_checking.mli))
     (impl (path stm/vio_checking.ml))))
   (module
    (obj_name workerPool)
    (visibility public)
    (source
     (path WorkerPool)
     (intf (path stm/workerPool.mli))
     (impl (path stm/workerPool.ml)))))))
(library
 (name coq-core.sysinit)
 (kind normal)
 (synopsis "Coq's initialization")
 (archives (byte sysinit/sysinit.cma) (native sysinit/sysinit.cmxa))
 (plugins (byte sysinit/sysinit.cma) (native sysinit/sysinit.cmxs))
 (native_archives sysinit/sysinit.a)
 (requires coq-core.boot coq-core.vernac findlib)
 (modes byte native)
 (modules
  (unwrapped
   (module
    (obj_name coqargs)
    (visibility public)
    (source
     (path Coqargs)
     (intf (path sysinit/coqargs.mli))
     (impl (path sysinit/coqargs.ml))))
   (module
    (obj_name coqinit)
    (visibility public)
    (source
     (path Coqinit)
     (intf (path sysinit/coqinit.mli))
     (impl (path sysinit/coqinit.ml))))
   (module
    (obj_name coqloadpath)
    (visibility public)
    (source
     (path Coqloadpath)
     (intf (path sysinit/coqloadpath.mli))
     (impl (path sysinit/coqloadpath.ml)))))))
(library
 (name coq-core.tactics)
 (kind normal)
 (synopsis "Coq's Core Tactics [ML implementation]")
 (archives (byte tactics/tactics.cma) (native tactics/tactics.cmxa))
 (plugins (byte tactics/tactics.cma) (native tactics/tactics.cmxs))
 (native_archives tactics/tactics.a)
 (requires coq-core.printing)
 (modes byte native)
 (modules
  (unwrapped
   (module
    (obj_name abstract)
    (visibility public)
    (source
     (path Abstract)
     (intf (path tactics/abstract.mli))
     (impl (path tactics/abstract.ml))))
   (module
    (obj_name auto)
    (visibility public)
    (source
     (path Auto)
     (intf (path tactics/auto.mli))
     (impl (path tactics/auto.ml))))
   (module
    (obj_name autorewrite)
    (visibility public)
    (source
     (path Autorewrite)
     (intf (path tactics/autorewrite.mli))
     (impl (path tactics/autorewrite.ml))))
   (module
    (obj_name btermdn)
    (visibility public)
    (source
     (path Btermdn)
     (intf (path tactics/btermdn.mli))
     (impl (path tactics/btermdn.ml))))
   (module
    (obj_name cbn)
    (visibility public)
    (source
     (path Cbn)
     (intf (path tactics/cbn.mli))
     (impl (path tactics/cbn.ml))))
   (module
    (obj_name class_tactics)
    (visibility public)
    (source
     (path Class_tactics)
     (intf (path tactics/class_tactics.mli))
     (impl (path tactics/class_tactics.ml))))
   (module
    (obj_name contradiction)
    (visibility public)
    (source
     (path Contradiction)
     (intf (path tactics/contradiction.mli))
     (impl (path tactics/contradiction.ml))))
   (module
    (obj_name declareScheme)
    (visibility public)
    (source
     (path DeclareScheme)
     (intf (path tactics/declareScheme.mli))
     (impl (path tactics/declareScheme.ml))))
   (module
    (obj_name dn)
    (visibility public)
    (source
     (path Dn)
     (intf (path tactics/dn.mli))
     (impl (path tactics/dn.ml))))
   (module
    (obj_name dnet)
    (visibility public)
    (source
     (path Dnet)
     (intf (path tactics/dnet.mli))
     (impl (path tactics/dnet.ml))))
   (module
    (obj_name eauto)
    (visibility public)
    (source
     (path Eauto)
     (intf (path tactics/eauto.mli))
     (impl (path tactics/eauto.ml))))
   (module
    (obj_name elim)
    (visibility public)
    (source
     (path Elim)
     (intf (path tactics/elim.mli))
     (impl (path tactics/elim.ml))))
   (module
    (obj_name elimschemes)
    (visibility public)
    (source
     (path Elimschemes)
     (intf (path tactics/elimschemes.mli))
     (impl (path tactics/elimschemes.ml))))
   (module
    (obj_name eqdecide)
    (visibility public)
    (source
     (path Eqdecide)
     (intf (path tactics/eqdecide.mli))
     (impl (path tactics/eqdecide.ml))))
   (module
    (obj_name eqschemes)
    (visibility public)
    (source
     (path Eqschemes)
     (intf (path tactics/eqschemes.mli))
     (impl (path tactics/eqschemes.ml))))
   (module
    (obj_name equality)
    (visibility public)
    (source
     (path Equality)
     (intf (path tactics/equality.mli))
     (impl (path tactics/equality.ml))))
   (module
    (obj_name genredexpr)
    (visibility public)
    (source (path Genredexpr) (impl (path tactics/genredexpr.ml))))
   (module
    (obj_name hints)
    (visibility public)
    (source
     (path Hints)
     (intf (path tactics/hints.mli))
     (impl (path tactics/hints.ml))))
   (module
    (obj_name hipattern)
    (visibility public)
    (source
     (path Hipattern)
     (intf (path tactics/hipattern.mli))
     (impl (path tactics/hipattern.ml))))
   (module
    (obj_name ind_tables)
    (visibility public)
    (source
     (path Ind_tables)
     (intf (path tactics/ind_tables.mli))
     (impl (path tactics/ind_tables.ml))))
   (module
    (obj_name inv)
    (visibility public)
    (source
     (path Inv)
     (intf (path tactics/inv.mli))
     (impl (path tactics/inv.ml))))
   (module
    (obj_name ppred)
    (visibility public)
    (source
     (path Ppred)
     (intf (path tactics/ppred.mli))
     (impl (path tactics/ppred.ml))))
   (module
    (obj_name redexpr)
    (visibility public)
    (source
     (path Redexpr)
     (intf (path tactics/redexpr.mli))
     (impl (path tactics/redexpr.ml))))
   (module
    (obj_name redops)
    (visibility public)
    (source
     (path Redops)
     (intf (path tactics/redops.mli))
     (impl (path tactics/redops.ml))))
   (module
    (obj_name rewrite)
    (visibility public)
    (source
     (path Rewrite)
     (intf (path tactics/rewrite.mli))
     (impl (path tactics/rewrite.ml))))
   (module
    (obj_name tacticals)
    (visibility public)
    (source
     (path Tacticals)
     (intf (path tactics/tacticals.mli))
     (impl (path tactics/tacticals.ml))))
   (module
    (obj_name tactics)
    (visibility public)
    (source
     (path Tactics)
     (intf (path tactics/tactics.mli))
     (impl (path tactics/tactics.ml))))
   (module
    (obj_name term_dnet)
    (visibility public)
    (source
     (path Term_dnet)
     (intf (path tactics/term_dnet.mli))
     (impl (path tactics/term_dnet.ml)))))))
(library
 (name coq-core.top_printers)
 (kind normal)
 (synopsis "Coq's Debug Printers")
 (archives
  (byte top_printers/top_printers.cma)
  (native top_printers/top_printers.cmxa))
 (plugins
  (byte top_printers/top_printers.cma)
  (native top_printers/top_printers.cmxs))
 (native_archives top_printers/top_printers.a)
 (requires coq-core.toplevel coq-core.plugins.ltac)
 (modes byte native)
 (modules
  (singleton
   (obj_name top_printers)
   (visibility public)
   (source
    (path Top_printers)
    (intf (path top_printers/top_printers.mli))
    (impl (path top_printers/top_printers.ml))))))
(library
 (name coq-core.toplevel)
 (kind normal)
 (synopsis "Coq's Interactive Shell [terminal-based]")
 (archives (byte toplevel/toplevel.cma) (native toplevel/toplevel.cmxa))
 (plugins (byte toplevel/toplevel.cma) (native toplevel/toplevel.cmxs))
 (native_archives toplevel/toplevel.a)
 (requires coq-core.stm)
 (modes byte native)
 (modules
  (unwrapped
   (module
    (obj_name ccompile)
    (visibility public)
    (source
     (path Ccompile)
     (intf (path toplevel/ccompile.mli))
     (impl (path toplevel/ccompile.ml))))
   (module
    (obj_name coqc)
    (visibility public)
    (source
     (path Coqc)
     (intf (path toplevel/coqc.mli))
     (impl (path toplevel/coqc.ml))))
   (module
    (obj_name coqcargs)
    (visibility public)
    (source
     (path Coqcargs)
     (intf (path toplevel/coqcargs.mli))
     (impl (path toplevel/coqcargs.ml))))
   (module
    (obj_name coqloop)
    (visibility public)
    (source
     (path Coqloop)
     (intf (path toplevel/coqloop.mli))
     (impl (path toplevel/coqloop.ml))))
   (module
    (obj_name coqrc)
    (visibility public)
    (source
     (path Coqrc)
     (intf (path toplevel/coqrc.mli))
     (impl (path toplevel/coqrc.ml))))
   (module
    (obj_name coqtop)
    (visibility public)
    (source
     (path Coqtop)
     (intf (path toplevel/coqtop.mli))
     (impl (path toplevel/coqtop.ml))))
   (module
    (obj_name g_toplevel)
    (visibility public)
    (source (path G_toplevel) (impl (path toplevel/g_toplevel.ml))))
   (module
    (obj_name vernac)
    (visibility public)
    (source
     (path Vernac)
     (intf (path toplevel/vernac.mli))
     (impl (path toplevel/vernac.ml))))
   (module
    (obj_name workerLoop)
    (visibility public)
    (source
     (path WorkerLoop)
     (intf (path toplevel/workerLoop.mli))
     (impl (path toplevel/workerLoop.ml)))))))
(library
 (name coq-core.vernac)
 (kind normal)
 (synopsis "Coq's Vernacular Language")
 (archives (byte vernac/vernac.cma) (native vernac/vernac.cmxa))
 (plugins (byte vernac/vernac.cma) (native vernac/vernac.cmxs))
 (native_archives vernac/vernac.a)
 (requires coq-core.tactics coq-core.parsing findlib.dynload)
 (modes byte native)
 (modules
  (unwrapped
   (module
    (obj_name assumptions)
    (visibility public)
    (source
     (path Assumptions)
     (intf (path vernac/assumptions.mli))
     (impl (path vernac/assumptions.ml))))
   (module
    (obj_name attributes)
    (visibility public)
    (source
     (path Attributes)
     (intf (path vernac/attributes.mli))
     (impl (path vernac/attributes.ml))))
   (module
    (obj_name auto_ind_decl)
    (visibility public)
    (source
     (path Auto_ind_decl)
     (intf (path vernac/auto_ind_decl.mli))
     (impl (path vernac/auto_ind_decl.ml))))
   (module
    (obj_name canonical)
    (visibility public)
    (source
     (path Canonical)
     (intf (path vernac/canonical.mli))
     (impl (path vernac/canonical.ml))))
   (module
    (obj_name classes)
    (visibility public)
    (source
     (path Classes)
     (intf (path vernac/classes.mli))
     (impl (path vernac/classes.ml))))
   (module
    (obj_name comArguments)
    (visibility public)
    (source
     (path ComArguments)
     (intf (path vernac/comArguments.mli))
     (impl (path vernac/comArguments.ml))))
   (module
    (obj_name comAssumption)
    (visibility public)
    (source
     (path ComAssumption)
     (intf (path vernac/comAssumption.mli))
     (impl (path vernac/comAssumption.ml))))
   (module
    (obj_name comCoercion)
    (visibility public)
    (source
     (path ComCoercion)
     (intf (path vernac/comCoercion.mli))
     (impl (path vernac/comCoercion.ml))))
   (module
    (obj_name comDefinition)
    (visibility public)
    (source
     (path ComDefinition)
     (intf (path vernac/comDefinition.mli))
     (impl (path vernac/comDefinition.ml))))
   (module
    (obj_name comExtraDeps)
    (visibility public)
    (source
     (path ComExtraDeps)
     (intf (path vernac/comExtraDeps.mli))
     (impl (path vernac/comExtraDeps.ml))))
   (module
    (obj_name comFixpoint)
    (visibility public)
    (source
     (path ComFixpoint)
     (intf (path vernac/comFixpoint.mli))
     (impl (path vernac/comFixpoint.ml))))
   (module
    (obj_name comHints)
    (visibility public)
    (source
     (path ComHints)
     (intf (path vernac/comHints.mli))
     (impl (path vernac/comHints.ml))))
   (module
    (obj_name comInductive)
    (visibility public)
    (source
     (path ComInductive)
     (intf (path vernac/comInductive.mli))
     (impl (path vernac/comInductive.ml))))
   (module
    (obj_name comPrimitive)
    (visibility public)
    (source
     (path ComPrimitive)
     (intf (path vernac/comPrimitive.mli))
     (impl (path vernac/comPrimitive.ml))))
   (module
    (obj_name comProgramFixpoint)
    (visibility public)
    (source
     (path ComProgramFixpoint)
     (intf (path vernac/comProgramFixpoint.mli))
     (impl (path vernac/comProgramFixpoint.ml))))
   (module
    (obj_name comSearch)
    (visibility public)
    (source
     (path ComSearch)
     (intf (path vernac/comSearch.mli))
     (impl (path vernac/comSearch.ml))))
   (module
    (obj_name comTactic)
    (visibility public)
    (source
     (path ComTactic)
     (intf (path vernac/comTactic.mli))
     (impl (path vernac/comTactic.ml))))
   (module
    (obj_name debugHook)
    (visibility public)
    (source
     (path DebugHook)
     (intf (path vernac/debugHook.mli))
     (impl (path vernac/debugHook.ml))))
   (module
    (obj_name declare)
    (visibility public)
    (source
     (path Declare)
     (intf (path vernac/declare.mli))
     (impl (path vernac/declare.ml))))
   (module
    (obj_name declareInd)
    (visibility public)
    (source
     (path DeclareInd)
     (intf (path vernac/declareInd.mli))
     (impl (path vernac/declareInd.ml))))
   (module
    (obj_name declareUctx)
    (visibility public)
    (source
     (path DeclareUctx)
     (intf (path vernac/declareUctx.mli))
     (impl (path vernac/declareUctx.ml))))
   (module
    (obj_name declareUniv)
    (visibility public)
    (source
     (path DeclareUniv)
     (intf (path vernac/declareUniv.mli))
     (impl (path vernac/declareUniv.ml))))
   (module
    (obj_name declaremods)
    (visibility public)
    (source
     (path Declaremods)
     (intf (path vernac/declaremods.mli))
     (impl (path vernac/declaremods.ml))))
   (module
    (obj_name egramcoq)
    (visibility public)
    (source
     (path Egramcoq)
     (intf (path vernac/egramcoq.mli))
     (impl (path vernac/egramcoq.ml))))
   (module
    (obj_name egramml)
    (visibility public)
    (source
     (path Egramml)
     (intf (path vernac/egramml.mli))
     (impl (path vernac/egramml.ml))))
   (module
    (obj_name future)
    (visibility public)
    (source
     (path Future)
     (intf (path vernac/future.mli))
     (impl (path vernac/future.ml))))
   (module
    (obj_name g_proofs)
    (visibility public)
    (source (path G_proofs) (impl (path vernac/g_proofs.ml))))
   (module
    (obj_name g_vernac)
    (visibility public)
    (source (path G_vernac) (impl (path vernac/g_vernac.ml))))
   (module
    (obj_name himsg)
    (visibility public)
    (source
     (path Himsg)
     (intf (path vernac/himsg.mli))
     (impl (path vernac/himsg.ml))))
   (module
    (obj_name indschemes)
    (visibility public)
    (source
     (path Indschemes)
     (intf (path vernac/indschemes.mli))
     (impl (path vernac/indschemes.ml))))
   (module
    (obj_name library)
    (visibility public)
    (source
     (path Library)
     (intf (path vernac/library.mli))
     (impl (path vernac/library.ml))))
   (module
    (obj_name loadpath)
    (visibility public)
    (source
     (path Loadpath)
     (intf (path vernac/loadpath.mli))
     (impl (path vernac/loadpath.ml))))
   (module
    (obj_name locality)
    (visibility public)
    (source
     (path Locality)
     (intf (path vernac/locality.mli))
     (impl (path vernac/locality.ml))))
   (module
    (obj_name metasyntax)
    (visibility public)
    (source
     (path Metasyntax)
     (intf (path vernac/metasyntax.mli))
     (impl (path vernac/metasyntax.ml))))
   (module
    (obj_name mltop)
    (visibility public)
    (source
     (path Mltop)
     (intf (path vernac/mltop.mli))
     (impl (path vernac/mltop.ml))))
   (module
    (obj_name opaques)
    (visibility public)
    (source
     (path Opaques)
     (intf (path vernac/opaques.mli))
     (impl (path vernac/opaques.ml))))
   (module
    (obj_name ppvernac)
    (visibility public)
    (source
     (path Ppvernac)
     (intf (path vernac/ppvernac.mli))
     (impl (path vernac/ppvernac.ml))))
   (module
    (obj_name prettyp)
    (visibility public)
    (source
     (path Prettyp)
     (intf (path vernac/prettyp.mli))
     (impl (path vernac/prettyp.ml))))
   (module
    (obj_name printmod)
    (visibility public)
    (source
     (path Printmod)
     (intf (path vernac/printmod.mli))
     (impl (path vernac/printmod.ml))))
   (module
    (obj_name proof_using)
    (visibility public)
    (source
     (path Proof_using)
     (intf (path vernac/proof_using.mli))
     (impl (path vernac/proof_using.ml))))
   (module
    (obj_name pvernac)
    (visibility public)
    (source
     (path Pvernac)
     (intf (path vernac/pvernac.mli))
     (impl (path vernac/pvernac.ml))))
   (module
    (obj_name recLemmas)
    (visibility public)
    (source
     (path RecLemmas)
     (intf (path vernac/recLemmas.mli))
     (impl (path vernac/recLemmas.ml))))
   (module
    (obj_name record)
    (visibility public)
    (source
     (path Record)
     (intf (path vernac/record.mli))
     (impl (path vernac/record.ml))))
   (module
    (obj_name retrieveObl)
    (visibility public)
    (source
     (path RetrieveObl)
     (intf (path vernac/retrieveObl.mli))
     (impl (path vernac/retrieveObl.ml))))
   (module
    (obj_name search)
    (visibility public)
    (source
     (path Search)
     (intf (path vernac/search.mli))
     (impl (path vernac/search.ml))))
   (module
    (obj_name topfmt)
    (visibility public)
    (source
     (path Topfmt)
     (intf (path vernac/topfmt.mli))
     (impl (path vernac/topfmt.ml))))
   (module
    (obj_name vernac_classifier)
    (visibility public)
    (source
     (path Vernac_classifier)
     (intf (path vernac/vernac_classifier.mli))
     (impl (path vernac/vernac_classifier.ml))))
   (module
    (obj_name vernacentries)
    (visibility public)
    (source
     (path Vernacentries)
     (intf (path vernac/vernacentries.mli))
     (impl (path vernac/vernacentries.ml))))
   (module
    (obj_name vernacexpr)
    (visibility public)
    (source (path Vernacexpr) (impl (path vernac/vernacexpr.ml))))
   (module
    (obj_name vernacextend)
    (visibility public)
    (source
     (path Vernacextend)
     (intf (path vernac/vernacextend.mli))
     (impl (path vernac/vernacextend.ml))))
   (module
    (obj_name vernacinterp)
    (visibility public)
    (source
     (path Vernacinterp)
     (intf (path vernac/vernacinterp.mli))
     (impl (path vernac/vernacinterp.ml))))
   (module
    (obj_name vernacprop)
    (visibility public)
    (source
     (path Vernacprop)
     (intf (path vernac/vernacprop.mli))
     (impl (path vernac/vernacprop.ml))))
   (module
    (obj_name vernacstate)
    (visibility public)
    (source
     (path Vernacstate)
     (intf (path vernac/vernacstate.mli))
     (impl (path vernac/vernacstate.ml)))))))
(library
 (name coq-core.vm)
 (kind normal)
 (synopsis "Coq's Kernel Abstract Reduction Machine [C implementation]")
 (archives (byte vm/coqrun.cma) (native vm/coqrun.cmxa))
 (plugins (byte vm/coqrun.cma) (native vm/coqrun.cmxs))
 (foreign_objects
  vm/coq_fix_code.o
  vm/coq_float64.o
  vm/coq_interp.o
  vm/coq_memory.o
  vm/coq_values.o)
 (foreign_archives (archives (for all) (files vm/libcoqrun_stubs.a)))
 (foreign_dll_files ../stublibs/dllcoqrun_stubs.so)
 (native_archives vm/coqrun.a)
 (main_module_name Coqrun)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name coqrun)
     (visibility public)
     (kind alias)
     (source (path Coqrun) (impl (path vm/coqrun.ml-gen))))
    (name Coqrun))
   (wrapped true))))
