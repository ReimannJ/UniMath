DIGEST afbc30db401e62d5547abd2b5436436f
FCoq.Logic.WKL
R1391:1397 Coq.Logic.WeakFan <> <> lib
R1399:1402 Coq.Lists.List <> <> lib
R1412:1424 Coq.Lists.List ListNotations <> mod
R1443:1447 Coq.Arith.Arith <> <> lib
ind 1575:1586 <> is_path_from
constr 1642:1645 <> here
constr 1681:1689 <> next_left
constr 1761:1770 <> next_right
R1600:1603 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1591:1594 Coq.Init.Datatypes <> list ind
R1596:1599 Coq.Init.Datatypes <> bool ind
binder 1589:1589 <> P:1
R1615:1618 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1612:1614 Coq.Init.Datatypes <> nat ind
R1628:1631 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1619:1622 Coq.Init.Datatypes <> list ind
R1624:1627 Coq.Init.Datatypes <> bool ind
binder 1647:1647 <> l:4
R1656:1659 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1651:1652 Coq.Init.Logic <> ::type_scope:'~'_x not
R1653:1653 Coq.Logic.WKL <> P:1 var
R1655:1655 Coq.Logic.WKL <> l:4 var
R1660:1671 Coq.Logic.WKL <> is_path_from:2 ind
R1677:1677 Coq.Logic.WKL <> l:4 var
R1673:1673 Coq.Logic.WKL <> P:1 var
binder 1691:1691 <> l:5
binder 1693:1693 <> n:6
R1702:1705 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1697:1698 Coq.Init.Logic <> ::type_scope:'~'_x not
R1699:1699 Coq.Logic.WKL <> P:1 var
R1701:1701 Coq.Logic.WKL <> l:5 var
R1732:1735 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1706:1717 Coq.Logic.WKL <> is_path_from:2 ind
R1728:1729 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1724:1727 Coq.Init.Datatypes <> true constr
R1730:1730 Coq.Logic.WKL <> l:5 var
R1721:1721 Coq.Logic.WKL <> n:6 var
R1719:1719 Coq.Logic.WKL <> P:1 var
R1736:1747 Coq.Logic.WKL <> is_path_from:2 ind
R1757:1757 Coq.Logic.WKL <> l:5 var
R1752:1752 Coq.Init.Datatypes <> S constr
R1754:1754 Coq.Logic.WKL <> n:6 var
R1749:1749 Coq.Logic.WKL <> P:1 var
binder 1772:1772 <> l:7
binder 1774:1774 <> n:8
R1783:1786 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1778:1779 Coq.Init.Logic <> ::type_scope:'~'_x not
R1780:1780 Coq.Logic.WKL <> P:1 var
R1782:1782 Coq.Logic.WKL <> l:7 var
R1814:1817 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1787:1798 Coq.Logic.WKL <> is_path_from:2 ind
R1810:1811 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1805:1809 Coq.Init.Datatypes <> false constr
R1812:1812 Coq.Logic.WKL <> l:7 var
R1802:1802 Coq.Logic.WKL <> n:8 var
R1800:1800 Coq.Logic.WKL <> P:1 var
R1818:1829 Coq.Logic.WKL <> is_path_from:2 ind
R1839:1839 Coq.Logic.WKL <> l:7 var
R1834:1834 Coq.Init.Datatypes <> S constr
R1836:1836 Coq.Logic.WKL <> n:8 var
R1831:1831 Coq.Logic.WKL <> P:1 var
prf 1955:1983 <> is_path_from_characterization
binder 1985:1985 <> P:9
binder 1987:1987 <> n:10
binder 1989:1989 <> l:11
R2013:2017 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1995:2006 Coq.Logic.WKL <> is_path_from ind
R2008:2008 Coq.Logic.WKL <> P:9 var
R2010:2010 Coq.Logic.WKL <> n:10 var
R2012:2012 Coq.Logic.WKL <> l:11 var
R2018:2024 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R2027:2028 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 2025:2026 <> l':12
R2042:2045 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R2038:2040 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2029:2034 Coq.Init.Datatypes <> length def
R2036:2037 Coq.Logic.WKL <> l':12 var
R2041:2041 Coq.Logic.WKL <> n:10 var
binder 2053:2054 <> n':13
R2062:2065 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2059:2060 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R2057:2058 Coq.Logic.WKL <> n':13 var
R2061:2061 Coq.Logic.WKL <> n:10 var
R2066:2067 Coq.Init.Logic <> ::type_scope:'~'_x not
R2068:2068 Coq.Logic.WKL <> P:9 var
R2089:2092 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R2071:2073 Coq.Lists.List <> rev def
R2076:2081 Coq.Lists.List <> firstn def
R2086:2087 Coq.Logic.WKL <> l':12 var
R2083:2084 Coq.Logic.WKL <> n':13 var
R2093:2093 Coq.Logic.WKL <> l:11 var
R2193:2194 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R2193:2194 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R2229:2238 Coq.Arith.PeanoNat Nat le_0_r thm
R2229:2238 Coq.Arith.PeanoNat Nat le_0_r thm
R2269:2272 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2265:2268 Coq.Init.Datatypes <> true constr
R2269:2272 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2265:2268 Coq.Init.Datatypes <> true constr
R2291:2294 Coq.Init.Peano <> eq_S def
R2291:2294 Coq.Init.Peano <> eq_S def
R2358:2366 Coq.Lists.List <> app_assoc thm
R2358:2366 Coq.Lists.List <> app_assoc thm
R2358:2366 Coq.Lists.List <> app_assoc thm
R2381:2386 Coq.Init.Peano <> le_S_n thm
R2381:2386 Coq.Init.Peano <> le_S_n thm
R2409:2412 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2404:2408 Coq.Init.Datatypes <> false constr
R2409:2412 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2404:2408 Coq.Init.Datatypes <> false constr
R2431:2434 Coq.Init.Peano <> eq_S def
R2431:2434 Coq.Init.Peano <> eq_S def
R2498:2506 Coq.Lists.List <> app_assoc thm
R2498:2506 Coq.Lists.List <> app_assoc thm
R2498:2506 Coq.Lists.List <> app_assoc thm
R2521:2526 Coq.Init.Peano <> le_S_n thm
R2521:2526 Coq.Init.Peano <> le_S_n thm
R2636:2645 Coq.Arith.PeanoNat Nat le_0_l thm
R2636:2645 Coq.Arith.PeanoNat Nat le_0_l thm
R2659:2667 Coq.Logic.WKL <> next_left constr
R2659:2667 Coq.Logic.WKL <> next_left constr
R2692:2701 Coq.Arith.PeanoNat Nat le_0_l thm
R2692:2701 Coq.Arith.PeanoNat Nat le_0_l thm
R2716:2721 Coq.Init.Datatypes <> length def
R2716:2721 Coq.Init.Datatypes <> length def
R2752:2757 Coq.Init.Peano <> le_n_S thm
R2752:2757 Coq.Init.Peano <> le_n_S thm
R2800:2808 Coq.Lists.List <> app_assoc thm
R2800:2808 Coq.Lists.List <> app_assoc thm
R2800:2808 Coq.Lists.List <> app_assoc thm
R2838:2847 Coq.Logic.WKL <> next_right constr
R2838:2847 Coq.Logic.WKL <> next_right constr
R2872:2881 Coq.Arith.PeanoNat Nat le_0_l thm
R2872:2881 Coq.Arith.PeanoNat Nat le_0_l thm
R2896:2901 Coq.Init.Datatypes <> length def
R2896:2901 Coq.Init.Datatypes <> length def
R2932:2937 Coq.Init.Peano <> le_n_S thm
R2932:2937 Coq.Init.Peano <> le_n_S thm
R2980:2988 Coq.Lists.List <> app_assoc thm
R2980:2988 Coq.Lists.List <> app_assoc thm
R2980:2988 Coq.Lists.List <> app_assoc thm
def 3141:3153 <> infinite_from
R3167:3170 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3158:3161 Coq.Init.Datatypes <> list ind
R3163:3166 Coq.Init.Datatypes <> bool ind
binder 3156:3156 <> P:14
binder 3177:3177 <> l:15
binder 3189:3189 <> n:16
R3192:3203 Coq.Logic.WKL <> is_path_from ind
R3205:3205 Coq.Logic.WKL <> P:14 var
R3207:3207 Coq.Logic.WKL <> n:16 var
R3209:3209 Coq.Logic.WKL <> l:15 var
def 3361:3377 <> has_infinite_path
R3391:3394 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3382:3385 Coq.Init.Datatypes <> list ind
R3387:3390 Coq.Init.Datatypes <> bool ind
binder 3380:3380 <> P:17
R3406:3413 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R3427:3429 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R3419:3422 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3416:3418 Coq.Init.Datatypes <> nat ind
binder 3414:3414 <> X:18
binder 3437:3437 <> l:19
R3450:3453 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3440:3445 Coq.Logic.WeakFan <> approx def
R3447:3447 Coq.Logic.WKL <> X:18 var
R3449:3449 Coq.Logic.WKL <> l:19 var
R3454:3455 Coq.Init.Logic <> ::type_scope:'~'_x not
R3456:3456 Coq.Logic.WKL <> P:17 var
R3458:3458 Coq.Logic.WKL <> l:19 var
ind 3588:3608 <> inductively_barred_at
constr 3664:3669 <> now_at
constr 3714:3725 <> propagate_at
R3622:3625 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3613:3616 Coq.Init.Datatypes <> list ind
R3618:3621 Coq.Init.Datatypes <> bool ind
binder 3611:3611 <> P:20
R3637:3640 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3634:3636 Coq.Init.Datatypes <> nat ind
R3650:3653 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3641:3644 Coq.Init.Datatypes <> list ind
R3646:3649 Coq.Init.Datatypes <> bool ind
binder 3671:3671 <> l:23
binder 3673:3673 <> n:24
R3680:3683 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3677:3677 Coq.Logic.WKL <> P:20 var
R3679:3679 Coq.Logic.WKL <> l:23 var
R3684:3704 Coq.Logic.WKL <> inductively_barred_at:21 ind
R3710:3710 Coq.Logic.WKL <> l:23 var
R3708:3708 Coq.Logic.WKL <> n:24 var
R3706:3706 Coq.Logic.WKL <> P:20 var
binder 3727:3727 <> l:25
binder 3729:3729 <> n:26
R3772:3779 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3737:3757 Coq.Logic.WKL <> inductively_barred_at:21 ind
R3768:3769 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3764:3767 Coq.Init.Datatypes <> true constr
R3770:3770 Coq.Logic.WKL <> l:25 var
R3761:3761 Coq.Logic.WKL <> n:26 var
R3759:3759 Coq.Logic.WKL <> P:20 var
R3816:3823 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3780:3800 Coq.Logic.WKL <> inductively_barred_at:21 ind
R3812:3813 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3807:3811 Coq.Init.Datatypes <> false constr
R3814:3814 Coq.Logic.WKL <> l:25 var
R3804:3804 Coq.Logic.WKL <> n:26 var
R3802:3802 Coq.Logic.WKL <> P:20 var
R3824:3844 Coq.Logic.WKL <> inductively_barred_at:21 ind
R3854:3854 Coq.Logic.WKL <> l:25 var
R3849:3849 Coq.Init.Datatypes <> S constr
R3851:3851 Coq.Logic.WKL <> n:26 var
R3846:3846 Coq.Logic.WKL <> P:20 var
def 4115:4115 <> Y
binder 4117:4117 <> P:27
R4122:4125 Coq.Init.Datatypes <> list ind
R4127:4130 Coq.Init.Datatypes <> bool ind
binder 4120:4120 <> l:28
R4144:4144 Coq.Logic.WKL <> l:28 var
R4155:4156 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R4161:4164 Coq.Init.Logic <> True ind
R4171:4172 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4189:4198 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4184:4184 Coq.Logic.WKL <> Y:29 def
R4188:4188 Coq.Logic.WKL <> l:28 var
R4186:4186 Coq.Logic.WKL <> P:27 var
R4261:4273 Coq.Logic.WKL <> infinite_from def
R4275:4275 Coq.Logic.WKL <> P:27 var
R4283:4284 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4278:4282 Coq.Init.Datatypes <> false constr
R4285:4285 Coq.Logic.WKL <> l:28 var
R4209:4215 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R4217:4218 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 4216:4216 <> n:31
R4219:4239 Coq.Logic.WKL <> inductively_barred_at ind
R4241:4241 Coq.Logic.WKL <> P:27 var
R4243:4243 Coq.Logic.WKL <> n:31 var
R4251:4252 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4246:4250 Coq.Init.Datatypes <> false constr
R4253:4253 Coq.Logic.WKL <> l:28 var
R4311:4321 Coq.Arith.Compare_dec <> <> lib
prf 4331:4351 <> is_path_from_restrict
binder 4362:4362 <> P:32
binder 4364:4364 <> n:33
binder 4366:4367 <> n':34
binder 4369:4369 <> l:35
R4379:4384 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4373:4376 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R4372:4372 Coq.Logic.WKL <> n:33 var
R4377:4378 Coq.Logic.WKL <> n':34 var
R4404:4407 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4385:4396 Coq.Logic.WKL <> is_path_from ind
R4398:4398 Coq.Logic.WKL <> P:32 var
R4400:4401 Coq.Logic.WKL <> n':34 var
R4403:4403 Coq.Logic.WKL <> l:35 var
R4408:4419 Coq.Logic.WKL <> is_path_from ind
R4421:4421 Coq.Logic.WKL <> P:32 var
R4423:4423 Coq.Logic.WKL <> n:33 var
R4425:4425 Coq.Logic.WKL <> l:35 var
R4499:4508 Coq.Arith.PeanoNat Nat le_0_r thm
R4499:4508 Coq.Arith.PeanoNat Nat le_0_r thm
R4530:4533 Coq.Logic.WKL <> here constr
R4530:4533 Coq.Logic.WKL <> here constr
R4572:4575 Coq.Logic.WKL <> here constr
R4572:4575 Coq.Logic.WKL <> here constr
R4600:4615 Coq.Arith.PeanoNat Nat succ_le_mono thm
R4600:4615 Coq.Arith.PeanoNat Nat succ_le_mono thm
R4635:4643 Coq.Logic.WKL <> next_left constr
R4635:4643 Coq.Logic.WKL <> next_left constr
R4676:4679 Coq.Logic.WKL <> here constr
R4676:4679 Coq.Logic.WKL <> here constr
R4704:4719 Coq.Arith.PeanoNat Nat succ_le_mono thm
R4704:4719 Coq.Arith.PeanoNat Nat succ_le_mono thm
R4739:4748 Coq.Logic.WKL <> next_right constr
R4739:4748 Coq.Logic.WKL <> next_right constr
prf 4769:4798 <> inductively_barred_at_monotone
binder 4809:4809 <> P:36
binder 4811:4811 <> l:37
binder 4813:4813 <> n:38
binder 4815:4816 <> n':39
R4826:4831 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4821:4824 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R4819:4820 Coq.Logic.WKL <> n':39 var
R4825:4825 Coq.Logic.WKL <> n:38 var
R4860:4863 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4832:4852 Coq.Logic.WKL <> inductively_barred_at ind
R4854:4854 Coq.Logic.WKL <> P:36 var
R4856:4857 Coq.Logic.WKL <> n':39 var
R4859:4859 Coq.Logic.WKL <> l:37 var
R4864:4884 Coq.Logic.WKL <> inductively_barred_at ind
R4886:4886 Coq.Logic.WKL <> P:36 var
R4888:4888 Coq.Logic.WKL <> n:38 var
R4890:4890 Coq.Logic.WKL <> l:37 var
R4967:4972 Coq.Logic.WKL <> now_at constr
R4967:4972 Coq.Logic.WKL <> now_at constr
R5002:5015 Coq.Arith.PeanoNat Nat nle_succ_0 thm
R5002:5015 Coq.Arith.PeanoNat Nat nle_succ_0 thm
R5050:5065 Coq.Arith.PeanoNat Nat succ_le_mono thm
R5050:5065 Coq.Arith.PeanoNat Nat succ_le_mono thm
R5083:5094 Coq.Logic.WKL <> propagate_at constr
R5083:5094 Coq.Logic.WKL <> propagate_at constr
def 5120:5130 <> demorgan_or
R5144:5147 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5135:5138 Coq.Init.Datatypes <> list ind
R5140:5143 Coq.Init.Datatypes <> bool ind
binder 5133:5133 <> P:40
binder 5154:5154 <> l:41
binder 5156:5157 <> l':42
R5177:5180 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5162:5164 Coq.Init.Logic <> ::type_scope:'~'_x not
R5176:5176 Coq.Init.Logic <> ::type_scope:'~'_x not
R5168:5171 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5165:5165 Coq.Logic.WKL <> P:40 var
R5167:5167 Coq.Logic.WKL <> l:41 var
R5172:5172 Coq.Logic.WKL <> P:40 var
R5174:5175 Coq.Logic.WKL <> l':42 var
R5186:5189 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R5181:5182 Coq.Init.Logic <> ::type_scope:'~'_x not
R5183:5183 Coq.Logic.WKL <> P:40 var
R5185:5185 Coq.Logic.WKL <> l:41 var
R5190:5191 Coq.Init.Logic <> ::type_scope:'~'_x not
R5192:5192 Coq.Logic.WKL <> P:40 var
R5194:5195 Coq.Logic.WKL <> l':42 var
def 5210:5239 <> demorgan_inductively_barred_at
binder 5241:5241 <> P:43
binder 5255:5255 <> n:44
binder 5257:5257 <> l:45
R5260:5270 Coq.Logic.WKL <> demorgan_or def
R5273:5293 Coq.Logic.WKL <> inductively_barred_at ind
R5295:5295 Coq.Logic.WKL <> P:43 var
R5297:5297 Coq.Logic.WKL <> n:44 var
R5305:5306 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5301:5304 Coq.Init.Datatypes <> true constr
R5307:5307 Coq.Logic.WKL <> l:45 var
R5316:5317 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5311:5315 Coq.Init.Datatypes <> false constr
R5318:5318 Coq.Logic.WKL <> l:45 var
prf 5329:5366 <> inductively_barred_at_imp_is_path_from
binder 5379:5379 <> P:46
R5414:5417 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5382:5411 Coq.Logic.WKL <> demorgan_inductively_barred_at def
R5413:5413 Coq.Logic.WKL <> P:46 var
binder 5425:5425 <> n:47
binder 5427:5427 <> l:48
R5461:5464 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5432:5433 Coq.Init.Logic <> ::type_scope:'~'_x not
R5434:5454 Coq.Logic.WKL <> inductively_barred_at ind
R5456:5456 Coq.Logic.WKL <> P:46 var
R5458:5458 Coq.Logic.WKL <> n:47 var
R5460:5460 Coq.Logic.WKL <> l:48 var
R5465:5476 Coq.Logic.WKL <> is_path_from ind
R5478:5478 Coq.Logic.WKL <> P:46 var
R5480:5480 Coq.Logic.WKL <> n:47 var
R5482:5482 Coq.Logic.WKL <> l:48 var
R5545:5548 Coq.Logic.WKL <> here constr
R5545:5548 Coq.Logic.WKL <> here constr
R5577:5582 Coq.Logic.WKL <> now_at constr
R5577:5582 Coq.Logic.WKL <> now_at constr
R5604:5606 Coq.Init.Logic <> ::type_scope:'~'_x not
R5682:5682 Coq.Init.Logic <> ::type_scope:'~'_x not
R5642:5645 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5607:5627 Coq.Logic.WKL <> inductively_barred_at ind
R5638:5639 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5634:5637 Coq.Init.Datatypes <> true constr
R5646:5666 Coq.Logic.WKL <> inductively_barred_at ind
R5678:5679 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5673:5677 Coq.Init.Datatypes <> false constr
R5604:5606 Coq.Init.Logic <> ::type_scope:'~'_x not
R5682:5682 Coq.Init.Logic <> ::type_scope:'~'_x not
R5642:5645 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5607:5627 Coq.Logic.WKL <> inductively_barred_at ind
R5638:5639 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5634:5637 Coq.Init.Datatypes <> true constr
R5646:5666 Coq.Logic.WKL <> inductively_barred_at ind
R5678:5679 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5673:5677 Coq.Init.Datatypes <> false constr
R5744:5745 Coq.Init.Logic <> ::type_scope:'~'_x not
R5744:5745 Coq.Init.Logic <> ::type_scope:'~'_x not
R5858:5869 Coq.Logic.WKL <> is_path_from ind
R5858:5869 Coq.Logic.WKL <> is_path_from ind
R5858:5869 Coq.Logic.WKL <> is_path_from ind
prf 5884:5921 <> is_path_from_imp_inductively_barred_at
binder 5932:5932 <> P:49
binder 5934:5934 <> n:50
binder 5936:5936 <> l:51
R5960:5963 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5942:5953 Coq.Logic.WKL <> is_path_from ind
R5955:5955 Coq.Logic.WKL <> P:49 var
R5957:5957 Coq.Logic.WKL <> n:50 var
R5959:5959 Coq.Logic.WKL <> l:51 var
R5991:5994 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5964:5984 Coq.Logic.WKL <> inductively_barred_at ind
R5986:5986 Coq.Logic.WKL <> P:49 var
R5988:5988 Coq.Logic.WKL <> n:50 var
R5990:5990 Coq.Logic.WKL <> l:51 var
R5995:5999 Coq.Init.Logic <> False ind
R6180:6181 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6176:6179 Coq.Init.Datatypes <> true constr
R6180:6181 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6176:6179 Coq.Init.Datatypes <> true constr
R6255:6256 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6250:6254 Coq.Init.Datatypes <> false constr
R6255:6256 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6250:6254 Coq.Init.Datatypes <> false constr
prf 6279:6292 <> find_left_path
binder 6303:6303 <> P:52
binder 6305:6305 <> l:53
binder 6307:6307 <> n:54
R6334:6337 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6312:6323 Coq.Logic.WKL <> is_path_from ind
R6325:6325 Coq.Logic.WKL <> P:52 var
R6328:6328 Coq.Init.Datatypes <> S constr
R6330:6330 Coq.Logic.WKL <> n:54 var
R6333:6333 Coq.Logic.WKL <> l:53 var
R6376:6379 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6338:6358 Coq.Logic.WKL <> inductively_barred_at ind
R6360:6360 Coq.Logic.WKL <> P:52 var
R6362:6362 Coq.Logic.WKL <> n:54 var
R6370:6373 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6365:6369 Coq.Init.Datatypes <> false constr
R6374:6374 Coq.Logic.WKL <> l:53 var
R6380:6391 Coq.Logic.WKL <> is_path_from ind
R6393:6393 Coq.Logic.WKL <> P:52 var
R6395:6395 Coq.Logic.WKL <> n:54 var
R6402:6405 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6398:6401 Coq.Init.Datatypes <> true constr
R6406:6406 Coq.Logic.WKL <> l:53 var
R6476:6513 Coq.Logic.WKL <> is_path_from_imp_inductively_barred_at thm
R6476:6513 Coq.Logic.WKL <> is_path_from_imp_inductively_barred_at thm
prf 6528:6535 <> Y_unique
binder 6546:6546 <> P:55
R6581:6586 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6549:6578 Coq.Logic.WKL <> demorgan_inductively_barred_at def
R6580:6580 Coq.Logic.WKL <> P:55 var
binder 6594:6595 <> l1:56
binder 6597:6598 <> l2:57
R6622:6625 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6610:6612 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6601:6606 Coq.Init.Datatypes <> length def
R6608:6609 Coq.Logic.WKL <> l1:56 var
R6613:6618 Coq.Init.Datatypes <> length def
R6620:6621 Coq.Logic.WKL <> l2:57 var
R6632:6635 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6626:6626 Coq.Logic.WKL <> Y def
R6628:6628 Coq.Logic.WKL <> P:55 var
R6630:6631 Coq.Logic.WKL <> l1:56 var
R6642:6645 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6636:6636 Coq.Logic.WKL <> Y def
R6638:6638 Coq.Logic.WKL <> P:55 var
R6640:6641 Coq.Logic.WKL <> l2:57 var
R6648:6650 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6646:6647 Coq.Logic.WKL <> l1:56 var
R6651:6652 Coq.Logic.WKL <> l2:57 var
R6932:6969 Coq.Logic.WKL <> is_path_from_imp_inductively_barred_at thm
R6932:6969 Coq.Logic.WKL <> is_path_from_imp_inductively_barred_at thm
R7034:7071 Coq.Logic.WKL <> is_path_from_imp_inductively_barred_at thm
R7034:7071 Coq.Logic.WKL <> is_path_from_imp_inductively_barred_at thm
def 7163:7163 <> X
binder 7165:7165 <> P:58
binder 7167:7167 <> n:59
R7172:7178 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7180:7181 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 7179:7179 <> l:60
R7194:7197 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7190:7192 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7182:7187 Coq.Init.Datatypes <> length def
R7189:7189 Coq.Logic.WKL <> l:60 var
R7193:7193 Coq.Logic.WKL <> n:59 var
R7198:7198 Coq.Logic.WKL <> Y def
R7200:7200 Coq.Logic.WKL <> P:58 var
R7207:7208 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7203:7206 Coq.Init.Datatypes <> true constr
R7209:7209 Coq.Logic.WKL <> l:60 var
prf 7220:7227 <> Y_approx
binder 7238:7238 <> P:61
R7273:7278 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7241:7270 Coq.Logic.WKL <> demorgan_inductively_barred_at def
R7272:7272 Coq.Logic.WKL <> P:61 var
binder 7286:7286 <> l:62
R7303:7306 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7289:7294 Coq.Logic.WeakFan <> approx def
R7297:7297 Coq.Logic.WKL <> X def
R7299:7299 Coq.Logic.WKL <> P:61 var
R7302:7302 Coq.Logic.WKL <> l:62 var
R7307:7307 Coq.Logic.WKL <> Y def
R7309:7309 Coq.Logic.WKL <> P:61 var
R7311:7311 Coq.Logic.WKL <> l:62 var
R7409:7409 Coq.Logic.WKL <> X def
R7495:7502 Coq.Logic.WKL <> Y_unique thm
R7495:7502 Coq.Logic.WKL <> Y_unique thm
R7495:7502 Coq.Logic.WKL <> Y_unique thm
R7495:7502 Coq.Logic.WKL <> Y_unique thm
R7495:7502 Coq.Logic.WKL <> Y_unique thm
R7553:7590 Coq.Logic.WKL <> inductively_barred_at_imp_is_path_from thm
R7553:7590 Coq.Logic.WKL <> inductively_barred_at_imp_is_path_from thm
prf 7658:7675 <> PreWeakKonigsLemma
binder 7686:7686 <> P:63
R7723:7726 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7691:7720 Coq.Logic.WKL <> demorgan_inductively_barred_at def
R7722:7722 Coq.Logic.WKL <> P:63 var
R7745:7748 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7727:7739 Coq.Logic.WKL <> infinite_from def
R7741:7741 Coq.Logic.WKL <> P:63 var
R7743:7744 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R7749:7765 Coq.Logic.WKL <> has_infinite_path def
R7767:7767 Coq.Logic.WKL <> P:63 var
R7809:7809 Coq.Logic.WKL <> X def
R7809:7809 Coq.Logic.WKL <> X def
R7836:7848 Coq.Logic.WKL <> infinite_from def
R7836:7848 Coq.Logic.WKL <> infinite_from def
R7983:7990 Coq.Logic.WKL <> Y_approx thm
R7983:7990 Coq.Logic.WKL <> Y_approx thm
R8088:8095 Coq.Logic.WKL <> Y_unique thm
R8088:8095 Coq.Logic.WKL <> Y_unique thm
R8088:8095 Coq.Logic.WKL <> Y_unique thm
R8149:8157 Coq.Arith.Compare_dec <> le_lt_dec def
R8149:8157 Coq.Arith.Compare_dec <> le_lt_dec def
R8205:8205 Coq.Init.Datatypes <> S constr
R8205:8205 Coq.Init.Datatypes <> S constr
R8227:8247 Coq.Logic.WKL <> is_path_from_restrict thm
R8227:8247 Coq.Logic.WKL <> is_path_from_restrict thm
R8287:8300 Coq.Logic.WKL <> find_left_path thm
R8287:8300 Coq.Logic.WKL <> find_left_path thm
R8338:8338 Coq.Init.Datatypes <> S constr
R8338:8338 Coq.Init.Datatypes <> S constr
R8359:8388 Coq.Logic.WKL <> inductively_barred_at_monotone thm
R8419:8432 Coq.Arith.PeanoNat Nat lt_le_incl thm
R8359:8388 Coq.Logic.WKL <> inductively_barred_at_monotone thm
R8419:8432 Coq.Arith.PeanoNat Nat lt_le_incl thm
R8455:8468 Coq.Logic.WKL <> find_left_path thm
R8455:8468 Coq.Logic.WKL <> find_left_path thm
R8492:8529 Coq.Logic.WKL <> inductively_barred_at_imp_is_path_from thm
R8492:8529 Coq.Logic.WKL <> inductively_barred_at_imp_is_path_from thm
prf 8601:8631 <> inductively_barred_at_decidable
binder 8644:8644 <> P:64
R8647:8647 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8670:8674 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 8655:8655 <> l:65
R8661:8664 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R8658:8658 Coq.Logic.WKL <> P:64 var
R8660:8660 Coq.Logic.WKL <> l:65 var
R8665:8666 Coq.Init.Logic <> ::type_scope:'~'_x not
R8667:8667 Coq.Logic.WKL <> P:64 var
R8669:8669 Coq.Logic.WKL <> l:65 var
binder 8682:8682 <> n:66
binder 8684:8684 <> l:67
R8714:8717 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R8687:8707 Coq.Logic.WKL <> inductively_barred_at ind
R8709:8709 Coq.Logic.WKL <> P:64 var
R8711:8711 Coq.Logic.WKL <> n:66 var
R8713:8713 Coq.Logic.WKL <> l:67 var
R8718:8719 Coq.Init.Logic <> ::type_scope:'~'_x not
R8720:8740 Coq.Logic.WKL <> inductively_barred_at ind
R8742:8742 Coq.Logic.WKL <> P:64 var
R8744:8744 Coq.Logic.WKL <> n:66 var
R8746:8746 Coq.Logic.WKL <> l:67 var
R8825:8830 Coq.Logic.WKL <> now_at constr
R8825:8830 Coq.Logic.WKL <> now_at constr
R8901:8906 Coq.Logic.WKL <> now_at constr
R8901:8906 Coq.Logic.WKL <> now_at constr
R8935:8936 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8931:8934 Coq.Init.Datatypes <> true constr
R8935:8936 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8931:8934 Coq.Init.Datatypes <> true constr
R8968:8969 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8963:8967 Coq.Init.Datatypes <> false constr
R8968:8969 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8963:8967 Coq.Init.Datatypes <> false constr
R8995:9006 Coq.Logic.WKL <> propagate_at constr
R8995:9006 Coq.Logic.WKL <> propagate_at constr
prf 9115:9158 <> inductively_barred_at_is_path_from_decidable
binder 9171:9171 <> P:68
R9174:9174 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9197:9201 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 9182:9182 <> l:69
R9188:9191 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R9185:9185 Coq.Logic.WKL <> P:68 var
R9187:9187 Coq.Logic.WKL <> l:69 var
R9192:9193 Coq.Init.Logic <> ::type_scope:'~'_x not
R9194:9194 Coq.Logic.WKL <> P:68 var
R9196:9196 Coq.Logic.WKL <> l:69 var
R9202:9231 Coq.Logic.WKL <> demorgan_inductively_barred_at def
R9233:9233 Coq.Logic.WKL <> P:68 var
R9274:9304 Coq.Logic.WKL <> inductively_barred_at_decidable thm
R9320:9321 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9316:9319 Coq.Init.Datatypes <> true constr
R9274:9304 Coq.Logic.WKL <> inductively_barred_at_decidable thm
R9320:9321 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9316:9319 Coq.Init.Datatypes <> true constr
R9339:9369 Coq.Logic.WKL <> inductively_barred_at_decidable thm
R9386:9387 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9381:9385 Coq.Init.Datatypes <> false constr
R9339:9369 Coq.Logic.WKL <> inductively_barred_at_decidable thm
R9386:9387 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9381:9385 Coq.Init.Datatypes <> false constr
prf 9460:9474 <> WeakKonigsLemma
binder 9485:9485 <> P:70
R9488:9488 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9511:9517 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 9496:9496 <> l:71
R9502:9505 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R9499:9499 Coq.Logic.WKL <> P:70 var
R9501:9501 Coq.Logic.WKL <> l:71 var
R9506:9507 Coq.Init.Logic <> ::type_scope:'~'_x not
R9508:9508 Coq.Logic.WKL <> P:70 var
R9510:9510 Coq.Logic.WKL <> l:71 var
R9536:9539 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9518:9530 Coq.Logic.WKL <> infinite_from def
R9532:9532 Coq.Logic.WKL <> P:70 var
R9534:9535 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9540:9556 Coq.Logic.WKL <> has_infinite_path def
R9558:9558 Coq.Logic.WKL <> P:70 var
R9594:9637 Coq.Logic.WKL <> inductively_barred_at_is_path_from_decidable thm
R9594:9637 Coq.Logic.WKL <> inductively_barred_at_is_path_from_decidable thm
R9654:9671 Coq.Logic.WKL <> PreWeakKonigsLemma thm
R9654:9671 Coq.Logic.WKL <> PreWeakKonigsLemma thm
R9785:9786 Coq.Arith.Le <> <> lib
R9788:9789 Coq.Arith.Lt <> <> lib
