DIGEST 9dbb5f5d7c5d1d5a16f5ffca4ff0b0c2
FCoq.Logic.FinFun
R841:844 Coq.Lists.List <> <> lib
R846:853 Coq.Arith.PeanoNat <> <> lib
R855:865 Coq.Arith.Compare_dec <> <> lib
R867:871 Coq.Arith.EqNat <> <> lib
R873:881 Coq.Logic.Decidable <> <> lib
R883:889 Coq.Lists.ListDec <> <> lib
R900:902 Coq.Vectors.Fin <> <> lib
def 969:977 <> Injective
binder 980:980 <> A:1
binder 982:982 <> B:2
R991:992 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R990:990 Coq.Logic.FinFun <> A:1 var
R993:993 Coq.Logic.FinFun <> B:2 var
binder 986:986 <> f:3
binder 1007:1007 <> x:4
binder 1009:1009 <> y:5
R1021:1024 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1015:1017 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1012:1012 Coq.Logic.FinFun <> f:3 var
R1014:1014 Coq.Logic.FinFun <> x:4 var
R1018:1018 Coq.Logic.FinFun <> f:3 var
R1020:1020 Coq.Logic.FinFun <> y:5 var
R1026:1028 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1025:1025 Coq.Logic.FinFun <> x:4 var
R1029:1029 Coq.Logic.FinFun <> y:5 var
def 1044:1053 <> Surjective
binder 1056:1056 <> A:6
binder 1058:1058 <> B:7
R1067:1068 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1066:1066 Coq.Logic.FinFun <> A:6 var
R1069:1069 Coq.Logic.FinFun <> B:7 var
binder 1062:1062 <> f:8
binder 1083:1083 <> y:9
R1086:1092 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R1094:1095 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 1093:1093 <> x:10
R1099:1101 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1096:1096 Coq.Logic.FinFun <> f:8 var
R1098:1098 Coq.Logic.FinFun <> x:10 var
R1102:1102 Coq.Logic.FinFun <> y:9 var
def 1117:1125 <> Bijective
binder 1128:1128 <> A:11
binder 1130:1130 <> B:12
R1139:1140 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1138:1138 Coq.Logic.FinFun <> A:11 var
R1141:1141 Coq.Logic.FinFun <> B:12 var
binder 1134:1134 <> f:13
R1148:1154 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R1161:1162 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R1158:1159 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1157:1157 Coq.Logic.FinFun <> B:12 var
R1160:1160 Coq.Logic.FinFun <> A:11 var
binder 1155:1155 <> g:14
R1163:1163 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R1185:1190 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R1212:1212 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
binder 1171:1171 <> x:15
R1181:1183 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1174:1174 Coq.Logic.FinFun <> g:14 var
R1177:1177 Coq.Logic.FinFun <> f:13 var
R1179:1179 Coq.Logic.FinFun <> x:15 var
R1184:1184 Coq.Logic.FinFun <> x:15 var
binder 1198:1198 <> y:16
R1208:1210 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1201:1201 Coq.Logic.FinFun <> f:13 var
R1204:1204 Coq.Logic.FinFun <> g:14 var
R1206:1206 Coq.Logic.FinFun <> y:16 var
R1211:1211 Coq.Logic.FinFun <> y:16 var
def 1294:1297 <> Full
binder 1300:1300 <> A:17
R1311:1314 Coq.Init.Datatypes <> list ind
R1316:1316 Coq.Logic.FinFun <> A:17 var
binder 1309:1309 <> l:18
R1331:1331 Coq.Logic.FinFun <> A:17 var
binder 1329:1329 <> a:19
R1334:1335 Coq.Lists.List <> In def
R1339:1339 Coq.Logic.FinFun <> l:18 var
R1337:1337 Coq.Logic.FinFun <> a:19 var
def 1353:1358 <> Finite
binder 1361:1361 <> A:20
R1372:1379 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R1388:1390 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R1382:1385 Coq.Init.Datatypes <> list ind
R1387:1387 Coq.Logic.FinFun <> A:20 var
binder 1380:1380 <> l:21
R1391:1394 Coq.Logic.FinFun <> Full def
R1396:1396 Coq.Logic.FinFun <> l:21 var
def 1623:1629 <> Listing
binder 1632:1632 <> A:22
R1643:1646 Coq.Init.Datatypes <> list ind
R1648:1648 Coq.Logic.FinFun <> A:22 var
binder 1641:1641 <> l:23
R1661:1664 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R1654:1658 Coq.Lists.List <> NoDup ind
R1660:1660 Coq.Logic.FinFun <> l:23 var
R1665:1668 Coq.Logic.FinFun <> Full def
R1670:1670 Coq.Logic.FinFun <> l:23 var
def 1684:1690 <> Finite'
binder 1693:1693 <> A:24
R1704:1711 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R1720:1722 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R1714:1717 Coq.Init.Datatypes <> list ind
R1719:1719 Coq.Logic.FinFun <> A:24 var
binder 1712:1712 <> l:25
R1723:1729 Coq.Logic.FinFun <> Listing def
R1731:1731 Coq.Logic.FinFun <> l:25 var
prf 1741:1750 <> Finite_alt
binder 1752:1752 <> A:26
R1757:1768 Coq.Lists.ListDec <> decidable_eq def
R1770:1770 Coq.Logic.FinFun <> A:26 var
binder 1755:1755 <> d:27
R1783:1787 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1775:1780 Coq.Logic.FinFun <> Finite def
R1782:1782 Coq.Logic.FinFun <> A:26 var
R1788:1794 Coq.Logic.FinFun <> Finite' def
R1796:1796 Coq.Logic.FinFun <> A:26 var
R1841:1848 Coq.Lists.ListDec <> uniquify thm
R1841:1848 Coq.Lists.ListDec <> uniquify thm
prf 2026:2044 <> Injective_map_NoDup
binder 2046:2046 <> A:28
binder 2048:2048 <> B:29
R2054:2055 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2053:2053 Coq.Logic.FinFun <> A:28 var
R2056:2056 Coq.Logic.FinFun <> B:29 var
binder 2051:2051 <> f:30
R2062:2065 Coq.Init.Datatypes <> list ind
R2067:2067 Coq.Logic.FinFun <> A:28 var
binder 2060:2060 <> l:31
R2084:2087 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2073:2081 Coq.Logic.FinFun <> Injective def
R2083:2083 Coq.Logic.FinFun <> f:30 var
R2095:2098 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2088:2092 Coq.Lists.List <> NoDup ind
R2094:2094 Coq.Logic.FinFun <> l:31 var
R2099:2103 Coq.Lists.List <> NoDup ind
R2106:2108 Coq.Lists.List <> map def
R2112:2112 Coq.Logic.FinFun <> l:31 var
R2110:2110 Coq.Logic.FinFun <> f:30 var
R2203:2212 Coq.Lists.List <> in_map_iff thm
R2203:2212 Coq.Lists.List <> in_map_iff thm
R2203:2212 Coq.Lists.List <> in_map_iff thm
prf 2273:2292 <> Injective_list_carac
binder 2294:2294 <> A:32
binder 2296:2296 <> B:33
R2301:2312 Coq.Lists.ListDec <> decidable_eq def
R2314:2314 Coq.Logic.FinFun <> A:32 var
binder 2299:2299 <> d:34
R2320:2321 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2319:2319 Coq.Logic.FinFun <> A:32 var
R2322:2322 Coq.Logic.FinFun <> B:33 var
binder 2317:2317 <> f:35
R2340:2345 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R2382:2382 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R2329:2337 Coq.Logic.FinFun <> Injective def
R2339:2339 Coq.Logic.FinFun <> f:35 var
binder 2353:2353 <> l:36
R2363:2366 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2356:2360 Coq.Lists.List <> NoDup ind
R2362:2362 Coq.Logic.FinFun <> l:36 var
R2367:2371 Coq.Lists.List <> NoDup ind
R2374:2376 Coq.Lists.List <> map def
R2380:2380 Coq.Logic.FinFun <> l:36 var
R2378:2378 Coq.Logic.FinFun <> f:35 var
R2421:2439 Coq.Logic.FinFun <> Injective_map_NoDup thm
R2421:2439 Coq.Logic.FinFun <> Injective_map_NoDup thm
R2506:2510 Coq.Lists.List <> NoDup ind
R2514:2515 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2517:2518 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2519:2521 Coq.Init.Datatypes <> nil constr
R2506:2510 Coq.Lists.List <> NoDup ind
R2514:2515 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2517:2518 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2519:2521 Coq.Init.Datatypes <> nil constr
prf 2679:2693 <> Injective_carac
binder 2695:2695 <> A:37
binder 2697:2697 <> B:38
R2702:2705 Coq.Init.Datatypes <> list ind
R2707:2707 Coq.Logic.FinFun <> A:37 var
binder 2700:2700 <> l:39
R2721:2727 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2712:2718 Coq.Logic.FinFun <> Listing def
R2720:2720 Coq.Logic.FinFun <> l:39 var
R2739:2740 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2738:2738 Coq.Logic.FinFun <> A:37 var
R2741:2741 Coq.Logic.FinFun <> B:38 var
binder 2736:2736 <> f:40
R2756:2760 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R2745:2753 Coq.Logic.FinFun <> Injective def
R2755:2755 Coq.Logic.FinFun <> f:40 var
R2761:2765 Coq.Lists.List <> NoDup ind
R2768:2770 Coq.Lists.List <> map def
R2774:2774 Coq.Logic.FinFun <> l:39 var
R2772:2772 Coq.Logic.FinFun <> f:40 var
R2825:2843 Coq.Logic.FinFun <> Injective_map_NoDup thm
R2825:2843 Coq.Logic.FinFun <> Injective_map_NoDup thm
R2898:2899 Coq.Lists.List <> In def
R2898:2899 Coq.Lists.List <> In def
R2933:2934 Coq.Lists.List <> In def
R2933:2934 Coq.Lists.List <> In def
R2962:2973 Coq.Lists.List <> In_nth_error thm
R2962:2973 Coq.Lists.List <> In_nth_error thm
R3011:3022 Coq.Lists.List <> In_nth_error thm
R3011:3022 Coq.Lists.List <> In_nth_error thm
R3068:3080 Coq.Lists.List <> map_nth_error thm
R3068:3080 Coq.Lists.List <> map_nth_error thm
R3109:3121 Coq.Lists.List <> map_nth_error thm
R3109:3121 Coq.Lists.List <> map_nth_error thm
R3145:3147 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3145:3147 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3165:3179 Coq.Lists.List <> NoDup_nth_error thm
R3165:3179 Coq.Lists.List <> NoDup_nth_error thm
R3165:3179 Coq.Lists.List <> NoDup_nth_error thm
R3214:3227 Coq.Lists.List <> nth_error_Some thm
R3214:3227 Coq.Lists.List <> nth_error_Some thm
R3214:3227 Coq.Lists.List <> nth_error_Some thm
prf 3391:3411 <> Surjective_list_carac
binder 3413:3413 <> A:41
binder 3415:3415 <> B:42
R3421:3422 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3420:3420 Coq.Logic.FinFun <> A:41 var
R3423:3423 Coq.Logic.FinFun <> B:42 var
binder 3418:3418 <> f:43
R3441:3446 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3487:3487 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3429:3438 Coq.Logic.FinFun <> Surjective def
R3440:3440 Coq.Logic.FinFun <> f:43 var
binder 3454:3455 <> lB:44
R3458:3464 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R3467:3468 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 3465:3466 <> lA:45
R3469:3472 Coq.Lists.List <> incl def
R3478:3480 Coq.Lists.List <> map def
R3484:3485 Coq.Logic.FinFun <> lA:45 var
R3482:3482 Coq.Logic.FinFun <> f:43 var
R3474:3475 Coq.Logic.FinFun <> lB:44 var
R3566:3568 Coq.Init.Datatypes <> nil constr
R3566:3568 Coq.Init.Datatypes <> nil constr
R3645:3646 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3645:3646 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3741:3742 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3743:3745 Coq.Init.Datatypes <> nil constr
R3741:3742 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3743:3745 Coq.Init.Datatypes <> nil constr
R3777:3778 Coq.Lists.List <> In def
R3783:3785 Coq.Lists.List <> map def
R3777:3778 Coq.Lists.List <> In def
R3783:3785 Coq.Lists.List <> map def
R3834:3843 Coq.Lists.List <> in_map_iff thm
R3834:3843 Coq.Lists.List <> in_map_iff thm
R3834:3843 Coq.Lists.List <> in_map_iff thm
prf 3909:3924 <> Surjective_carac
binder 3926:3926 <> A:46
binder 3928:3928 <> B:47
R3940:3943 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3932:3937 Coq.Logic.FinFun <> Finite def
R3939:3939 Coq.Logic.FinFun <> B:47 var
R3958:3963 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3944:3955 Coq.Lists.ListDec <> decidable_eq def
R3957:3957 Coq.Logic.FinFun <> B:47 var
R3974:3975 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3973:3973 Coq.Logic.FinFun <> A:46 var
R3976:3976 Coq.Logic.FinFun <> B:47 var
binder 3971:3971 <> f:48
R3991:3996 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R4026:4026 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3979:3988 Coq.Logic.FinFun <> Surjective def
R3990:3990 Coq.Logic.FinFun <> f:48 var
R3997:4003 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R4006:4007 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 4004:4005 <> lA:49
R4008:4014 Coq.Logic.FinFun <> Listing def
R4017:4019 Coq.Lists.List <> map def
R4023:4024 Coq.Logic.FinFun <> lA:49 var
R4021:4021 Coq.Logic.FinFun <> f:48 var
R4073:4093 Coq.Logic.FinFun <> Surjective_list_carac thm
R4073:4093 Coq.Logic.FinFun <> Surjective_list_carac thm
R4073:4093 Coq.Logic.FinFun <> Surjective_list_carac thm
R4152:4163 Coq.Lists.ListDec <> uniquify_map thm
R4152:4163 Coq.Lists.ListDec <> uniquify_map thm
R4312:4321 Coq.Lists.List <> in_map_iff thm
R4312:4321 Coq.Lists.List <> in_map_iff thm
R4312:4321 Coq.Lists.List <> in_map_iff thm
prf 4395:4419 <> Endo_Injective_Surjective
binder 4431:4431 <> A:50
R4442:4445 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4434:4439 Coq.Logic.FinFun <> Finite def
R4441:4441 Coq.Logic.FinFun <> A:50 var
R4460:4465 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4446:4457 Coq.Lists.ListDec <> decidable_eq def
R4459:4459 Coq.Logic.FinFun <> A:50 var
R4476:4477 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4475:4475 Coq.Logic.FinFun <> A:50 var
R4478:4478 Coq.Logic.FinFun <> A:50 var
binder 4473:4473 <> f:51
R4492:4496 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R4481:4489 Coq.Logic.FinFun <> Injective def
R4491:4491 Coq.Logic.FinFun <> f:51 var
R4497:4506 Coq.Logic.FinFun <> Surjective def
R4508:4508 Coq.Logic.FinFun <> f:51 var
R4544:4559 Coq.Logic.FinFun <> Surjective_carac thm
R4544:4559 Coq.Logic.FinFun <> Surjective_carac thm
R4544:4559 Coq.Logic.FinFun <> Surjective_carac thm
R4584:4593 Coq.Logic.FinFun <> Finite_alt thm
R4584:4593 Coq.Logic.FinFun <> Finite_alt thm
R4637:4651 Coq.Logic.FinFun <> Injective_carac thm
R4637:4651 Coq.Logic.FinFun <> Injective_carac thm
R4637:4651 Coq.Logic.FinFun <> Injective_carac thm
R4733:4736 Coq.Lists.List <> incl def
R4741:4743 Coq.Lists.List <> map def
R4733:4736 Coq.Lists.List <> incl def
R4741:4743 Coq.Lists.List <> map def
R4763:4779 Coq.Lists.List <> NoDup_length_incl thm
R4763:4779 Coq.Lists.List <> NoDup_length_incl thm
R4810:4819 Coq.Lists.List <> map_length thm
R4810:4819 Coq.Lists.List <> map_length thm
R4810:4819 Coq.Lists.List <> map_length thm
R4920:4924 Coq.Lists.List <> NoDup ind
R4920:4924 Coq.Lists.List <> NoDup ind
R4939:4951 Coq.Lists.List <> NoDup_map_inv thm
R4939:4951 Coq.Lists.List <> NoDup_map_inv thm
R4977:4980 Coq.Lists.List <> incl def
R4983:4985 Coq.Lists.List <> map def
R4977:4980 Coq.Lists.List <> incl def
R4983:4985 Coq.Lists.List <> map def
R5007:5023 Coq.Lists.List <> NoDup_length_incl thm
R5007:5023 Coq.Lists.List <> NoDup_length_incl thm
R5054:5063 Coq.Lists.List <> map_length thm
R5054:5063 Coq.Lists.List <> map_length thm
R5054:5063 Coq.Lists.List <> map_length thm
R5112:5118 Coq.Logic.FinFun <> Listing def
R5112:5118 Coq.Logic.FinFun <> Listing def
R5183:5197 Coq.Logic.FinFun <> Injective_carac thm
R5183:5197 Coq.Logic.FinFun <> Injective_carac thm
def 5356:5360 <> EqDec
binder 5363:5363 <> A:52
R5385:5385 Coq.Logic.FinFun <> A:52 var
binder 5381:5381 <> x:53
binder 5383:5383 <> y:54
R5388:5388 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5392:5394 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5399:5399 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5390:5390 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5389:5389 Coq.Logic.FinFun <> x:53 var
R5391:5391 Coq.Logic.FinFun <> y:54 var
R5396:5397 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R5395:5395 Coq.Logic.FinFun <> x:53 var
R5398:5398 Coq.Logic.FinFun <> y:54 var
prf 5626:5644 <> Finite_Empty_or_not
binder 5646:5646 <> A:55
R5660:5663 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5652:5657 Coq.Logic.FinFun <> Finite def
R5659:5659 Coq.Logic.FinFun <> A:55 var
R5664:5664 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R5673:5677 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R5666:5667 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5665:5665 Coq.Logic.FinFun <> A:55 var
R5668:5672 Coq.Init.Logic <> False ind
R5678:5684 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5688:5688 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5687:5687 Coq.Logic.FinFun <> A:55 var
binder 5685:5685 <> a:56
R5689:5692 Coq.Init.Logic <> True ind
prf 5784:5801 <> Surjective_inverse
binder 5814:5814 <> A:57
binder 5816:5816 <> B:58
R5827:5830 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5819:5824 Coq.Logic.FinFun <> Finite def
R5826:5826 Coq.Logic.FinFun <> A:57 var
R5838:5844 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5831:5835 Coq.Logic.FinFun <> EqDec def
R5837:5837 Coq.Logic.FinFun <> B:58 var
R5855:5856 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5854:5854 Coq.Logic.FinFun <> A:57 var
R5857:5857 Coq.Logic.FinFun <> B:58 var
binder 5852:5852 <> f:59
R5872:5879 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5860:5869 Coq.Logic.FinFun <> Surjective def
R5871:5871 Coq.Logic.FinFun <> f:59 var
R5880:5886 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5893:5894 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5890:5891 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5889:5889 Coq.Logic.FinFun <> B:58 var
R5892:5892 Coq.Logic.FinFun <> A:57 var
binder 5887:5887 <> g:60
binder 5902:5902 <> x:61
R5912:5914 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5905:5905 Coq.Logic.FinFun <> f:59 var
R5908:5908 Coq.Logic.FinFun <> g:60 var
R5910:5910 Coq.Logic.FinFun <> x:61 var
R5915:5915 Coq.Logic.FinFun <> x:61 var
R5958:5976 Coq.Logic.FinFun <> Finite_Empty_or_not thm
R5958:5976 Coq.Logic.FinFun <> Finite_Empty_or_not thm
R6068:6071 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6072:6076 Coq.Init.Logic <> False ind
R6068:6071 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6072:6076 Coq.Init.Logic <> False ind
binder 6130:6130 <> y:62
R6135:6144 Coq.Init.Logic <> False_rect scheme
R6153:6153 Coq.Logic.FinFun <> y:62 var
binder 6130:6130 <> y:63
R6135:6144 Coq.Init.Logic <> False_rect scheme
R6153:6153 Coq.Logic.FinFun <> y:63 var
binder 6284:6284 <> x:64
binder 6286:6286 <> k:65
R6299:6299 Coq.Logic.FinFun <> k:65 var
R6302:6302 Coq.Logic.FinFun <> x:64 var
R6319:6323 Coq.Init.Datatypes <> false constr
R6309:6312 Coq.Init.Datatypes <> true constr
binder 6284:6284 <> x:66
binder 6286:6286 <> k:67
R6299:6299 Coq.Logic.FinFun <> k:67 var
R6302:6302 Coq.Logic.FinFun <> x:66 var
R6319:6323 Coq.Init.Datatypes <> false constr
R6309:6312 Coq.Init.Datatypes <> true constr
binder 6346:6346 <> o:68
R6357:6357 Coq.Logic.FinFun <> o:68 var
R6364:6367 Coq.Init.Datatypes <> Some constr
R6378:6381 Coq.Init.Datatypes <> None constr
binder 6346:6346 <> o:70
R6357:6357 Coq.Logic.FinFun <> o:70 var
R6364:6367 Coq.Init.Datatypes <> Some constr
R6378:6381 Coq.Init.Datatypes <> None constr
binder 6409:6409 <> x:72
R6419:6427 Coq.Lists.List <> find def
R6432:6432 Coq.Logic.FinFun <> x:72 var
binder 6409:6409 <> x:73
R6419:6427 Coq.Lists.List <> find def
R6432:6432 Coq.Logic.FinFun <> x:73 var
R6465:6468 Coq.Lists.List <> find def
R6465:6468 Coq.Lists.List <> find def
R6532:6540 Coq.Lists.List <> find_some thm
R6532:6540 Coq.Lists.List <> find_some thm
R6684:6692 Coq.Lists.List <> find_none thm
R6684:6692 Coq.Lists.List <> find_none thm
prf 6837:6866 <> Injective_Surjective_Bijective
binder 6878:6878 <> A:74
binder 6880:6880 <> B:75
R6891:6894 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6883:6888 Coq.Logic.FinFun <> Finite def
R6890:6890 Coq.Logic.FinFun <> A:74 var
R6902:6907 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6895:6899 Coq.Logic.FinFun <> EqDec def
R6901:6901 Coq.Logic.FinFun <> B:75 var
R6918:6919 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6917:6917 Coq.Logic.FinFun <> A:74 var
R6920:6920 Coq.Logic.FinFun <> B:75 var
binder 6915:6915 <> f:76
R6934:6937 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6923:6931 Coq.Logic.FinFun <> Injective def
R6933:6933 Coq.Logic.FinFun <> f:76 var
R6950:6953 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6938:6947 Coq.Logic.FinFun <> Surjective def
R6949:6949 Coq.Logic.FinFun <> f:76 var
R6954:6962 Coq.Logic.FinFun <> Bijective def
R6964:6964 Coq.Logic.FinFun <> f:76 var
R7010:7027 Coq.Logic.FinFun <> Surjective_inverse thm
R7010:7027 Coq.Logic.FinFun <> Surjective_inverse thm
prf 7168:7177 <> Fin_Finite
binder 7179:7179 <> n:77
R7183:7188 Coq.Logic.FinFun <> Finite def
R7191:7195 Coq.Vectors.Fin <> t ind
R7197:7197 Coq.Logic.FinFun <> n:77 var
R7232:7234 Coq.Init.Datatypes <> nil constr
R7232:7234 Coq.Init.Datatypes <> nil constr
R7301:7304 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7295:7300 Coq.Vectors.Fin <> F1 constr
R7305:7307 Coq.Lists.List <> map def
R7309:7314 Coq.Vectors.Fin <> FS constr
R7301:7304 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7295:7300 Coq.Vectors.Fin <> F1 constr
R7305:7307 Coq.Lists.List <> map def
R7309:7314 Coq.Vectors.Fin <> FS constr
R7362:7370 Coq.Vectors.Fin <> caseS def
R7362:7370 Coq.Vectors.Fin <> caseS def
R7425:7430 Coq.Lists.List <> in_map thm
R7425:7430 Coq.Lists.List <> in_map thm
def 7625:7628 <> bFun
binder 7630:7630 <> n:78
R7638:7639 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7635:7637 Coq.Init.Datatypes <> nat ind
R7640:7642 Coq.Init.Datatypes <> nat ind
binder 7633:7633 <> f:79
binder 7655:7655 <> x:80
R7663:7666 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7659:7661 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R7658:7658 Coq.Logic.FinFun <> x:80 var
R7662:7662 Coq.Logic.FinFun <> n:78 var
R7670:7672 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R7667:7667 Coq.Logic.FinFun <> f:79 var
R7669:7669 Coq.Logic.FinFun <> x:80 var
R7673:7673 Coq.Logic.FinFun <> n:78 var
def 7688:7697 <> bInjective
binder 7699:7699 <> n:81
R7707:7708 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7704:7706 Coq.Init.Datatypes <> nat ind
R7709:7711 Coq.Init.Datatypes <> nat ind
binder 7702:7702 <> f:82
binder 7725:7725 <> x:83
binder 7727:7727 <> y:84
R7735:7738 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7731:7733 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R7730:7730 Coq.Logic.FinFun <> x:83 var
R7734:7734 Coq.Logic.FinFun <> n:81 var
R7744:7747 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7740:7742 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R7739:7739 Coq.Logic.FinFun <> y:84 var
R7743:7743 Coq.Logic.FinFun <> n:81 var
R7757:7760 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7751:7753 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7748:7748 Coq.Logic.FinFun <> f:82 var
R7750:7750 Coq.Logic.FinFun <> x:83 var
R7754:7754 Coq.Logic.FinFun <> f:82 var
R7756:7756 Coq.Logic.FinFun <> y:84 var
R7762:7764 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7761:7761 Coq.Logic.FinFun <> x:83 var
R7765:7765 Coq.Logic.FinFun <> y:84 var
def 7780:7790 <> bSurjective
binder 7792:7792 <> n:85
R7800:7801 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7797:7799 Coq.Init.Datatypes <> nat ind
R7802:7804 Coq.Init.Datatypes <> nat ind
binder 7795:7795 <> f:86
binder 7818:7818 <> y:87
R7826:7829 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7822:7824 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R7821:7821 Coq.Logic.FinFun <> y:87 var
R7825:7825 Coq.Logic.FinFun <> n:85 var
R7830:7836 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7838:7839 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 7837:7837 <> x:88
R7845:7848 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7841:7843 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R7840:7840 Coq.Logic.FinFun <> x:88 var
R7844:7844 Coq.Logic.FinFun <> n:85 var
R7852:7854 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7849:7849 Coq.Logic.FinFun <> f:86 var
R7851:7851 Coq.Logic.FinFun <> x:88 var
R7855:7855 Coq.Logic.FinFun <> y:87 var
mod 7931:7942 <> Fin2Restrict
abbrev 7955:7957 Fin2Restrict n2f
R7962:7974 Coq.Vectors.Fin <> of_nat_lt def
def 7988:7990 Fin2Restrict f2n
binder 7993:7993 <> n:89
R7999:8003 Coq.Vectors.Fin <> t ind
R8005:8005 Coq.Logic.FinFun <> n:89 var
binder 7997:7997 <> x:90
R8011:8019 Coq.Init.Specif <> proj1_sig def
R8022:8031 Coq.Vectors.Fin <> to_nat def
R8033:8033 Coq.Logic.FinFun <> x:90 var
def 8048:8053 Fin2Restrict f2n_ok
binder 8055:8055 <> n:91
R8060:8064 Coq.Vectors.Fin <> t ind
R8066:8066 Coq.Logic.FinFun <> n:91 var
binder 8058:8058 <> x:92
R8076:8078 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R8071:8073 Coq.Logic.FinFun Fin2Restrict f2n def
R8075:8075 Coq.Logic.FinFun <> x:92 var
R8079:8079 Coq.Logic.FinFun <> n:91 var
R8084:8092 Coq.Init.Specif <> proj2_sig def
R8095:8104 Coq.Vectors.Fin <> to_nat def
R8106:8106 Coq.Logic.FinFun <> x:92 var
def 8121:8127 Fin2Restrict n2f_f2n
binder 8138:8138 <> n:93
binder 8140:8140 <> x:94
R8157:8159 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8143:8145 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R8148:8153 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R8155:8155 Coq.Logic.FinFun <> x:94 var
R8160:8160 Coq.Logic.FinFun <> x:94 var
R8166:8186 Coq.Vectors.Fin <> of_nat_to_nat_inv thm
def 8200:8206 Fin2Restrict f2n_n2f
binder 8208:8208 <> x:95
binder 8210:8210 <> n:96
binder 8212:8212 <> h:97
R8227:8229 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8216:8218 Coq.Logic.FinFun Fin2Restrict f2n def
R8221:8223 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R8225:8225 Coq.Logic.FinFun <> h:97 var
R8230:8230 Coq.Logic.FinFun <> x:95 var
R8235:8241 Coq.Init.Logic <> f_equal thm
R8262:8278 Coq.Vectors.Fin <> to_nat_of_nat thm
R8280:8280 Coq.Logic.FinFun <> x:95 var
R8282:8282 Coq.Logic.FinFun <> n:96 var
R8284:8284 Coq.Logic.FinFun <> h:97 var
R8245:8253 Coq.Init.Specif <> proj1_sig def
def 8299:8305 Fin2Restrict n2f_ext
binder 8316:8316 <> x:98
binder 8318:8318 <> n:99
binder 8320:8320 <> h:100
binder 8322:8323 <> h':101
R8331:8333 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8326:8328 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R8330:8330 Coq.Logic.FinFun <> h:100 var
R8334:8336 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R8338:8339 Coq.Logic.FinFun <> h':101 var
R8345:8358 Coq.Vectors.Fin <> of_nat_ext thm
def 8372:8378 Fin2Restrict f2n_inj
binder 8389:8389 <> n:102
binder 8391:8391 <> x:103
binder 8393:8393 <> y:104
R8409:8412 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8401:8403 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8396:8398 Coq.Logic.FinFun Fin2Restrict f2n def
R8400:8400 Coq.Logic.FinFun <> x:103 var
R8404:8406 Coq.Logic.FinFun Fin2Restrict f2n def
R8408:8408 Coq.Logic.FinFun <> y:104 var
R8414:8416 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8413:8413 Coq.Logic.FinFun <> x:103 var
R8417:8417 Coq.Logic.FinFun <> y:104 var
R8423:8436 Coq.Vectors.Fin <> to_nat_inj thm
def 8451:8456 Fin2Restrict extend
binder 8458:8458 <> n:105
R8470:8473 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8463:8467 Coq.Vectors.Fin <> t ind
R8469:8469 Coq.Logic.FinFun <> n:105 var
R8474:8478 Coq.Vectors.Fin <> t ind
R8480:8480 Coq.Logic.FinFun <> n:105 var
binder 8461:8461 <> f:106
R8489:8490 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8486:8488 Coq.Init.Datatypes <> nat ind
R8491:8493 Coq.Init.Datatypes <> nat ind
binder 8504:8504 <> x:107
R8518:8526 Coq.Arith.Compare_dec <> le_lt_dec def
R8528:8528 Coq.Logic.FinFun <> n:105 var
R8530:8530 Coq.Logic.FinFun <> x:107 var
R8544:8547 Coq.Init.Specif <> left constr
R8563:8567 Coq.Init.Specif <> right constr
R8574:8576 Coq.Logic.FinFun Fin2Restrict f2n def
R8579:8579 Coq.Logic.FinFun <> f:106 var
R8582:8584 Coq.Logic.FinFun Fin2Restrict n2f abbrev
def 8610:8617 Fin2Restrict restrict
binder 8619:8619 <> n:108
R8627:8628 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8624:8626 Coq.Init.Datatypes <> nat ind
R8629:8631 Coq.Init.Datatypes <> nat ind
binder 8622:8622 <> f:109
R8639:8642 Coq.Logic.FinFun <> bFun def
R8646:8646 Coq.Logic.FinFun <> f:109 var
R8644:8644 Coq.Logic.FinFun <> n:108 var
binder 8634:8635 <> hf:110
R8659:8662 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8652:8656 Coq.Vectors.Fin <> t ind
R8658:8658 Coq.Logic.FinFun <> n:108 var
R8663:8667 Coq.Vectors.Fin <> t ind
R8669:8669 Coq.Logic.FinFun <> n:108 var
binder 8680:8680 <> x:111
R8699:8708 Coq.Vectors.Fin <> to_nat def
R8710:8710 Coq.Logic.FinFun <> x:111 var
binder 8690:8691 <> x':112
binder 8693:8693 <> h:113
R8715:8717 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R8720:8721 Coq.Logic.FinFun <> hf:110 var
R8725:8725 Coq.Logic.FinFun <> h:113 var
R8815:8819 Coq.Init.Logic <> proj1 thm
R8822:8831 Coq.Arith.PeanoNat Nat le_ngt thm
R8860:8866 Coq.Logic.FinFun Fin2Restrict n2f_ext def
prf 8902:8910 Fin2Restrict extend_ok
binder 8912:8912 <> n:114
binder 8914:8914 <> f:115
R8918:8921 Coq.Logic.FinFun <> bFun def
R8927:8932 Coq.Logic.FinFun Fin2Restrict extend def
R8934:8934 Coq.Logic.FinFun <> n:114 var
R8936:8936 Coq.Logic.FinFun <> f:115 var
R8923:8923 Coq.Logic.FinFun <> n:114 var
R8967:8972 Coq.Logic.FinFun Fin2Restrict extend def
R8994:8999 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R8994:8999 Coq.Logic.FinFun Fin2Restrict f2n_ok def
prf 9014:9023 Fin2Restrict extend_f2n
binder 9025:9025 <> n:116
binder 9027:9027 <> f:117
R9032:9036 Coq.Vectors.Fin <> t ind
R9038:9038 Coq.Logic.FinFun <> n:116 var
binder 9030:9030 <> x:118
R9059:9061 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9043:9048 Coq.Logic.FinFun Fin2Restrict extend def
R9053:9055 Coq.Logic.FinFun Fin2Restrict f2n def
R9057:9057 Coq.Logic.FinFun <> x:118 var
R9050:9050 Coq.Logic.FinFun <> f:117 var
R9062:9064 Coq.Logic.FinFun Fin2Restrict f2n def
R9067:9067 Coq.Logic.FinFun <> f:117 var
R9069:9069 Coq.Logic.FinFun <> x:118 var
R9093:9099 Coq.Logic.FinFun Fin2Restrict n2f_f2n def
R9093:9099 Coq.Logic.FinFun Fin2Restrict n2f_f2n def
R9112:9117 Coq.Logic.FinFun Fin2Restrict extend def
R9120:9122 Coq.Logic.FinFun Fin2Restrict f2n def
R9125:9130 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R9144:9153 Coq.Vectors.Fin <> to_nat def
R9144:9153 Coq.Vectors.Fin <> to_nat def
prf 9218:9227 Fin2Restrict extend_n2f
binder 9229:9229 <> n:119
binder 9231:9231 <> f:120
binder 9233:9233 <> x:121
R9239:9239 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R9238:9238 Coq.Logic.FinFun <> x:121 var
R9240:9240 Coq.Logic.FinFun <> n:119 var
binder 9236:9236 <> h:122
R9264:9266 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9245:9247 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R9250:9258 Coq.Logic.FinFun Fin2Restrict extend_ok thm
R9262:9262 Coq.Logic.FinFun <> h:122 var
R9260:9260 Coq.Logic.FinFun <> f:120 var
R9267:9267 Coq.Logic.FinFun <> f:120 var
R9270:9272 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R9274:9274 Coq.Logic.FinFun <> h:122 var
R9298:9306 Coq.Logic.FinFun Fin2Restrict extend_ok thm
R9298:9306 Coq.Logic.FinFun Fin2Restrict extend_ok thm
R9321:9326 Coq.Logic.FinFun Fin2Restrict extend def
R9370:9376 Coq.Logic.FinFun Fin2Restrict n2f_f2n def
R9370:9376 Coq.Logic.FinFun Fin2Restrict n2f_f2n def
R9370:9376 Coq.Logic.FinFun Fin2Restrict n2f_f2n def
R9389:9395 Coq.Logic.FinFun Fin2Restrict n2f_ext def
R9389:9395 Coq.Logic.FinFun Fin2Restrict n2f_ext def
prf 9410:9421 Fin2Restrict restrict_f2n
binder 9423:9423 <> n:123
binder 9425:9425 <> f:124
binder 9427:9428 <> hf:125
R9433:9437 Coq.Vectors.Fin <> t ind
R9439:9439 Coq.Logic.FinFun <> n:123 var
binder 9431:9431 <> x:126
R9469:9471 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9445:9447 Coq.Logic.FinFun Fin2Restrict f2n def
R9451:9458 Coq.Logic.FinFun Fin2Restrict restrict def
R9460:9460 Coq.Logic.FinFun <> n:123 var
R9462:9462 Coq.Logic.FinFun <> f:124 var
R9464:9465 Coq.Logic.FinFun <> hf:125 var
R9467:9467 Coq.Logic.FinFun <> x:126 var
R9472:9472 Coq.Logic.FinFun <> f:124 var
R9475:9477 Coq.Logic.FinFun Fin2Restrict f2n def
R9479:9479 Coq.Logic.FinFun <> x:126 var
R9498:9505 Coq.Logic.FinFun Fin2Restrict restrict def
R9508:9510 Coq.Logic.FinFun Fin2Restrict f2n def
R9523:9532 Coq.Vectors.Fin <> to_nat def
R9523:9532 Coq.Vectors.Fin <> to_nat def
R9562:9568 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R9562:9568 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
prf 9583:9594 Fin2Restrict restrict_n2f
binder 9596:9596 <> n:127
binder 9598:9598 <> f:128
binder 9600:9601 <> hf:129
binder 9603:9603 <> x:130
R9609:9609 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R9608:9608 Coq.Logic.FinFun <> x:130 var
R9610:9610 Coq.Logic.FinFun <> n:127 var
binder 9606:9606 <> h:131
R9640:9642 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9617:9624 Coq.Logic.FinFun Fin2Restrict restrict def
R9626:9626 Coq.Logic.FinFun <> n:127 var
R9628:9628 Coq.Logic.FinFun <> f:128 var
R9630:9631 Coq.Logic.FinFun <> hf:129 var
R9634:9636 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R9638:9638 Coq.Logic.FinFun <> h:131 var
R9643:9645 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R9648:9649 Coq.Logic.FinFun <> hf:129 var
R9653:9653 Coq.Logic.FinFun <> h:131 var
R9672:9679 Coq.Logic.FinFun Fin2Restrict restrict def
R9694:9700 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R9694:9700 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R9713:9715 Coq.Logic.FinFun Fin2Restrict f2n def
R9729:9738 Coq.Vectors.Fin <> to_nat def
R9741:9743 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R9729:9738 Coq.Vectors.Fin <> to_nat def
R9741:9743 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R9790:9796 Coq.Logic.FinFun Fin2Restrict n2f_ext def
R9790:9796 Coq.Logic.FinFun Fin2Restrict n2f_ext def
prf 9811:9827 Fin2Restrict extend_surjective
binder 9829:9829 <> n:132
binder 9831:9831 <> f:133
R9864:9868 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R9837:9847 Coq.Logic.FinFun <> bSurjective def
R9853:9858 Coq.Logic.FinFun Fin2Restrict extend def
R9860:9860 Coq.Logic.FinFun <> n:132 var
R9862:9862 Coq.Logic.FinFun <> f:133 var
R9849:9849 Coq.Logic.FinFun <> n:132 var
R9869:9878 Coq.Logic.FinFun <> Surjective def
R9880:9880 Coq.Logic.FinFun <> f:133 var
R9933:9938 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R9933:9938 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R9972:9974 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R9972:9974 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R9989:9995 Coq.Logic.FinFun Fin2Restrict f2n_inj def
R9989:9995 Coq.Logic.FinFun Fin2Restrict f2n_inj def
R10020:10029 Coq.Logic.FinFun Fin2Restrict extend_f2n thm
R10032:10038 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R10020:10029 Coq.Logic.FinFun Fin2Restrict extend_f2n thm
R10020:10029 Coq.Logic.FinFun Fin2Restrict extend_f2n thm
R10032:10038 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R10032:10038 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R10077:10079 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R10077:10079 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R10108:10110 Coq.Logic.FinFun Fin2Restrict f2n def
R10108:10110 Coq.Logic.FinFun Fin2Restrict f2n def
R10137:10142 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R10137:10142 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R10158:10167 Coq.Logic.FinFun Fin2Restrict extend_f2n thm
R10158:10167 Coq.Logic.FinFun Fin2Restrict extend_f2n thm
R10158:10167 Coq.Logic.FinFun Fin2Restrict extend_f2n thm
R10180:10186 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R10180:10186 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
prf 10201:10216 Fin2Restrict extend_injective
binder 10218:10218 <> n:134
binder 10220:10220 <> f:135
R10252:10256 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R10226:10235 Coq.Logic.FinFun <> bInjective def
R10241:10246 Coq.Logic.FinFun Fin2Restrict extend def
R10248:10248 Coq.Logic.FinFun <> n:134 var
R10250:10250 Coq.Logic.FinFun <> f:135 var
R10237:10237 Coq.Logic.FinFun <> n:134 var
R10257:10265 Coq.Logic.FinFun <> Injective def
R10267:10267 Coq.Logic.FinFun <> f:135 var
R10315:10321 Coq.Logic.FinFun Fin2Restrict f2n_inj def
R10315:10321 Coq.Logic.FinFun Fin2Restrict f2n_inj def
R10344:10349 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R10344:10349 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R10344:10349 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R10344:10349 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R10369:10378 Coq.Logic.FinFun Fin2Restrict extend_f2n thm
R10369:10378 Coq.Logic.FinFun Fin2Restrict extend_f2n thm
R10369:10378 Coq.Logic.FinFun Fin2Restrict extend_f2n thm
R10369:10378 Coq.Logic.FinFun Fin2Restrict extend_f2n thm
R10427:10433 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R10444:10450 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R10427:10433 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R10427:10433 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R10444:10450 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R10444:10450 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R10495:10504 Coq.Logic.FinFun Fin2Restrict extend_n2f thm
R10495:10504 Coq.Logic.FinFun Fin2Restrict extend_n2f thm
R10495:10504 Coq.Logic.FinFun Fin2Restrict extend_n2f thm
R10495:10504 Coq.Logic.FinFun Fin2Restrict extend_n2f thm
R10522:10530 Coq.Logic.FinFun Fin2Restrict extend_ok thm
R10539:10547 Coq.Logic.FinFun Fin2Restrict extend_ok thm
R10522:10530 Coq.Logic.FinFun Fin2Restrict extend_ok thm
R10539:10547 Coq.Logic.FinFun Fin2Restrict extend_ok thm
R10577:10583 Coq.Logic.FinFun Fin2Restrict n2f_ext def
R10577:10583 Coq.Logic.FinFun Fin2Restrict n2f_ext def
prf 10598:10616 Fin2Restrict restrict_surjective
binder 10618:10618 <> n:136
binder 10620:10620 <> f:137
binder 10622:10622 <> h:138
R10656:10660 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R10628:10637 Coq.Logic.FinFun <> Surjective def
R10641:10648 Coq.Logic.FinFun Fin2Restrict restrict def
R10650:10650 Coq.Logic.FinFun <> n:136 var
R10652:10652 Coq.Logic.FinFun <> f:137 var
R10654:10654 Coq.Logic.FinFun <> h:138 var
R10661:10671 Coq.Logic.FinFun <> bSurjective def
R10675:10675 Coq.Logic.FinFun <> f:137 var
R10673:10673 Coq.Logic.FinFun <> n:136 var
R10729:10731 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R10729:10731 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R10760:10762 Coq.Logic.FinFun Fin2Restrict f2n def
R10760:10762 Coq.Logic.FinFun Fin2Restrict f2n def
R10789:10794 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R10789:10794 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R10814:10825 Coq.Logic.FinFun Fin2Restrict restrict_f2n thm
R10814:10825 Coq.Logic.FinFun Fin2Restrict restrict_f2n thm
R10814:10825 Coq.Logic.FinFun Fin2Restrict restrict_f2n thm
R10841:10847 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R10841:10847 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R10885:10890 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R10885:10890 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R10925:10927 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R10925:10927 Coq.Logic.FinFun Fin2Restrict n2f abbrev
R10943:10949 Coq.Logic.FinFun Fin2Restrict f2n_inj def
R10943:10949 Coq.Logic.FinFun Fin2Restrict f2n_inj def
R10964:10975 Coq.Logic.FinFun Fin2Restrict restrict_f2n thm
R10978:10984 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R10964:10975 Coq.Logic.FinFun Fin2Restrict restrict_f2n thm
R10964:10975 Coq.Logic.FinFun Fin2Restrict restrict_f2n thm
R10978:10984 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R10978:10984 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
prf 10999:11016 Fin2Restrict restrict_injective
binder 11018:11018 <> n:139
binder 11020:11020 <> f:140
binder 11022:11022 <> h:141
R11055:11059 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11028:11036 Coq.Logic.FinFun <> Injective def
R11040:11047 Coq.Logic.FinFun Fin2Restrict restrict def
R11049:11049 Coq.Logic.FinFun <> n:139 var
R11051:11051 Coq.Logic.FinFun <> f:140 var
R11053:11053 Coq.Logic.FinFun <> h:141 var
R11060:11069 Coq.Logic.FinFun <> bInjective def
R11073:11073 Coq.Logic.FinFun <> f:140 var
R11071:11071 Coq.Logic.FinFun <> n:139 var
R11133:11139 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R11150:11156 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R11133:11139 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R11133:11139 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R11150:11156 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R11150:11156 Coq.Logic.FinFun Fin2Restrict f2n_n2f def
R11198:11209 Coq.Logic.FinFun Fin2Restrict restrict_n2f thm
R11198:11209 Coq.Logic.FinFun Fin2Restrict restrict_n2f thm
R11198:11209 Coq.Logic.FinFun Fin2Restrict restrict_n2f thm
R11198:11209 Coq.Logic.FinFun Fin2Restrict restrict_n2f thm
R11266:11272 Coq.Logic.FinFun Fin2Restrict n2f_ext def
R11266:11272 Coq.Logic.FinFun Fin2Restrict n2f_ext def
R11305:11311 Coq.Logic.FinFun Fin2Restrict f2n_inj def
R11305:11311 Coq.Logic.FinFun Fin2Restrict f2n_inj def
R11334:11339 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R11334:11339 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R11334:11339 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R11334:11339 Coq.Logic.FinFun Fin2Restrict f2n_ok def
R11363:11374 Coq.Logic.FinFun Fin2Restrict restrict_f2n thm
R11363:11374 Coq.Logic.FinFun Fin2Restrict restrict_f2n thm
R11363:11374 Coq.Logic.FinFun Fin2Restrict restrict_f2n thm
R11363:11374 Coq.Logic.FinFun Fin2Restrict restrict_f2n thm
R11394:11405 Coq.Logic.FinFun Fin2Restrict <> mod
R11415:11426 Coq.Logic.FinFun Fin2Restrict <> mod
prf 11489:11510 <> bInjective_bSurjective
binder 11512:11512 <> n:142
R11520:11521 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11517:11519 Coq.Init.Datatypes <> nat ind
R11522:11524 Coq.Init.Datatypes <> nat ind
binder 11515:11515 <> f:143
R11538:11542 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11577:11577 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11530:11533 Coq.Logic.FinFun <> bFun def
R11537:11537 Coq.Logic.FinFun <> f:143 var
R11535:11535 Coq.Logic.FinFun <> n:142 var
R11557:11561 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11543:11552 Coq.Logic.FinFun <> bInjective def
R11556:11556 Coq.Logic.FinFun <> f:143 var
R11554:11554 Coq.Logic.FinFun <> n:142 var
R11562:11572 Coq.Logic.FinFun <> bSurjective def
R11576:11576 Coq.Logic.FinFun <> f:143 var
R11574:11574 Coq.Logic.FinFun <> n:142 var
R11611:11628 Coq.Logic.FinFun <> restrict_injective thm
R11638:11656 Coq.Logic.FinFun <> restrict_surjective thm
R11611:11628 Coq.Logic.FinFun <> restrict_injective thm
R11611:11628 Coq.Logic.FinFun <> restrict_injective thm
R11638:11656 Coq.Logic.FinFun <> restrict_surjective thm
R11638:11656 Coq.Logic.FinFun <> restrict_surjective thm
R11669:11693 Coq.Logic.FinFun <> Endo_Injective_Surjective thm
R11669:11693 Coq.Logic.FinFun <> Endo_Injective_Surjective thm
R11705:11714 Coq.Logic.FinFun <> Fin_Finite thm
R11705:11714 Coq.Logic.FinFun <> Fin_Finite thm
R11742:11751 Coq.Vectors.Fin <> eq_dec thm
R11742:11751 Coq.Vectors.Fin <> eq_dec thm
prf 11794:11815 <> bSurjective_bBijective
binder 11817:11817 <> n:144
R11825:11826 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11822:11824 Coq.Init.Datatypes <> nat ind
R11827:11829 Coq.Init.Datatypes <> nat ind
binder 11820:11820 <> f:145
R11843:11846 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11835:11838 Coq.Logic.FinFun <> bFun def
R11842:11842 Coq.Logic.FinFun <> f:145 var
R11840:11840 Coq.Logic.FinFun <> n:144 var
R11862:11866 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11847:11857 Coq.Logic.FinFun <> bSurjective def
R11861:11861 Coq.Logic.FinFun <> f:145 var
R11859:11859 Coq.Logic.FinFun <> n:144 var
R11867:11873 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R11875:11876 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 11874:11874 <> g:146
R11885:11888 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R11877:11880 Coq.Logic.FinFun <> bFun def
R11884:11884 Coq.Logic.FinFun <> g:146 var
R11882:11882 Coq.Logic.FinFun <> n:144 var
binder 11896:11896 <> x:147
R11904:11907 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11900:11902 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R11899:11899 Coq.Logic.FinFun <> x:147 var
R11903:11903 Coq.Logic.FinFun <> n:144 var
R11919:11922 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R11915:11917 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11908:11908 Coq.Logic.FinFun <> g:146 var
R11911:11911 Coq.Logic.FinFun <> f:145 var
R11913:11913 Coq.Logic.FinFun <> x:147 var
R11918:11918 Coq.Logic.FinFun <> x:147 var
R11930:11932 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11923:11923 Coq.Logic.FinFun <> f:145 var
R11926:11926 Coq.Logic.FinFun <> g:146 var
R11928:11928 Coq.Logic.FinFun <> x:147 var
R11933:11933 Coq.Logic.FinFun <> x:147 var
R11967:11985 Coq.Logic.FinFun <> restrict_surjective thm
R11967:11985 Coq.Logic.FinFun <> restrict_surjective thm
R11967:11985 Coq.Logic.FinFun <> restrict_surjective thm
R12017:12025 Coq.Logic.FinFun <> Injective def
R12028:12035 Coq.Logic.FinFun <> restrict def
R12017:12025 Coq.Logic.FinFun <> Injective def
R12028:12035 Coq.Logic.FinFun <> restrict def
R12052:12076 Coq.Logic.FinFun <> Endo_Injective_Surjective thm
R12052:12076 Coq.Logic.FinFun <> Endo_Injective_Surjective thm
R12099:12108 Coq.Logic.FinFun <> Fin_Finite thm
R12099:12108 Coq.Logic.FinFun <> Fin_Finite thm
R12138:12147 Coq.Vectors.Fin <> eq_dec thm
R12138:12147 Coq.Vectors.Fin <> eq_dec thm
R12194:12202 Coq.Logic.FinFun <> Bijective def
R12205:12212 Coq.Logic.FinFun <> restrict def
R12194:12202 Coq.Logic.FinFun <> Bijective def
R12205:12212 Coq.Logic.FinFun <> restrict def
R12229:12258 Coq.Logic.FinFun <> Injective_Surjective_Bijective thm
R12229:12258 Coq.Logic.FinFun <> Injective_Surjective_Bijective thm
R12281:12290 Coq.Logic.FinFun <> Fin_Finite thm
R12281:12290 Coq.Logic.FinFun <> Fin_Finite thm
R12304:12313 Coq.Vectors.Fin <> eq_dec thm
R12304:12313 Coq.Vectors.Fin <> eq_dec thm
R12359:12364 Coq.Logic.FinFun <> extend def
R12359:12364 Coq.Logic.FinFun <> extend def
R12387:12395 Coq.Logic.FinFun <> extend_ok thm
R12387:12395 Coq.Logic.FinFun <> extend_ok thm
R12442:12448 Coq.Logic.FinFun <> f2n_n2f def
R12459:12470 Coq.Logic.FinFun <> restrict_f2n thm
R12477:12486 Coq.Logic.FinFun <> extend_f2n thm
R12442:12448 Coq.Logic.FinFun <> f2n_n2f def
R12442:12448 Coq.Logic.FinFun <> f2n_n2f def
R12459:12470 Coq.Logic.FinFun <> restrict_f2n thm
R12459:12470 Coq.Logic.FinFun <> restrict_f2n thm
R12477:12486 Coq.Logic.FinFun <> extend_f2n thm
R12477:12486 Coq.Logic.FinFun <> extend_f2n thm
R12514:12520 Coq.Logic.FinFun <> f2n_n2f def
R12527:12536 Coq.Logic.FinFun <> extend_f2n thm
R12543:12554 Coq.Logic.FinFun <> restrict_f2n thm
R12514:12520 Coq.Logic.FinFun <> f2n_n2f def
R12514:12520 Coq.Logic.FinFun <> f2n_n2f def
R12527:12536 Coq.Logic.FinFun <> extend_f2n thm
R12527:12536 Coq.Logic.FinFun <> extend_f2n thm
R12543:12554 Coq.Logic.FinFun <> restrict_f2n thm
R12543:12554 Coq.Logic.FinFun <> restrict_f2n thm
