DIGEST e8303c9ca01cdf505a989b21f3ac7aab
FCoq.FSets.FMapInterface
R774:777 Coq.Bool.Bool <> <> lib
R779:791 Coq.Structures.DecidableType <> <> lib
R793:803 Coq.Structures.OrderedType <> <> lib
def 2261:2263 <> Cmp
binder 2266:2268 <> elt:1
R2283:2284 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2280:2282 Coq.FSets.FMapInterface <> elt:1 var
R2288:2289 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2285:2287 Coq.FSets.FMapInterface <> elt:1 var
R2290:2293 Coq.Init.Datatypes <> bool ind
binder 2276:2278 <> cmp:2
binder 2296:2297 <> e1:3
binder 2299:2300 <> e2:4
R2314:2316 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2305:2307 Coq.FSets.FMapInterface <> cmp:2 var
R2312:2313 Coq.FSets.FMapInterface <> e2:4 var
R2309:2310 Coq.FSets.FMapInterface <> e1:3 var
R2317:2320 Coq.Init.Datatypes <> true constr
R2515:2527 Coq.Structures.DecidableType DecidableType <> mod
modtype 2504:2508 <> WSfun
def 2545:2547 WSfun key
R2552:2554 Coq.FSets.FMapInterface E t defax
R2588:2590 Coq.FSets.FMapInterface WSfun key def
ax 2613:2613 WSfun t
R2621:2624 Coq.Init.Logic <> ::type_scope:x_'->'_x not
sec 2677:2681 WSfun Types
var 2698:2700 WSfun.Types elt
ax 2723:2727 WSfun empty
R2731:2731 Coq.FSets.FMapInterface WSfun t defax
R2733:2735 Coq.FSets.FMapInterface <> WSfun.Types.elt var
ax 2779:2786 WSfun is_empty
R2795:2798 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2790:2790 Coq.FSets.FMapInterface WSfun t defax
R2792:2794 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R2799:2802 Coq.Init.Datatypes <> bool ind
ax 2867:2869 WSfun add
R2876:2879 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2873:2875 Coq.FSets.FMapInterface WSfun key def
R2883:2886 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2880:2882 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R2892:2895 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2887:2887 Coq.FSets.FMapInterface WSfun t defax
R2889:2891 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R2896:2896 Coq.FSets.FMapInterface WSfun t defax
R2898:2900 Coq.FSets.FMapInterface <> WSfun.Types.elt var
ax 3090:3093 WSfun find
R3100:3103 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3097:3099 Coq.FSets.FMapInterface WSfun key def
R3109:3112 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3104:3104 Coq.FSets.FMapInterface WSfun t defax
R3106:3108 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R3113:3118 Coq.Init.Datatypes <> option ind
R3120:3122 Coq.FSets.FMapInterface <> WSfun.Types.elt var
ax 3243:3248 WSfun remove
R3255:3258 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3252:3254 Coq.FSets.FMapInterface WSfun key def
R3264:3267 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3259:3259 Coq.FSets.FMapInterface WSfun t defax
R3261:3263 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R3268:3268 Coq.FSets.FMapInterface WSfun t defax
R3270:3272 Coq.FSets.FMapInterface <> WSfun.Types.elt var
ax 3419:3421 WSfun mem
R3428:3431 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3425:3427 Coq.FSets.FMapInterface WSfun key def
R3437:3440 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3432:3432 Coq.FSets.FMapInterface WSfun t defax
R3434:3436 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R3441:3444 Coq.Init.Datatypes <> bool ind
var 3556:3559 WSfun.Types elt'
var 3561:3565 WSfun.Types elt''
ax 3590:3592 WSfun map
R3596:3596 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3608:3612 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3600:3603 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3597:3599 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R3604:3607 Coq.FSets.FMapInterface <> WSfun.Types.elt' var
R3618:3621 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3613:3613 Coq.FSets.FMapInterface WSfun t defax
R3615:3617 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R3622:3622 Coq.FSets.FMapInterface WSfun t defax
R3624:3627 Coq.FSets.FMapInterface <> WSfun.Types.elt' var
ax 3930:3933 WSfun mapi
R3937:3937 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3956:3960 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3941:3944 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3938:3940 Coq.FSets.FMapInterface WSfun key def
R3948:3951 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3945:3947 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R3952:3955 Coq.FSets.FMapInterface <> WSfun.Types.elt' var
R3966:3969 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3961:3961 Coq.FSets.FMapInterface WSfun t defax
R3963:3965 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R3970:3970 Coq.FSets.FMapInterface WSfun t defax
R3972:3975 Coq.FSets.FMapInterface <> WSfun.Types.elt' var
ax 4126:4129 WSfun map2
R4138:4138 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4180:4184 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4149:4152 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4139:4144 Coq.Init.Datatypes <> option ind
R4146:4148 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R4164:4167 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4153:4158 Coq.Init.Datatypes <> option ind
R4160:4163 Coq.FSets.FMapInterface <> WSfun.Types.elt' var
R4168:4173 Coq.Init.Datatypes <> option ind
R4175:4179 Coq.FSets.FMapInterface <> WSfun.Types.elt'' var
R4190:4193 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4185:4185 Coq.FSets.FMapInterface WSfun t defax
R4187:4189 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R4200:4204 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4194:4194 Coq.FSets.FMapInterface WSfun t defax
R4196:4199 Coq.FSets.FMapInterface <> WSfun.Types.elt' var
R4205:4205 Coq.FSets.FMapInterface WSfun t defax
R4207:4211 Coq.FSets.FMapInterface <> WSfun.Types.elt'' var
ax 4487:4494 WSfun elements
R4503:4506 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4498:4498 Coq.FSets.FMapInterface WSfun t defax
R4500:4502 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R4507:4510 Coq.Init.Datatypes <> list ind
R4516:4516 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4513:4515 Coq.FSets.FMapInterface WSfun key def
R4517:4519 Coq.FSets.FMapInterface <> WSfun.Types.elt var
ax 4644:4651 WSfun cardinal
R4660:4663 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4655:4655 Coq.FSets.FMapInterface WSfun t defax
R4657:4659 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R4664:4666 Coq.Init.Datatypes <> nat ind
ax 4747:4750 WSfun fold
binder 4761:4761 <> A:20
R4770:4770 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4791:4795 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4774:4777 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4771:4773 Coq.FSets.FMapInterface WSfun key def
R4781:4784 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4778:4780 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R4786:4789 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4785:4785 Coq.FSets.FMapInterface <> A:20 var
R4790:4790 Coq.FSets.FMapInterface <> A:20 var
R4801:4804 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4796:4796 Coq.FSets.FMapInterface WSfun t defax
R4798:4800 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R4806:4809 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4805:4805 Coq.FSets.FMapInterface <> A:20 var
R4810:4810 Coq.FSets.FMapInterface <> A:20 var
ax 5010:5014 WSfun equal
R5018:5018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5037:5041 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5022:5025 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5019:5021 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R5029:5032 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5026:5028 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R5033:5036 Coq.Init.Datatypes <> bool ind
R5047:5050 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5042:5042 Coq.FSets.FMapInterface WSfun t defax
R5044:5046 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R5056:5059 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5051:5051 Coq.FSets.FMapInterface WSfun t defax
R5053:5055 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R5060:5063 Coq.Init.Datatypes <> bool ind
sec 5321:5324 WSfun.Types Spec
var 5343:5343 WSfun.Types.Spec m
var 5345:5346 WSfun.Types.Spec m'
var 5348:5350 WSfun.Types.Spec m''
R5354:5354 Coq.FSets.FMapInterface WSfun t defax
R5356:5358 Coq.FSets.FMapInterface <> WSfun.Types.elt var
var 5376:5376 WSfun.Types.Spec x
var 5378:5378 WSfun.Types.Spec y
var 5380:5380 WSfun.Types.Spec z
R5384:5386 Coq.FSets.FMapInterface WSfun key def
var 5404:5404 WSfun.Types.Spec e
var 5406:5407 WSfun.Types.Spec e'
R5411:5413 Coq.FSets.FMapInterface <> WSfun.Types.elt var
ax 5433:5438 WSfun MapsTo
R5445:5448 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5442:5444 Coq.FSets.FMapInterface WSfun key def
R5452:5455 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5449:5451 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R5461:5464 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5456:5456 Coq.FSets.FMapInterface WSfun t defax
R5458:5460 Coq.FSets.FMapInterface <> WSfun.Types.elt var
def 5489:5490 WSfun In
R5495:5497 Coq.FSets.FMapInterface WSfun key def
binder 5493:5493 <> k:32
R5503:5503 Coq.FSets.FMapInterface WSfun t defax
R5505:5507 Coq.FSets.FMapInterface <> WSfun.Types.elt var
binder 5500:5500 <> m:33
R5520:5526 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5532:5533 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5529:5531 Coq.FSets.FMapInterface <> WSfun.Types.elt var
binder 5527:5527 <> e:34
R5534:5539 Coq.FSets.FMapInterface WSfun MapsTo defax
R5545:5545 Coq.FSets.FMapInterface <> m:33 var
R5543:5543 Coq.FSets.FMapInterface <> e:34 var
R5541:5541 Coq.FSets.FMapInterface <> k:32 var
def 5566:5570 WSfun Empty
binder 5572:5572 <> m:35
R5589:5591 Coq.FSets.FMapInterface WSfun key def
binder 5585:5585 <> a:36
R5596:5598 Coq.FSets.FMapInterface <> WSfun.Types.elt var
binder 5594:5594 <> e:37
R5603:5604 Coq.Init.Logic <> ::type_scope:'~'_x not
R5605:5610 Coq.FSets.FMapInterface WSfun MapsTo defax
R5616:5616 Coq.FSets.FMapInterface <> m:35 var
R5614:5614 Coq.FSets.FMapInterface <> e:37 var
R5612:5612 Coq.FSets.FMapInterface <> a:36 var
def 5637:5642 WSfun eq_key
R5653:5653 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R5650:5652 Coq.FSets.FMapInterface WSfun key def
R5654:5656 Coq.FSets.FMapInterface <> WSfun.Types.elt var
binder 5645:5645 <> p:38
binder 5647:5648 <> p':39
R5662:5665 Coq.FSets.FMapInterface E eq defax
R5676:5678 Coq.Init.Datatypes <> fst def
R5680:5681 Coq.FSets.FMapInterface <> p':39 var
R5668:5670 Coq.Init.Datatypes <> fst def
R5672:5672 Coq.FSets.FMapInterface <> p:38 var
def 5703:5712 WSfun eq_key_elt
R5723:5723 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R5720:5722 Coq.FSets.FMapInterface WSfun key def
R5724:5726 Coq.FSets.FMapInterface <> WSfun.Types.elt var
binder 5715:5715 <> p:40
binder 5717:5718 <> p':41
R5763:5766 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5742:5745 Coq.FSets.FMapInterface E eq defax
R5756:5758 Coq.Init.Datatypes <> fst def
R5760:5761 Coq.FSets.FMapInterface <> p':41 var
R5748:5750 Coq.Init.Datatypes <> fst def
R5752:5752 Coq.FSets.FMapInterface <> p:40 var
R5767:5767 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5773:5777 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5784:5784 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5768:5770 Coq.Init.Datatypes <> snd def
R5772:5772 Coq.FSets.FMapInterface <> p:40 var
R5778:5780 Coq.Init.Datatypes <> snd def
R5782:5783 Coq.FSets.FMapInterface <> p':41 var
ax 5841:5848 WSfun MapsTo_1
R5860:5863 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5852:5855 Coq.FSets.FMapInterface E eq defax
R5859:5859 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R5857:5857 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R5876:5879 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5864:5869 Coq.FSets.FMapInterface WSfun MapsTo defax
R5875:5875 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R5873:5873 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R5871:5871 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R5880:5885 Coq.FSets.FMapInterface WSfun MapsTo defax
R5891:5891 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R5889:5889 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R5887:5887 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
ax 5945:5949 WSfun mem_1
R5959:5962 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5953:5954 Coq.FSets.FMapInterface WSfun In def
R5958:5958 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R5956:5956 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R5970:5972 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5963:5965 Coq.FSets.FMapInterface WSfun mem defax
R5969:5969 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R5967:5967 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R5973:5976 Coq.Init.Datatypes <> true constr
ax 5995:5999 WSfun mem_2
R6017:6020 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6010:6012 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6003:6005 Coq.FSets.FMapInterface WSfun mem defax
R6009:6009 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6007:6007 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6013:6016 Coq.Init.Datatypes <> true constr
R6021:6022 Coq.FSets.FMapInterface WSfun In def
R6026:6026 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6024:6024 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
ax 6082:6088 WSfun empty_1
R6092:6096 Coq.FSets.FMapInterface WSfun Empty def
R6098:6102 Coq.FSets.FMapInterface WSfun empty defax
ax 6161:6170 WSfun is_empty_1
R6181:6184 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6174:6178 Coq.FSets.FMapInterface WSfun Empty def
R6180:6180 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6195:6197 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6185:6192 Coq.FSets.FMapInterface WSfun is_empty defax
R6194:6194 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6198:6201 Coq.Init.Datatypes <> true constr
ax 6220:6229 WSfun is_empty_2
R6250:6253 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6243:6245 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6233:6240 Coq.FSets.FMapInterface WSfun is_empty defax
R6242:6242 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6246:6249 Coq.Init.Datatypes <> true constr
R6254:6258 Coq.FSets.FMapInterface WSfun Empty def
R6260:6260 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
ax 6314:6318 WSfun add_1
R6330:6333 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6322:6325 Coq.FSets.FMapInterface E eq defax
R6329:6329 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6327:6327 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6334:6339 Coq.FSets.FMapInterface WSfun MapsTo defax
R6346:6348 Coq.FSets.FMapInterface WSfun add defax
R6354:6354 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6352:6352 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6350:6350 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6343:6343 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6341:6341 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
ax 6374:6378 WSfun add_2
R6392:6395 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6382:6383 Coq.Init.Logic <> ::type_scope:'~'_x not
R6384:6387 Coq.FSets.FMapInterface E eq defax
R6391:6391 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6389:6389 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6408:6411 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6396:6401 Coq.FSets.FMapInterface WSfun MapsTo defax
R6407:6407 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6405:6405 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6403:6403 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6412:6417 Coq.FSets.FMapInterface WSfun MapsTo defax
R6424:6426 Coq.FSets.FMapInterface WSfun add defax
R6433:6433 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6430:6431 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e' var
R6428:6428 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6421:6421 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6419:6419 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
ax 6453:6457 WSfun add_3
R6471:6474 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6461:6462 Coq.Init.Logic <> ::type_scope:'~'_x not
R6463:6466 Coq.FSets.FMapInterface E eq defax
R6470:6470 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6468:6468 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6498:6501 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6475:6480 Coq.FSets.FMapInterface WSfun MapsTo defax
R6487:6489 Coq.FSets.FMapInterface WSfun add defax
R6496:6496 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6493:6494 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e' var
R6491:6491 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6484:6484 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6482:6482 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6502:6507 Coq.FSets.FMapInterface WSfun MapsTo defax
R6513:6513 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6511:6511 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6509:6509 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
ax 6570:6577 WSfun remove_1
R6589:6592 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6581:6584 Coq.FSets.FMapInterface E eq defax
R6588:6588 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6586:6586 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6593:6594 Coq.Init.Logic <> ::type_scope:'~'_x not
R6595:6596 Coq.FSets.FMapInterface WSfun In def
R6601:6606 Coq.FSets.FMapInterface WSfun remove defax
R6610:6610 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6608:6608 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6598:6598 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
ax 6630:6637 WSfun remove_2
R6651:6654 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6641:6642 Coq.Init.Logic <> ::type_scope:'~'_x not
R6643:6646 Coq.FSets.FMapInterface E eq defax
R6650:6650 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6648:6648 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6667:6670 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6655:6660 Coq.FSets.FMapInterface WSfun MapsTo defax
R6666:6666 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6664:6664 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6662:6662 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6671:6676 Coq.FSets.FMapInterface WSfun MapsTo defax
R6683:6688 Coq.FSets.FMapInterface WSfun remove defax
R6692:6692 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6690:6690 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6680:6680 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6678:6678 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
ax 6712:6719 WSfun remove_3
R6746:6749 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6723:6728 Coq.FSets.FMapInterface WSfun MapsTo defax
R6735:6740 Coq.FSets.FMapInterface WSfun remove defax
R6744:6744 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6742:6742 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6732:6732 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6730:6730 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6750:6755 Coq.FSets.FMapInterface WSfun MapsTo defax
R6761:6761 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6759:6759 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6757:6757 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
ax 6816:6821 WSfun find_1
R6837:6840 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6825:6830 Coq.FSets.FMapInterface WSfun MapsTo defax
R6836:6836 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6834:6834 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6832:6832 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6849:6851 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6841:6844 Coq.FSets.FMapInterface WSfun find defax
R6848:6848 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6846:6846 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6852:6855 Coq.Init.Datatypes <> Some constr
R6857:6857 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
ax 6876:6881 WSfun find_2
R6902:6905 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6893:6895 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6885:6888 Coq.FSets.FMapInterface WSfun find defax
R6892:6892 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6890:6890 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6896:6899 Coq.Init.Datatypes <> Some constr
R6901:6901 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6906:6911 Coq.FSets.FMapInterface WSfun MapsTo defax
R6917:6917 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6915:6915 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6913:6913 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
ax 6976:6985 WSfun elements_1
R7009:7012 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6997:7002 Coq.FSets.FMapInterface WSfun MapsTo defax
R7008:7008 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R7006:7006 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R7004:7004 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R7013:7015 Coq.Lists.SetoidList <> InA ind
R7035:7042 Coq.FSets.FMapInterface WSfun elements defax
R7044:7044 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R7028:7028 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7030:7030 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7032:7032 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7029:7029 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R7031:7031 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R7017:7026 Coq.FSets.FMapInterface WSfun eq_key_elt def
ax 7064:7073 WSfun elements_2
R7118:7121 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7085:7087 Coq.Lists.SetoidList <> InA ind
R7107:7114 Coq.FSets.FMapInterface WSfun elements defax
R7116:7116 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R7100:7100 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7102:7102 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7104:7104 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7101:7101 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R7103:7103 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R7089:7098 Coq.FSets.FMapInterface WSfun eq_key_elt def
R7122:7127 Coq.FSets.FMapInterface WSfun MapsTo defax
R7133:7133 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R7131:7131 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R7129:7129 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
ax 7259:7269 WSfun elements_3w
R7273:7278 Coq.Lists.SetoidList <> NoDupA ind
R7288:7295 Coq.FSets.FMapInterface WSfun elements defax
R7297:7297 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R7280:7285 Coq.FSets.FMapInterface WSfun eq_key def
ax 7357:7366 WSfun cardinal_1
R7380:7382 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7370:7377 Coq.FSets.FMapInterface WSfun cardinal defax
R7379:7379 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R7383:7388 Coq.Init.Datatypes <> length def
R7391:7398 Coq.FSets.FMapInterface WSfun elements defax
R7400:7400 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
ax 7456:7461 WSfun fold_1
binder 7474:7474 <> A:60
R7489:7489 Coq.FSets.FMapInterface <> A:60 var
binder 7485:7485 <> i:61
R7500:7503 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7497:7499 Coq.FSets.FMapInterface WSfun key def
R7507:7510 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7504:7506 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R7512:7515 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7511:7511 Coq.FSets.FMapInterface <> A:60 var
R7516:7516 Coq.FSets.FMapInterface <> A:60 var
binder 7493:7493 <> f:62
R7538:7540 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7528:7531 Coq.FSets.FMapInterface WSfun fold defax
R7537:7537 Coq.FSets.FMapInterface <> i:61 var
R7535:7535 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R7533:7533 Coq.FSets.FMapInterface <> f:62 var
R7541:7549 Coq.Lists.List <> fold_left def
R7597:7597 Coq.FSets.FMapInterface <> i:61 var
R7585:7592 Coq.FSets.FMapInterface WSfun elements defax
R7594:7594 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
binder 7556:7556 <> a:63
binder 7558:7558 <> p:64
R7563:7563 Coq.FSets.FMapInterface <> f:62 var
R7581:7581 Coq.FSets.FMapInterface <> a:63 var
R7574:7576 Coq.Init.Datatypes <> snd def
R7578:7578 Coq.FSets.FMapInterface <> p:64 var
R7566:7568 Coq.Init.Datatypes <> fst def
R7570:7570 Coq.FSets.FMapInterface <> p:64 var
def 8491:8495 WSfun Equal
binder 8497:8497 <> m:66
binder 8499:8500 <> m':67
binder 8512:8512 <> y:68
R8523:8525 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8515:8518 Coq.FSets.FMapInterface WSfun find defax
R8522:8522 Coq.FSets.FMapInterface <> m:66 var
R8520:8520 Coq.FSets.FMapInterface <> y:68 var
R8526:8529 Coq.FSets.FMapInterface WSfun find defax
R8533:8534 Coq.FSets.FMapInterface <> m':67 var
R8531:8531 Coq.FSets.FMapInterface <> y:68 var
def 8553:8557 WSfun Equiv
R8570:8571 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8567:8569 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R8575:8576 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8572:8574 Coq.FSets.FMapInterface <> WSfun.Types.elt var
binder 8560:8565 <> eq_elt:69
binder 8583:8583 <> m:70
binder 8585:8586 <> m':71
R8600:8600 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8629:8643 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8704:8704 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
binder 8608:8608 <> k:72
R8617:8621 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8611:8612 Coq.FSets.FMapInterface WSfun In def
R8616:8616 Coq.FSets.FMapInterface <> m:70 var
R8614:8614 Coq.FSets.FMapInterface <> k:72 var
R8622:8623 Coq.FSets.FMapInterface WSfun In def
R8627:8628 Coq.FSets.FMapInterface <> m':71 var
R8625:8625 Coq.FSets.FMapInterface <> k:72 var
binder 8651:8651 <> k:73
binder 8653:8653 <> e:74
binder 8655:8656 <> e':75
R8671:8674 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8659:8664 Coq.FSets.FMapInterface WSfun MapsTo defax
R8670:8670 Coq.FSets.FMapInterface <> m:70 var
R8668:8668 Coq.FSets.FMapInterface <> e:74 var
R8666:8666 Coq.FSets.FMapInterface <> k:73 var
R8689:8692 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8675:8680 Coq.FSets.FMapInterface WSfun MapsTo defax
R8687:8688 Coq.FSets.FMapInterface <> m':71 var
R8684:8685 Coq.FSets.FMapInterface <> e':75 var
R8682:8682 Coq.FSets.FMapInterface <> k:73 var
R8693:8698 Coq.FSets.FMapInterface <> eq_elt:69 var
R8702:8703 Coq.FSets.FMapInterface <> e':75 var
R8700:8700 Coq.FSets.FMapInterface <> e:74 var
def 8723:8728 WSfun Equivb
R8739:8740 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8736:8738 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R8744:8745 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8741:8743 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R8746:8749 Coq.Init.Datatypes <> bool ind
binder 8731:8733 <> cmp:76
R8755:8759 Coq.FSets.FMapInterface WSfun Equiv def
R8762:8764 Coq.FSets.FMapInterface <> Cmp def
R8766:8768 Coq.FSets.FMapInterface <> cmp:76 var
var 8825:8827 WSfun.Types.Spec cmp
R8834:8837 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8831:8833 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R8841:8844 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8838:8840 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R8845:8848 Coq.Init.Datatypes <> bool ind
ax 8867:8873 WSfun equal_1
R8892:8895 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8877:8882 Coq.FSets.FMapInterface WSfun Equivb def
R8890:8891 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m' var
R8888:8888 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R8884:8886 Coq.FSets.FMapInterface <> WSfun.Types.Spec.cmp var
R8910:8912 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8896:8900 Coq.FSets.FMapInterface WSfun equal defax
R8908:8909 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m' var
R8906:8906 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R8902:8904 Coq.FSets.FMapInterface <> WSfun.Types.Spec.cmp var
R8913:8916 Coq.Init.Datatypes <> true constr
ax 8934:8940 WSfun equal_2
R8965:8968 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8958:8960 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8944:8948 Coq.FSets.FMapInterface WSfun equal defax
R8956:8957 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m' var
R8954:8954 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R8950:8952 Coq.FSets.FMapInterface <> WSfun.Types.Spec.cmp var
R8961:8964 Coq.Init.Datatypes <> true constr
R8969:8974 Coq.FSets.FMapInterface WSfun Equivb def
R8982:8983 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m' var
R8980:8980 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R8976:8978 Coq.FSets.FMapInterface <> WSfun.Types.Spec.cmp var
R8995:8998 Coq.FSets.FMapInterface WSfun.Types.Spec <> sec
R9008:9012 Coq.FSets.FMapInterface WSfun.Types <> sec
ax 9066:9070 WSfun map_1
binder 9082:9084 <> elt:80
binder 9086:9089 <> elt':81
R9100:9100 Coq.FSets.FMapInterface WSfun t defax
R9102:9104 Coq.FSets.FMapInterface <> elt:80 var
binder 9097:9097 <> m:82
R9109:9111 Coq.FSets.FMapInterface WSfun key def
binder 9107:9107 <> x:83
R9116:9118 Coq.FSets.FMapInterface <> elt:80 var
binder 9114:9114 <> e:84
R9126:9127 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9123:9125 Coq.FSets.FMapInterface <> elt:80 var
R9128:9131 Coq.FSets.FMapInterface <> elt':81 var
binder 9121:9121 <> f:85
R9155:9158 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9143:9148 Coq.FSets.FMapInterface WSfun MapsTo defax
R9154:9154 Coq.FSets.FMapInterface <> m:82 var
R9152:9152 Coq.FSets.FMapInterface <> e:84 var
R9150:9150 Coq.FSets.FMapInterface <> x:83 var
R9159:9164 Coq.FSets.FMapInterface WSfun MapsTo defax
R9175:9177 Coq.FSets.FMapInterface WSfun map defax
R9181:9181 Coq.FSets.FMapInterface <> m:82 var
R9179:9179 Coq.FSets.FMapInterface <> f:85 var
R9169:9169 Coq.FSets.FMapInterface <> f:85 var
R9171:9171 Coq.FSets.FMapInterface <> e:84 var
R9166:9166 Coq.FSets.FMapInterface <> x:83 var
ax 9201:9205 WSfun map_2
binder 9217:9219 <> elt:87
binder 9221:9224 <> elt':88
R9235:9235 Coq.FSets.FMapInterface WSfun t defax
R9237:9239 Coq.FSets.FMapInterface <> elt:87 var
binder 9232:9232 <> m:89
R9244:9246 Coq.FSets.FMapInterface WSfun key def
binder 9242:9242 <> x:90
R9254:9255 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9251:9253 Coq.FSets.FMapInterface <> elt:87 var
R9256:9259 Coq.FSets.FMapInterface <> elt':88 var
binder 9249:9249 <> f:91
R9285:9288 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9271:9272 Coq.FSets.FMapInterface WSfun In def
R9277:9279 Coq.FSets.FMapInterface WSfun map defax
R9283:9283 Coq.FSets.FMapInterface <> m:89 var
R9281:9281 Coq.FSets.FMapInterface <> f:91 var
R9274:9274 Coq.FSets.FMapInterface <> x:90 var
R9289:9290 Coq.FSets.FMapInterface WSfun In def
R9294:9294 Coq.FSets.FMapInterface <> m:89 var
R9292:9292 Coq.FSets.FMapInterface <> x:90 var
ax 9349:9354 WSfun mapi_1
binder 9366:9368 <> elt:93
binder 9370:9373 <> elt':94
R9384:9384 Coq.FSets.FMapInterface WSfun t defax
R9386:9388 Coq.FSets.FMapInterface <> elt:93 var
binder 9381:9381 <> m:95
R9393:9395 Coq.FSets.FMapInterface WSfun key def
binder 9391:9391 <> x:96
R9400:9402 Coq.FSets.FMapInterface <> elt:93 var
binder 9398:9398 <> e:97
R9419:9420 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9416:9418 Coq.FSets.FMapInterface WSfun key def
R9424:9425 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9421:9423 Coq.FSets.FMapInterface <> elt:93 var
R9426:9429 Coq.FSets.FMapInterface <> elt':94 var
binder 9414:9414 <> f:98
R9445:9456 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9433:9438 Coq.FSets.FMapInterface WSfun MapsTo defax
R9444:9444 Coq.FSets.FMapInterface <> m:95 var
R9442:9442 Coq.FSets.FMapInterface <> e:97 var
R9440:9440 Coq.FSets.FMapInterface <> x:96 var
R9457:9463 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R9465:9466 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 9464:9464 <> y:99
R9475:9478 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R9467:9470 Coq.FSets.FMapInterface E eq defax
R9474:9474 Coq.FSets.FMapInterface <> x:96 var
R9472:9472 Coq.FSets.FMapInterface <> y:99 var
R9479:9484 Coq.FSets.FMapInterface WSfun MapsTo defax
R9497:9500 Coq.FSets.FMapInterface WSfun mapi defax
R9504:9504 Coq.FSets.FMapInterface <> m:95 var
R9502:9502 Coq.FSets.FMapInterface <> f:98 var
R9489:9489 Coq.FSets.FMapInterface <> f:98 var
R9493:9493 Coq.FSets.FMapInterface <> e:97 var
R9491:9491 Coq.FSets.FMapInterface <> y:99 var
R9486:9486 Coq.FSets.FMapInterface <> x:96 var
ax 9524:9529 WSfun mapi_2
binder 9541:9543 <> elt:101
binder 9545:9548 <> elt':102
R9559:9559 Coq.FSets.FMapInterface WSfun t defax
R9561:9563 Coq.FSets.FMapInterface <> elt:101 var
binder 9556:9556 <> m:103
R9568:9570 Coq.FSets.FMapInterface WSfun key def
binder 9566:9566 <> x:104
R9587:9588 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9584:9586 Coq.FSets.FMapInterface WSfun key def
R9592:9593 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9589:9591 Coq.FSets.FMapInterface <> elt:101 var
R9594:9597 Coq.FSets.FMapInterface <> elt':102 var
binder 9582:9582 <> f:105
R9616:9619 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9601:9602 Coq.FSets.FMapInterface WSfun In def
R9607:9610 Coq.FSets.FMapInterface WSfun mapi defax
R9614:9614 Coq.FSets.FMapInterface <> m:103 var
R9612:9612 Coq.FSets.FMapInterface <> f:105 var
R9604:9604 Coq.FSets.FMapInterface <> x:104 var
R9620:9621 Coq.FSets.FMapInterface WSfun In def
R9625:9625 Coq.FSets.FMapInterface <> m:103 var
R9623:9623 Coq.FSets.FMapInterface <> x:104 var
ax 9680:9685 WSfun map2_1
binder 9697:9699 <> elt:107
binder 9701:9704 <> elt':108
binder 9706:9710 <> elt'':109
R9721:9721 Coq.FSets.FMapInterface WSfun t defax
R9723:9725 Coq.FSets.FMapInterface <> elt:107 var
binder 9718:9718 <> m:110
R9732:9732 Coq.FSets.FMapInterface WSfun t defax
R9734:9737 Coq.FSets.FMapInterface <> elt':108 var
binder 9728:9729 <> m':111
R9744:9746 Coq.FSets.FMapInterface WSfun key def
binder 9742:9742 <> x:112
R9761:9762 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9751:9756 Coq.Init.Datatypes <> option ind
R9758:9760 Coq.FSets.FMapInterface <> elt:107 var
R9774:9775 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9763:9768 Coq.Init.Datatypes <> option ind
R9770:9773 Coq.FSets.FMapInterface <> elt':108 var
R9776:9781 Coq.Init.Datatypes <> option ind
R9783:9787 Coq.FSets.FMapInterface <> elt'':109 var
binder 9749:9749 <> f:113
R9809:9820 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9798:9801 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R9792:9793 Coq.FSets.FMapInterface WSfun In def
R9797:9797 Coq.FSets.FMapInterface <> m:110 var
R9795:9795 Coq.FSets.FMapInterface <> x:112 var
R9802:9803 Coq.FSets.FMapInterface WSfun In def
R9807:9808 Coq.FSets.FMapInterface <> m':111 var
R9805:9805 Coq.FSets.FMapInterface <> x:112 var
R9841:9843 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9821:9824 Coq.FSets.FMapInterface WSfun find defax
R9829:9832 Coq.FSets.FMapInterface WSfun map2 defax
R9838:9839 Coq.FSets.FMapInterface <> m':111 var
R9836:9836 Coq.FSets.FMapInterface <> m:110 var
R9834:9834 Coq.FSets.FMapInterface <> f:113 var
R9826:9826 Coq.FSets.FMapInterface <> x:112 var
R9844:9844 Coq.FSets.FMapInterface <> f:113 var
R9858:9861 Coq.FSets.FMapInterface WSfun find defax
R9865:9866 Coq.FSets.FMapInterface <> m':111 var
R9863:9863 Coq.FSets.FMapInterface <> x:112 var
R9847:9850 Coq.FSets.FMapInterface WSfun find defax
R9854:9854 Coq.FSets.FMapInterface <> m:110 var
R9852:9852 Coq.FSets.FMapInterface <> x:112 var
ax 9886:9891 WSfun map2_2
binder 9903:9905 <> elt:115
binder 9907:9910 <> elt':116
binder 9912:9916 <> elt'':117
R9927:9927 Coq.FSets.FMapInterface WSfun t defax
R9929:9931 Coq.FSets.FMapInterface <> elt:115 var
binder 9924:9924 <> m:118
R9938:9938 Coq.FSets.FMapInterface WSfun t defax
R9940:9943 Coq.FSets.FMapInterface <> elt':116 var
binder 9934:9935 <> m':119
R9950:9952 Coq.FSets.FMapInterface WSfun key def
binder 9948:9948 <> x:120
R9967:9968 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9957:9962 Coq.Init.Datatypes <> option ind
R9964:9966 Coq.FSets.FMapInterface <> elt:115 var
R9980:9981 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9969:9974 Coq.Init.Datatypes <> option ind
R9976:9979 Coq.FSets.FMapInterface <> elt':116 var
R9982:9987 Coq.Init.Datatypes <> option ind
R9989:9993 Coq.FSets.FMapInterface <> elt'':117 var
binder 9955:9955 <> f:121
R10023:10026 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10005:10006 Coq.FSets.FMapInterface WSfun In def
R10011:10014 Coq.FSets.FMapInterface WSfun map2 defax
R10020:10021 Coq.FSets.FMapInterface <> m':119 var
R10018:10018 Coq.FSets.FMapInterface <> m:118 var
R10016:10016 Coq.FSets.FMapInterface <> f:121 var
R10008:10008 Coq.FSets.FMapInterface <> x:120 var
R10033:10036 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10027:10028 Coq.FSets.FMapInterface WSfun In def
R10032:10032 Coq.FSets.FMapInterface <> m:118 var
R10030:10030 Coq.FSets.FMapInterface <> x:120 var
R10037:10038 Coq.FSets.FMapInterface WSfun In def
R10042:10043 Coq.FSets.FMapInterface <> m':119 var
R10040:10040 Coq.FSets.FMapInterface <> x:120 var
R10291:10295 Coq.FSets.FMapInterface WSfun <> modtype
modtype 10417:10418 <> WS
R10442:10454 Coq.Structures.DecidableType DecidableType <> mod
mod 10438:10438 <> WS.E
R10467:10471 Coq.FSets.FMapInterface WSfun <> mod
R10473:10473 Coq.FSets.FMapInterface WS.E <> modtype
R10480:10481 Coq.FSets.FMapInterface WS <> modtype
R10563:10573 Coq.Structures.OrderedType OrderedType <> mod
modtype 10553:10556 <> Sfun
R10587:10591 Coq.FSets.FMapInterface WSfun <> mod
R10593:10593 Coq.FSets.FMapInterface E <> modtype
sec 10606:10608 Sfun elt
var 10622:10624 Sfun.elt elt
def 10646:10651 Sfun lt_key
R10662:10662 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R10659:10661 Coq.FSets.FMapInterface Sfun key def
R10663:10665 Coq.FSets.FMapInterface <> Sfun.elt.elt var
binder 10654:10654 <> p:124
binder 10656:10657 <> p':125
R10671:10674 Coq.FSets.FMapInterface E lt defax
R10685:10687 Coq.Init.Datatypes <> fst def
R10689:10690 Coq.FSets.FMapInterface <> p':125 var
R10677:10679 Coq.Init.Datatypes <> fst def
R10681:10681 Coq.FSets.FMapInterface <> p:124 var
ax 10755:10764 Sfun elements_3
binder 10775:10775 <> m:126
R10778:10781 Coq.Sorting.Sorted <> sort abbrev
R10791:10798 Coq.FSets.FMapInterface Sfun elements defax
R10800:10800 Coq.FSets.FMapInterface <> m:126 var
R10783:10788 Coq.FSets.FMapInterface Sfun lt_key def
R11017:11019 Coq.FSets.FMapInterface Sfun.elt <> sec
R11026:11029 Coq.FSets.FMapInterface Sfun <> modtype
modtype 11105:11105 <> S
R11129:11139 Coq.Structures.OrderedType OrderedType <> mod
mod 11125:11125 <> S.E
R11152:11155 Coq.FSets.FMapInterface Sfun <> mod
R11157:11157 Coq.FSets.FMapInterface S.E <> modtype
R11164:11164 Coq.FSets.FMapInterface S <> modtype
modtype 11235:11238 <> Sord
R11266:11276 Coq.Structures.OrderedType OrderedType <> mod
mod 11259:11262 <> Sord.Data
R11303:11303 Coq.FSets.FMapInterface S <> mod
mod 11296:11299 <> Sord.MapS
R11315:11318 Coq.FSets.FMapInterface Sord.MapS <> mod
def 11335:11335 Sord t
R11340:11345 Coq.FSets.FMapInterface Sord t defax
R11347:11352 Coq.FSets.FMapInterface Sord t defax
ax 11368:11369 Sord eq
R11374:11377 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11373:11373 Coq.FSets.FMapInterface Sord t def
R11379:11382 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11378:11378 Coq.FSets.FMapInterface Sord t def
ax 11401:11402 Sord lt
R11407:11410 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11406:11406 Coq.FSets.FMapInterface Sord t def
R11412:11415 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11411:11411 Coq.FSets.FMapInterface Sord t def
ax 11431:11437 Sord eq_refl
R11452:11452 Coq.FSets.FMapInterface Sord t def
binder 11448:11448 <> m:130
R11455:11456 Coq.FSets.FMapInterface Sord eq defax
R11460:11460 Coq.FSets.FMapInterface <> m:130 var
R11458:11458 Coq.FSets.FMapInterface <> m:130 var
ax 11471:11476 Sord eq_sym
R11495:11495 Coq.FSets.FMapInterface Sord t def
binder 11487:11488 <> m1:132
binder 11490:11491 <> m2:133
R11506:11509 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11498:11499 Coq.FSets.FMapInterface Sord eq defax
R11504:11505 Coq.FSets.FMapInterface <> m2:133 var
R11501:11502 Coq.FSets.FMapInterface <> m1:132 var
R11510:11511 Coq.FSets.FMapInterface Sord eq defax
R11516:11517 Coq.FSets.FMapInterface <> m1:132 var
R11513:11514 Coq.FSets.FMapInterface <> m2:133 var
ax 11528:11535 Sord eq_trans
R11557:11557 Coq.FSets.FMapInterface Sord t def
binder 11546:11547 <> m1:135
binder 11549:11550 <> m2:136
binder 11552:11553 <> m3:137
R11568:11571 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11560:11561 Coq.FSets.FMapInterface Sord eq defax
R11566:11567 Coq.FSets.FMapInterface <> m2:136 var
R11563:11564 Coq.FSets.FMapInterface <> m1:135 var
R11580:11583 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11572:11573 Coq.FSets.FMapInterface Sord eq defax
R11578:11579 Coq.FSets.FMapInterface <> m3:137 var
R11575:11576 Coq.FSets.FMapInterface <> m2:136 var
R11584:11585 Coq.FSets.FMapInterface Sord eq defax
R11590:11591 Coq.FSets.FMapInterface <> m3:137 var
R11587:11588 Coq.FSets.FMapInterface <> m1:135 var
ax 11602:11609 Sord lt_trans
R11631:11631 Coq.FSets.FMapInterface Sord t def
binder 11620:11621 <> m1:139
binder 11623:11624 <> m2:140
binder 11626:11627 <> m3:141
R11642:11645 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11634:11635 Coq.FSets.FMapInterface Sord lt defax
R11640:11641 Coq.FSets.FMapInterface <> m2:140 var
R11637:11638 Coq.FSets.FMapInterface <> m1:139 var
R11654:11657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11646:11647 Coq.FSets.FMapInterface Sord lt defax
R11652:11653 Coq.FSets.FMapInterface <> m3:141 var
R11649:11650 Coq.FSets.FMapInterface <> m2:140 var
R11658:11659 Coq.FSets.FMapInterface Sord lt defax
R11664:11665 Coq.FSets.FMapInterface <> m3:141 var
R11661:11662 Coq.FSets.FMapInterface <> m1:139 var
ax 11676:11684 Sord lt_not_eq
R11703:11703 Coq.FSets.FMapInterface Sord t def
binder 11695:11696 <> m1:143
binder 11698:11699 <> m2:144
R11714:11717 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11706:11707 Coq.FSets.FMapInterface Sord lt defax
R11712:11713 Coq.FSets.FMapInterface <> m2:144 var
R11709:11710 Coq.FSets.FMapInterface <> m1:143 var
R11718:11719 Coq.Init.Logic <> ::type_scope:'~'_x not
R11720:11721 Coq.FSets.FMapInterface Sord eq defax
R11726:11727 Coq.FSets.FMapInterface <> m2:144 var
R11723:11724 Coq.FSets.FMapInterface <> m1:143 var
def 11744:11746 Sord cmp
binder 11748:11748 <> e:146
binder 11750:11751 <> e':147
R11762:11773 Coq.FSets.FMapInterface Sord compare defax
R11777:11778 Coq.FSets.FMapInterface <> e':147 var
R11775:11775 Coq.FSets.FMapInterface <> e:146 var
R11785:11786 Coq.Structures.OrderedType <> EQ constr
R11793:11796 Coq.Init.Datatypes <> true constr
R11805:11809 Coq.Init.Datatypes <> false constr
ax 11829:11832 Sord eq_1
binder 11843:11843 <> m:148
binder 11845:11846 <> m':149
R11864:11867 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11849:11854 Coq.FSets.FMapInterface Sord Equivb def
R11862:11863 Coq.FSets.FMapInterface <> m':149 var
R11860:11860 Coq.FSets.FMapInterface <> m:148 var
R11856:11858 Coq.FSets.FMapInterface Sord cmp def
R11868:11869 Coq.FSets.FMapInterface Sord eq defax
R11873:11874 Coq.FSets.FMapInterface <> m':149 var
R11871:11871 Coq.FSets.FMapInterface <> m:148 var
ax 11889:11892 Sord eq_2
binder 11903:11903 <> m:151
binder 11905:11906 <> m':152
R11916:11919 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11909:11910 Coq.FSets.FMapInterface Sord eq defax
R11914:11915 Coq.FSets.FMapInterface <> m':152 var
R11912:11912 Coq.FSets.FMapInterface <> m:151 var
R11920:11925 Coq.FSets.FMapInterface Sord Equivb def
R11933:11934 Coq.FSets.FMapInterface <> m':152 var
R11931:11931 Coq.FSets.FMapInterface <> m:151 var
R11927:11929 Coq.FSets.FMapInterface Sord cmp def
ax 11950:11956 Sord compare
binder 11967:11968 <> m1:154
binder 11970:11971 <> m2:155
R11974:11980 Coq.Structures.OrderedType <> Compare ind
R11991:11992 Coq.FSets.FMapInterface <> m2:155 var
R11988:11989 Coq.FSets.FMapInterface <> m1:154 var
R11985:11986 Coq.FSets.FMapInterface Sord eq defax
R11982:11983 Coq.FSets.FMapInterface Sord lt defax
R12144:12147 Coq.FSets.FMapInterface Sord <> modtype
