DIGEST d390455110cddb0fa1455b39b6515fb9
FCoq.FSets.FSetBridge
R830:842 Coq.FSets.FSetInterface <> <> lib
R1020:1020 Coq.FSets.FSetInterface S <> mod
R1026:1029 Coq.FSets.FSetInterface Sdep <> mod
R1048:1050 Coq.FSets.FSetBridge M.E <> modtype
mod 998:1007 <> DepOfNodep
def 1067:1071 DepOfNodep empty
R1075:1075 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R1077:1079 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R1081:1083 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R1091:1091 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R1080:1080 Coq.FSets.FSetBridge M t defax
binder 1076:1076 <> s:1
R1084:1088 Coq.FSets.FSetBridge M Empty def
R1090:1090 Coq.FSets.FSetBridge <> s:1 var
R1114:1118 Coq.FSets.FSetBridge M empty defax
R1114:1118 Coq.FSets.FSetBridge M empty defax
def 1157:1164 DepOfNodep is_empty
R1179:1179 Coq.FSets.FSetBridge M t defax
binder 1175:1175 <> s:2
R1182:1182 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1190:1194 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1204:1204 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1183:1187 Coq.FSets.FSetBridge M Empty def
R1189:1189 Coq.FSets.FSetBridge <> s:2 var
R1195:1196 Coq.Init.Logic <> ::type_scope:'~'_x not
R1197:1201 Coq.FSets.FSetBridge M Empty def
R1203:1203 Coq.FSets.FSetBridge <> s:2 var
R1240:1249 Coq.FSets.FSetBridge M is_empty_1 defax
R1260:1269 Coq.FSets.FSetBridge M is_empty_2 defax
R1240:1249 Coq.FSets.FSetBridge M is_empty_1 defax
R1260:1269 Coq.FSets.FSetBridge M is_empty_2 defax
R1290:1297 Coq.FSets.FSetBridge M is_empty defax
R1290:1297 Coq.FSets.FSetBridge M is_empty defax
def 1336:1338 DepOfNodep mem
R1354:1356 Coq.FSets.FSetBridge M elt def
binder 1350:1350 <> x:3
R1364:1364 Coq.FSets.FSetBridge M t defax
binder 1360:1360 <> s:4
R1368:1368 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1375:1379 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1388:1388 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1369:1370 Coq.FSets.FSetBridge M In defax
R1374:1374 Coq.FSets.FSetBridge <> s:4 var
R1372:1372 Coq.FSets.FSetBridge <> x:3 var
R1380:1381 Coq.Init.Logic <> ::type_scope:'~'_x not
R1382:1383 Coq.FSets.FSetBridge M In defax
R1387:1387 Coq.FSets.FSetBridge <> s:4 var
R1385:1385 Coq.FSets.FSetBridge <> x:3 var
R1424:1428 Coq.FSets.FSetBridge M mem_1 defax
R1446:1450 Coq.FSets.FSetBridge M mem_2 defax
R1424:1428 Coq.FSets.FSetBridge M mem_1 defax
R1446:1450 Coq.FSets.FSetBridge M mem_2 defax
R1478:1480 Coq.FSets.FSetBridge M mem defax
R1478:1480 Coq.FSets.FSetBridge M mem defax
def 1520:1522 DepOfNodep Add
R1529:1531 Coq.FSets.FSetBridge M elt def
binder 1525:1525 <> x:5
R1542:1542 Coq.FSets.FSetBridge M t defax
binder 1535:1535 <> s:6
binder 1537:1538 <> s':7
R1563:1565 Coq.FSets.FSetBridge M elt def
binder 1559:1559 <> y:8
R1575:1579 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1568:1569 Coq.FSets.FSetBridge M In defax
R1573:1574 Coq.FSets.FSetBridge <> s':7 var
R1571:1571 Coq.FSets.FSetBridge <> y:8 var
R1588:1591 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R1580:1583 Coq.FSets.FSetBridge M.E eq defax
R1587:1587 Coq.FSets.FSetBridge <> y:8 var
R1585:1585 Coq.FSets.FSetBridge <> x:5 var
R1592:1593 Coq.FSets.FSetBridge M In defax
R1597:1597 Coq.FSets.FSetBridge <> s:6 var
R1595:1595 Coq.FSets.FSetBridge <> y:8 var
def 1614:1616 DepOfNodep add
R1632:1634 Coq.FSets.FSetBridge M elt def
binder 1628:1628 <> x:9
R1642:1642 Coq.FSets.FSetBridge M t defax
binder 1638:1638 <> s:10
R1646:1646 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R1649:1651 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R1653:1655 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R1666:1666 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R1652:1652 Coq.FSets.FSetBridge M t defax
binder 1647:1648 <> s':11
R1656:1658 Coq.FSets.FSetBridge DepOfNodep Add def
R1664:1665 Coq.FSets.FSetBridge <> s':11 var
R1662:1662 Coq.FSets.FSetBridge <> s:10 var
R1660:1660 Coq.FSets.FSetBridge <> x:9 var
R1698:1700 Coq.FSets.FSetBridge M add defax
R1698:1700 Coq.FSets.FSetBridge M add defax
R1725:1727 Coq.FSets.FSetBridge DepOfNodep Add def
R1751:1758 Coq.FSets.FSetBridge M.E eq_dec defax
R1751:1758 Coq.FSets.FSetBridge M.E eq_dec defax
R1802:1806 Coq.FSets.FSetBridge M add_3 defax
R1802:1806 Coq.FSets.FSetBridge M add_3 defax
def 1837:1845 DepOfNodep singleton
R1864:1866 Coq.FSets.FSetBridge M elt def
binder 1860:1860 <> x:12
R1869:1869 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R1871:1873 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R1875:1877 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R1913:1913 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R1874:1874 Coq.FSets.FSetBridge M t defax
binder 1870:1870 <> s:13
R1889:1891 Coq.FSets.FSetBridge M elt def
binder 1885:1885 <> y:14
R1900:1904 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1894:1895 Coq.FSets.FSetBridge M In defax
R1899:1899 Coq.FSets.FSetBridge <> s:13 var
R1897:1897 Coq.FSets.FSetBridge <> y:14 var
R1905:1908 Coq.FSets.FSetBridge M.E eq defax
R1912:1912 Coq.FSets.FSetBridge <> y:14 var
R1910:1910 Coq.FSets.FSetBridge <> x:12 var
R1945:1953 Coq.FSets.FSetBridge M singleton defax
R1945:1953 Coq.FSets.FSetBridge M singleton defax
def 1991:1996 DepOfNodep remove
R2016:2018 Coq.FSets.FSetBridge M elt def
binder 2012:2012 <> x:15
R2026:2026 Coq.FSets.FSetBridge M t defax
binder 2022:2022 <> s:16
R2034:2034 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R2037:2039 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R2041:2043 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R2092:2092 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R2040:2040 Coq.FSets.FSetBridge M t defax
binder 2035:2036 <> s':17
R2055:2057 Coq.FSets.FSetBridge M elt def
binder 2051:2051 <> y:18
R2067:2071 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R2060:2061 Coq.FSets.FSetBridge M In defax
R2065:2066 Coq.FSets.FSetBridge <> s':17 var
R2063:2063 Coq.FSets.FSetBridge <> y:18 var
R2082:2085 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R2072:2073 Coq.Init.Logic <> ::type_scope:'~'_x not
R2074:2077 Coq.FSets.FSetBridge M.E eq defax
R2081:2081 Coq.FSets.FSetBridge <> y:18 var
R2079:2079 Coq.FSets.FSetBridge <> x:15 var
R2086:2087 Coq.FSets.FSetBridge M In defax
R2091:2091 Coq.FSets.FSetBridge <> s:16 var
R2089:2089 Coq.FSets.FSetBridge <> y:18 var
R2124:2129 Coq.FSets.FSetBridge M remove defax
R2124:2129 Coq.FSets.FSetBridge M remove defax
R2160:2161 Coq.FSets.FSetBridge M In defax
R2166:2171 Coq.FSets.FSetBridge M remove defax
R2160:2161 Coq.FSets.FSetBridge M In defax
R2166:2171 Coq.FSets.FSetBridge M remove defax
R2218:2221 Coq.FSets.FSetBridge M In_1 defax
R2218:2221 Coq.FSets.FSetBridge M In_1 defax
R2265:2272 Coq.FSets.FSetBridge M.E eq_dec defax
R2265:2272 Coq.FSets.FSetBridge M.E eq_dec defax
R2306:2307 Coq.FSets.FSetBridge M In defax
R2312:2317 Coq.FSets.FSetBridge M remove defax
R2306:2307 Coq.FSets.FSetBridge M In defax
R2312:2317 Coq.FSets.FSetBridge M remove defax
R2364:2367 Coq.FSets.FSetBridge M In_1 defax
R2364:2367 Coq.FSets.FSetBridge M In_1 defax
def 2442:2446 DepOfNodep union
R2468:2468 Coq.FSets.FSetBridge M t defax
binder 2461:2461 <> s:19
binder 2463:2464 <> s':20
R2471:2471 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R2475:2477 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R2479:2481 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R2528:2528 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R2478:2478 Coq.FSets.FSetBridge M t defax
binder 2472:2474 <> s'':21
R2493:2495 Coq.FSets.FSetBridge M elt def
binder 2489:2489 <> x:22
R2506:2510 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R2498:2499 Coq.FSets.FSetBridge M In defax
R2503:2505 Coq.FSets.FSetBridge <> s'':21 var
R2501:2501 Coq.FSets.FSetBridge <> x:22 var
R2517:2520 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R2511:2512 Coq.FSets.FSetBridge M In defax
R2516:2516 Coq.FSets.FSetBridge <> s:19 var
R2514:2514 Coq.FSets.FSetBridge <> x:22 var
R2521:2522 Coq.FSets.FSetBridge M In defax
R2526:2527 Coq.FSets.FSetBridge <> s':20 var
R2524:2524 Coq.FSets.FSetBridge <> x:22 var
R2560:2564 Coq.FSets.FSetBridge M union defax
R2560:2564 Coq.FSets.FSetBridge M union defax
def 2605:2609 DepOfNodep inter
R2631:2631 Coq.FSets.FSetBridge M t defax
binder 2624:2624 <> s:23
binder 2626:2627 <> s':24
R2634:2634 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R2638:2640 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R2642:2644 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R2691:2691 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R2641:2641 Coq.FSets.FSetBridge M t defax
binder 2635:2637 <> s'':25
R2656:2658 Coq.FSets.FSetBridge M elt def
binder 2652:2652 <> x:26
R2669:2673 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R2661:2662 Coq.FSets.FSetBridge M In defax
R2666:2668 Coq.FSets.FSetBridge <> s'':25 var
R2664:2664 Coq.FSets.FSetBridge <> x:26 var
R2680:2683 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R2674:2675 Coq.FSets.FSetBridge M In defax
R2679:2679 Coq.FSets.FSetBridge <> s:23 var
R2677:2677 Coq.FSets.FSetBridge <> x:26 var
R2684:2685 Coq.FSets.FSetBridge M In defax
R2689:2690 Coq.FSets.FSetBridge <> s':24 var
R2687:2687 Coq.FSets.FSetBridge <> x:26 var
R2723:2727 Coq.FSets.FSetBridge M inter defax
R2723:2727 Coq.FSets.FSetBridge M inter defax
def 2784:2787 DepOfNodep diff
R2809:2809 Coq.FSets.FSetBridge M t defax
binder 2802:2802 <> s:27
binder 2804:2805 <> s':28
R2812:2812 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R2816:2818 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R2820:2822 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R2871:2871 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R2819:2819 Coq.FSets.FSetBridge M t defax
binder 2813:2815 <> s'':29
R2834:2836 Coq.FSets.FSetBridge M elt def
binder 2830:2830 <> x:30
R2847:2851 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R2839:2840 Coq.FSets.FSetBridge M In defax
R2844:2846 Coq.FSets.FSetBridge <> s'':29 var
R2842:2842 Coq.FSets.FSetBridge <> x:30 var
R2858:2861 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R2852:2853 Coq.FSets.FSetBridge M In defax
R2857:2857 Coq.FSets.FSetBridge <> s:27 var
R2855:2855 Coq.FSets.FSetBridge <> x:30 var
R2862:2863 Coq.Init.Logic <> ::type_scope:'~'_x not
R2864:2865 Coq.FSets.FSetBridge M In defax
R2869:2870 Coq.FSets.FSetBridge <> s':28 var
R2867:2867 Coq.FSets.FSetBridge <> x:30 var
R2903:2906 Coq.FSets.FSetBridge M diff defax
R2903:2906 Coq.FSets.FSetBridge M diff defax
R2954:2955 Coq.FSets.FSetBridge M In defax
R2954:2955 Coq.FSets.FSetBridge M In defax
def 3001:3005 DepOfNodep equal
R3023:3023 Coq.FSets.FSetBridge M t defax
binder 3016:3016 <> s:31
binder 3018:3019 <> s':32
R3026:3026 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3037:3041 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3054:3054 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3027:3031 Coq.FSets.FSetBridge M Equal def
R3035:3036 Coq.FSets.FSetBridge <> s':32 var
R3033:3033 Coq.FSets.FSetBridge <> s:31 var
R3042:3043 Coq.Init.Logic <> ::type_scope:'~'_x not
R3044:3048 Coq.FSets.FSetBridge M Equal def
R3052:3053 Coq.FSets.FSetBridge <> s':32 var
R3050:3050 Coq.FSets.FSetBridge <> s:31 var
R3094:3100 Coq.FSets.FSetBridge M equal_1 defax
R3120:3126 Coq.FSets.FSetBridge M equal_2 defax
R3094:3100 Coq.FSets.FSetBridge M equal_1 defax
R3120:3126 Coq.FSets.FSetBridge M equal_2 defax
R3156:3160 Coq.FSets.FSetBridge M equal defax
R3156:3160 Coq.FSets.FSetBridge M equal defax
def 3201:3206 DepOfNodep subset
R3224:3224 Coq.FSets.FSetBridge M t defax
binder 3217:3217 <> s:33
binder 3219:3220 <> s':34
R3227:3227 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3239:3243 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3256:3256 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R3228:3233 Coq.FSets.FSetBridge M Subset def
R3237:3238 Coq.FSets.FSetBridge <> s':34 var
R3235:3235 Coq.FSets.FSetBridge <> s:33 var
R3244:3244 Coq.Init.Logic <> ::type_scope:'~'_x not
R3245:3250 Coq.FSets.FSetBridge M Subset def
R3254:3255 Coq.FSets.FSetBridge <> s':34 var
R3252:3252 Coq.FSets.FSetBridge <> s:33 var
R3296:3303 Coq.FSets.FSetBridge M subset_1 defax
R3323:3330 Coq.FSets.FSetBridge M subset_2 defax
R3296:3303 Coq.FSets.FSetBridge M subset_1 defax
R3323:3330 Coq.FSets.FSetBridge M subset_2 defax
R3360:3365 Coq.FSets.FSetBridge M subset defax
R3360:3365 Coq.FSets.FSetBridge M subset defax
def 3406:3413 DepOfNodep elements
R3432:3432 Coq.FSets.FSetBridge M t defax
binder 3428:3428 <> s:35
R3439:3439 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R3441:3443 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R3452:3454 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R3511:3511 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R3444:3447 Coq.Init.Datatypes <> list ind
R3449:3451 Coq.FSets.FSetBridge M elt def
binder 3440:3440 <> l:36
R3466:3470 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3510:3510 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3455:3458 Coq.Sorting.Sorted <> sort abbrev
R3465:3465 Coq.FSets.FSetBridge <> l:36 var
R3460:3463 Coq.FSets.FSetBridge M.E lt defax
R3482:3484 Coq.FSets.FSetBridge M elt def
binder 3478:3478 <> x:37
R3493:3497 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3487:3488 Coq.FSets.FSetBridge M In defax
R3492:3492 Coq.FSets.FSetBridge <> s:35 var
R3490:3490 Coq.FSets.FSetBridge <> x:37 var
R3498:3500 Coq.Lists.SetoidList <> InA ind
R3509:3509 Coq.FSets.FSetBridge <> l:36 var
R3507:3507 Coq.FSets.FSetBridge <> x:37 var
R3502:3505 Coq.FSets.FSetBridge M.E eq defax
R3545:3552 Coq.FSets.FSetBridge M elements defax
R3545:3552 Coq.FSets.FSetBridge M elements defax
def 3595:3598 DepOfNodep fold
binder 3614:3614 <> A:38
R3632:3635 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3629:3631 Coq.FSets.FSetBridge M elt def
R3637:3640 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3636:3636 Coq.FSets.FSetBridge <> A:38 var
R3641:3641 Coq.FSets.FSetBridge <> A:38 var
binder 3625:3625 <> f:39
R3649:3649 Coq.FSets.FSetBridge M t defax
binder 3645:3645 <> s:40
R3657:3657 Coq.FSets.FSetBridge <> A:38 var
binder 3653:3653 <> i:41
R3665:3665 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R3667:3669 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R3671:3675 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R3757:3757 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R3670:3670 Coq.FSets.FSetBridge <> A:38 var
binder 3666:3666 <> r:42
R3689:3696 Coq.FSets.FSetBridge DepOfNodep elements def
R3698:3698 Coq.FSets.FSetBridge <> s:40 var
binder 3681:3681 <> l:43
R3722:3724 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3721:3721 Coq.FSets.FSetBridge <> r:42 var
R3725:3733 Coq.Lists.List <> fold_left def
R3756:3756 Coq.FSets.FSetBridge <> i:41 var
R3754:3754 Coq.FSets.FSetBridge <> l:43 var
binder 3740:3740 <> a:44
binder 3742:3742 <> e:45
R3747:3747 Coq.FSets.FSetBridge <> f:39 var
R3751:3751 Coq.FSets.FSetBridge <> a:44 var
R3749:3749 Coq.FSets.FSetBridge <> e:45 var
R3787:3790 Coq.FSets.FSetBridge M fold defax
R3814:3819 Coq.FSets.FSetBridge M fold_1 defax
R3787:3790 Coq.FSets.FSetBridge M fold defax
R3814:3819 Coq.FSets.FSetBridge M fold_1 defax
def 3850:3857 DepOfNodep cardinal
R3878:3878 Coq.FSets.FSetBridge M t defax
binder 3874:3874 <> s:46
R3887:3887 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R3889:3891 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R3895:3897 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R3937:3938 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R3892:3894 Coq.Init.Datatypes <> nat ind
binder 3888:3888 <> r:47
R3911:3918 Coq.FSets.FSetBridge DepOfNodep elements def
R3920:3920 Coq.FSets.FSetBridge <> s:46 var
binder 3903:3903 <> l:48
R3926:3928 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3925:3925 Coq.FSets.FSetBridge <> r:47 var
R3929:3934 Coq.Init.Datatypes <> length def
R3936:3936 Coq.FSets.FSetBridge <> l:48 var
R3970:3977 Coq.FSets.FSetBridge M cardinal defax
R3990:3999 Coq.FSets.FSetBridge M cardinal_1 defax
R3970:3977 Coq.FSets.FSetBridge M cardinal defax
R3990:3999 Coq.FSets.FSetBridge M cardinal_1 defax
def 4026:4029 DepOfNodep fdec
R4039:4042 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4036:4038 Coq.FSets.FSetBridge M elt def
binder 4032:4032 <> P:49
R4068:4070 Coq.FSets.FSetBridge M elt def
binder 4064:4064 <> x:50
R4073:4073 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4077:4081 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4087:4087 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4074:4074 Coq.FSets.FSetBridge <> P:49 var
R4076:4076 Coq.FSets.FSetBridge <> x:50 var
R4082:4083 Coq.Init.Logic <> ::type_scope:'~'_x not
R4084:4084 Coq.FSets.FSetBridge <> P:49 var
R4086:4086 Coq.FSets.FSetBridge <> x:50 var
binder 4050:4053 <> Pdec:51
R4099:4101 Coq.FSets.FSetBridge M elt def
binder 4095:4095 <> x:52
R4110:4113 Coq.FSets.FSetBridge <> Pdec:51 var
R4115:4115 Coq.FSets.FSetBridge <> x:52 var
R4132:4136 Coq.Init.Datatypes <> false constr
R4122:4125 Coq.Init.Datatypes <> true constr
prf 4148:4159 DepOfNodep compat_P_aux
R4181:4184 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4178:4180 Coq.FSets.FSetBridge M elt def
binder 4174:4174 <> P:53
R4210:4212 Coq.FSets.FSetBridge M elt def
binder 4206:4206 <> x:54
R4215:4215 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4219:4223 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4229:4229 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4216:4216 Coq.FSets.FSetBridge <> P:53 var
R4218:4218 Coq.FSets.FSetBridge <> x:54 var
R4224:4225 Coq.Init.Logic <> ::type_scope:'~'_x not
R4226:4226 Coq.FSets.FSetBridge <> P:53 var
R4228:4228 Coq.FSets.FSetBridge <> x:54 var
binder 4192:4195 <> Pdec:55
R4251:4254 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4236:4243 Coq.Lists.SetoidList <> compat_P def
R4250:4250 Coq.FSets.FSetBridge <> P:53 var
R4245:4248 Coq.FSets.FSetBridge M.E eq defax
R4255:4265 Coq.Lists.SetoidList <> compat_bool def
R4273:4276 Coq.FSets.FSetBridge DepOfNodep fdec def
R4278:4281 Coq.FSets.FSetBridge <> Pdec:55 var
R4267:4270 Coq.FSets.FSetBridge M.E eq defax
R4305:4312 Coq.Lists.SetoidList <> compat_P def
R4315:4325 Coq.Lists.SetoidList <> compat_bool def
R4328:4333 Coq.Classes.Morphisms <> Proper class
R4336:4345 Coq.Classes.Morphisms <> respectful def
R4348:4351 Coq.FSets.FSetBridge DepOfNodep fdec def
R4378:4385 Coq.FSets.FSetBridge M.E eq_sym prfax
R4378:4385 Coq.FSets.FSetBridge M.E eq_sym prfax
def 4504:4509 DepOfNodep filter
R4532:4535 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4529:4531 Coq.FSets.FSetBridge M elt def
binder 4525:4525 <> P:56
R4561:4563 Coq.FSets.FSetBridge M elt def
binder 4557:4557 <> x:57
R4566:4566 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4570:4574 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4580:4580 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4567:4567 Coq.FSets.FSetBridge <> P:56 var
R4569:4569 Coq.FSets.FSetBridge <> x:57 var
R4575:4576 Coq.Init.Logic <> ::type_scope:'~'_x not
R4577:4577 Coq.FSets.FSetBridge <> P:56 var
R4579:4579 Coq.FSets.FSetBridge <> x:57 var
binder 4543:4546 <> Pdec:58
R4588:4588 Coq.FSets.FSetBridge M t defax
binder 4584:4584 <> s:59
R4596:4596 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R4599:4601 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R4603:4605 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R4666:4666 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R4602:4602 Coq.FSets.FSetBridge M t defax
binder 4597:4598 <> s':60
R4621:4624 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4606:4613 Coq.Lists.SetoidList <> compat_P def
R4620:4620 Coq.FSets.FSetBridge <> P:56 var
R4615:4618 Coq.FSets.FSetBridge M.E eq defax
R4636:4638 Coq.FSets.FSetBridge M elt def
binder 4632:4632 <> x:61
R4648:4652 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R4641:4642 Coq.FSets.FSetBridge M In defax
R4646:4647 Coq.FSets.FSetBridge <> s':60 var
R4644:4644 Coq.FSets.FSetBridge <> x:61 var
R4659:4662 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4653:4654 Coq.FSets.FSetBridge M In defax
R4658:4658 Coq.FSets.FSetBridge <> s:59 var
R4656:4656 Coq.FSets.FSetBridge <> x:61 var
R4663:4663 Coq.FSets.FSetBridge <> P:56 var
R4665:4665 Coq.FSets.FSetBridge <> x:61 var
R4702:4707 Coq.FSets.FSetBridge M filter defax
R4710:4713 Coq.FSets.FSetBridge DepOfNodep fdec def
R4702:4707 Coq.FSets.FSetBridge M filter defax
R4710:4713 Coq.FSets.FSetBridge DepOfNodep fdec def
R4746:4756 Coq.Lists.SetoidList <> compat_bool def
R4764:4767 Coq.FSets.FSetBridge DepOfNodep fdec def
R4758:4761 Coq.FSets.FSetBridge M.E eq defax
R4746:4756 Coq.Lists.SetoidList <> compat_bool def
R4764:4767 Coq.FSets.FSetBridge DepOfNodep fdec def
R4758:4761 Coq.FSets.FSetBridge M.E eq defax
R4834:4841 Coq.FSets.FSetBridge M filter_2 defax
R4834:4841 Coq.FSets.FSetBridge M filter_2 defax
R4862:4865 Coq.FSets.FSetBridge DepOfNodep fdec def
R4926:4933 Coq.FSets.FSetBridge M filter_3 defax
R4926:4933 Coq.FSets.FSetBridge M filter_3 defax
R4953:4956 Coq.FSets.FSetBridge DepOfNodep fdec def
def 5017:5023 DepOfNodep for_all
R5046:5049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5043:5045 Coq.FSets.FSetBridge M elt def
binder 5039:5039 <> P:62
R5075:5077 Coq.FSets.FSetBridge M elt def
binder 5071:5071 <> x:63
R5080:5080 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5084:5088 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5094:5094 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5081:5081 Coq.FSets.FSetBridge <> P:62 var
R5083:5083 Coq.FSets.FSetBridge <> x:63 var
R5089:5090 Coq.Init.Logic <> ::type_scope:'~'_x not
R5091:5091 Coq.FSets.FSetBridge <> P:62 var
R5093:5093 Coq.FSets.FSetBridge <> x:63 var
binder 5057:5060 <> Pdec:64
R5102:5102 Coq.FSets.FSetBridge M t defax
binder 5098:5098 <> s:65
R5110:5110 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5141:5145 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5178:5178 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5126:5129 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5111:5118 Coq.Lists.SetoidList <> compat_P def
R5125:5125 Coq.FSets.FSetBridge <> P:62 var
R5120:5123 Coq.FSets.FSetBridge M.E eq defax
R5130:5136 Coq.FSets.FSetBridge M For_all def
R5140:5140 Coq.FSets.FSetBridge <> s:65 var
R5138:5138 Coq.FSets.FSetBridge <> P:62 var
R5161:5164 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5146:5153 Coq.Lists.SetoidList <> compat_P def
R5160:5160 Coq.FSets.FSetBridge <> P:62 var
R5155:5158 Coq.FSets.FSetBridge M.E eq defax
R5165:5166 Coq.Init.Logic <> ::type_scope:'~'_x not
R5167:5173 Coq.FSets.FSetBridge M For_all def
R5177:5177 Coq.FSets.FSetBridge <> s:65 var
R5175:5175 Coq.FSets.FSetBridge <> P:62 var
R5218:5226 Coq.FSets.FSetBridge M for_all_1 defax
R5239:5242 Coq.FSets.FSetBridge DepOfNodep fdec def
R5257:5265 Coq.FSets.FSetBridge M for_all_2 defax
R5278:5281 Coq.FSets.FSetBridge DepOfNodep fdec def
R5218:5226 Coq.FSets.FSetBridge M for_all_1 defax
R5239:5242 Coq.FSets.FSetBridge DepOfNodep fdec def
R5257:5265 Coq.FSets.FSetBridge M for_all_2 defax
R5278:5281 Coq.FSets.FSetBridge DepOfNodep fdec def
R5301:5307 Coq.FSets.FSetBridge M for_all defax
R5310:5313 Coq.FSets.FSetBridge DepOfNodep fdec def
R5332:5338 Coq.FSets.FSetBridge M For_all def
R5301:5307 Coq.FSets.FSetBridge M for_all defax
R5310:5313 Coq.FSets.FSetBridge DepOfNodep fdec def
R5384:5394 Coq.Lists.SetoidList <> compat_bool def
R5402:5405 Coq.FSets.FSetBridge DepOfNodep fdec def
R5396:5399 Coq.FSets.FSetBridge M.E eq defax
R5384:5394 Coq.Lists.SetoidList <> compat_bool def
R5402:5405 Coq.FSets.FSetBridge DepOfNodep fdec def
R5396:5399 Coq.FSets.FSetBridge M.E eq defax
R5443:5455 Coq.Init.Logic <> eq_refl constr
R5443:5455 Coq.Init.Logic <> eq_refl constr
R5475:5478 Coq.FSets.FSetBridge DepOfNodep fdec def
R5561:5563 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5556:5560 Coq.Init.Datatypes <> false constr
R5564:5567 Coq.Init.Datatypes <> true constr
R5561:5563 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5556:5560 Coq.Init.Datatypes <> false constr
R5564:5567 Coq.Init.Datatypes <> true constr
R5629:5632 Coq.FSets.FSetBridge DepOfNodep fdec def
def 5686:5692 DepOfNodep exists_
R5715:5718 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5712:5714 Coq.FSets.FSetBridge M elt def
binder 5708:5708 <> P:66
R5744:5746 Coq.FSets.FSetBridge M elt def
binder 5740:5740 <> x:67
R5749:5749 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5753:5757 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5763:5763 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5750:5750 Coq.FSets.FSetBridge <> P:66 var
R5752:5752 Coq.FSets.FSetBridge <> x:67 var
R5758:5759 Coq.Init.Logic <> ::type_scope:'~'_x not
R5760:5760 Coq.FSets.FSetBridge <> P:66 var
R5762:5762 Coq.FSets.FSetBridge <> x:67 var
binder 5726:5729 <> Pdec:68
R5771:5771 Coq.FSets.FSetBridge M t defax
binder 5767:5767 <> s:69
R5779:5779 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5809:5813 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5845:5845 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5795:5798 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5780:5787 Coq.Lists.SetoidList <> compat_P def
R5794:5794 Coq.FSets.FSetBridge <> P:66 var
R5789:5792 Coq.FSets.FSetBridge M.E eq defax
R5799:5804 Coq.FSets.FSetBridge M Exists def
R5808:5808 Coq.FSets.FSetBridge <> s:69 var
R5806:5806 Coq.FSets.FSetBridge <> P:66 var
R5829:5832 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5814:5821 Coq.Lists.SetoidList <> compat_P def
R5828:5828 Coq.FSets.FSetBridge <> P:66 var
R5823:5826 Coq.FSets.FSetBridge M.E eq defax
R5833:5834 Coq.Init.Logic <> ::type_scope:'~'_x not
R5835:5840 Coq.FSets.FSetBridge M Exists def
R5844:5844 Coq.FSets.FSetBridge <> s:69 var
R5842:5842 Coq.FSets.FSetBridge <> P:66 var
R5885:5892 Coq.FSets.FSetBridge M exists_1 defax
R5905:5908 Coq.FSets.FSetBridge DepOfNodep fdec def
R5923:5930 Coq.FSets.FSetBridge M exists_2 defax
R5943:5946 Coq.FSets.FSetBridge DepOfNodep fdec def
R5885:5892 Coq.FSets.FSetBridge M exists_1 defax
R5905:5908 Coq.FSets.FSetBridge DepOfNodep fdec def
R5923:5930 Coq.FSets.FSetBridge M exists_2 defax
R5943:5946 Coq.FSets.FSetBridge DepOfNodep fdec def
R5966:5972 Coq.FSets.FSetBridge M exists_ defax
R5975:5978 Coq.FSets.FSetBridge DepOfNodep fdec def
R5997:6002 Coq.FSets.FSetBridge M Exists def
R5966:5972 Coq.FSets.FSetBridge M exists_ defax
R5975:5978 Coq.FSets.FSetBridge DepOfNodep fdec def
R6118:6121 Coq.FSets.FSetBridge DepOfNodep fdec def
R6225:6227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6220:6224 Coq.Init.Datatypes <> false constr
R6228:6231 Coq.Init.Datatypes <> true constr
R6225:6227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6220:6224 Coq.Init.Datatypes <> false constr
R6228:6231 Coq.Init.Datatypes <> true constr
R6307:6310 Coq.FSets.FSetBridge DepOfNodep fdec def
def 6364:6372 DepOfNodep partition
R6395:6398 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6392:6394 Coq.FSets.FSetBridge M elt def
binder 6388:6388 <> P:70
R6424:6426 Coq.FSets.FSetBridge M elt def
binder 6420:6420 <> x:71
R6429:6429 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6433:6437 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6443:6443 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6430:6430 Coq.FSets.FSetBridge <> P:70 var
R6432:6432 Coq.FSets.FSetBridge <> x:71 var
R6438:6439 Coq.Init.Logic <> ::type_scope:'~'_x not
R6440:6440 Coq.FSets.FSetBridge <> P:70 var
R6442:6442 Coq.FSets.FSetBridge <> x:71 var
binder 6406:6409 <> Pdec:72
R6451:6451 Coq.FSets.FSetBridge M t defax
binder 6447:6447 <> s:73
R6459:6459 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R6469:6471 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R6477:6483 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R6642:6642 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R6473:6475 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6472:6472 Coq.FSets.FSetBridge M t defax
R6476:6476 Coq.FSets.FSetBridge M t defax
binder 6460:6468 <> partition:74
R6500:6508 Coq.FSets.FSetBridge <> partition:74 var
binder 6489:6490 <> s1:75
binder 6493:6494 <> s2:76
R6532:6539 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6517:6524 Coq.Lists.SetoidList <> compat_P def
R6531:6531 Coq.FSets.FSetBridge <> P:70 var
R6526:6529 Coq.FSets.FSetBridge M.E eq defax
R6552:6559 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6540:6546 Coq.FSets.FSetBridge M For_all def
R6550:6551 Coq.FSets.FSetBridge <> s1:75 var
R6548:6548 Coq.FSets.FSetBridge <> P:70 var
R6587:6595 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6641:6641 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6560:6566 Coq.FSets.FSetBridge M For_all def
R6585:6586 Coq.FSets.FSetBridge <> s2:76 var
binder 6573:6573 <> x:77
R6578:6579 Coq.Init.Logic <> ::type_scope:'~'_x not
R6580:6580 Coq.FSets.FSetBridge <> P:70 var
R6582:6582 Coq.FSets.FSetBridge <> x:77 var
R6607:6609 Coq.FSets.FSetBridge M elt def
binder 6603:6603 <> x:78
R6618:6622 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6612:6613 Coq.FSets.FSetBridge M In defax
R6617:6617 Coq.FSets.FSetBridge <> s:73 var
R6615:6615 Coq.FSets.FSetBridge <> x:78 var
R6630:6633 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R6623:6624 Coq.FSets.FSetBridge M In defax
R6628:6629 Coq.FSets.FSetBridge <> s1:75 var
R6626:6626 Coq.FSets.FSetBridge <> x:78 var
R6634:6635 Coq.FSets.FSetBridge M In defax
R6639:6640 Coq.FSets.FSetBridge <> s2:76 var
R6637:6637 Coq.FSets.FSetBridge <> x:78 var
R6678:6686 Coq.FSets.FSetBridge M partition defax
R6689:6692 Coq.FSets.FSetBridge DepOfNodep fdec def
R6678:6686 Coq.FSets.FSetBridge M partition defax
R6689:6692 Coq.FSets.FSetBridge DepOfNodep fdec def
R6720:6730 Coq.FSets.FSetBridge M partition_1 defax
R6738:6741 Coq.FSets.FSetBridge DepOfNodep fdec def
R6751:6761 Coq.FSets.FSetBridge M partition_2 defax
R6769:6772 Coq.FSets.FSetBridge DepOfNodep fdec def
R6720:6730 Coq.FSets.FSetBridge M partition_1 defax
R6738:6741 Coq.FSets.FSetBridge DepOfNodep fdec def
R6751:6761 Coq.FSets.FSetBridge M partition_2 defax
R6769:6772 Coq.FSets.FSetBridge DepOfNodep fdec def
R6792:6800 Coq.FSets.FSetBridge M partition defax
R6803:6806 Coq.FSets.FSetBridge DepOfNodep fdec def
R6792:6800 Coq.FSets.FSetBridge M partition defax
R6803:6806 Coq.FSets.FSetBridge DepOfNodep fdec def
R6863:6873 Coq.Lists.SetoidList <> compat_bool def
R6881:6884 Coq.FSets.FSetBridge DepOfNodep fdec def
R6875:6878 Coq.FSets.FSetBridge M.E eq defax
R6863:6873 Coq.Lists.SetoidList <> compat_bool def
R6881:6884 Coq.FSets.FSetBridge DepOfNodep fdec def
R6875:6878 Coq.FSets.FSetBridge M.E eq defax
R6920:6930 Coq.Lists.SetoidList <> compat_bool def
binder 6942:6942 <> x:79
R6947:6950 Coq.Init.Datatypes <> negb def
R6953:6956 Coq.FSets.FSetBridge DepOfNodep fdec def
R6963:6963 Coq.FSets.FSetBridge <> x:79 var
R6932:6935 Coq.FSets.FSetBridge M.E eq defax
R6920:6930 Coq.Lists.SetoidList <> compat_bool def
binder 6942:6942 <> x:80
R6947:6950 Coq.Init.Datatypes <> negb def
R6953:6956 Coq.FSets.FSetBridge DepOfNodep fdec def
R6963:6963 Coq.FSets.FSetBridge <> x:80 var
R6932:6935 Coq.FSets.FSetBridge M.E eq defax
R6995:7005 Coq.Lists.SetoidList <> compat_bool def
R7008:7013 Coq.Classes.Morphisms <> Proper class
R7016:7025 Coq.Classes.Morphisms <> respectful def
R7051:7057 Coq.Init.Logic <> f_equal thm
R7059:7062 Coq.Init.Datatypes <> negb def
R7051:7057 Coq.Init.Logic <> f_equal thm
R7059:7062 Coq.Init.Datatypes <> negb def
R7113:7119 Coq.FSets.FSetBridge M For_all def
R7122:7126 Coq.FSets.FSetBridge M Equal def
R7188:7190 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7177:7180 Coq.FSets.FSetBridge DepOfNodep fdec def
R7191:7194 Coq.Init.Datatypes <> true constr
R7188:7190 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7177:7180 Coq.FSets.FSetBridge DepOfNodep fdec def
R7191:7194 Coq.Init.Datatypes <> true constr
R7210:7217 Coq.FSets.FSetBridge M filter_2 defax
R7210:7217 Coq.FSets.FSetBridge M filter_2 defax
R7262:7265 Coq.FSets.FSetBridge DepOfNodep fdec def
R7337:7343 Coq.FSets.FSetBridge M For_all def
R7346:7350 Coq.FSets.FSetBridge M Equal def
R7429:7431 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 7403:7403 <> x:81
R7408:7411 Coq.Init.Datatypes <> negb def
R7414:7417 Coq.FSets.FSetBridge DepOfNodep fdec def
R7424:7424 Coq.FSets.FSetBridge <> x:81 var
R7432:7435 Coq.Init.Datatypes <> true constr
R7429:7431 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 7403:7403 <> x:82
R7408:7411 Coq.Init.Datatypes <> negb def
R7414:7417 Coq.FSets.FSetBridge DepOfNodep fdec def
R7424:7424 Coq.FSets.FSetBridge <> x:82 var
R7432:7435 Coq.Init.Datatypes <> true constr
R7450:7453 Coq.FSets.FSetBridge DepOfNodep fdec def
R7527:7529 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 7501:7501 <> x:83
R7506:7509 Coq.Init.Datatypes <> negb def
R7512:7515 Coq.FSets.FSetBridge DepOfNodep fdec def
R7522:7522 Coq.FSets.FSetBridge <> x:83 var
R7530:7533 Coq.Init.Datatypes <> true constr
R7527:7529 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 7501:7501 <> x:84
R7506:7509 Coq.Init.Datatypes <> negb def
R7512:7515 Coq.FSets.FSetBridge DepOfNodep fdec def
R7522:7522 Coq.FSets.FSetBridge <> x:84 var
R7530:7533 Coq.Init.Datatypes <> true constr
R7550:7557 Coq.FSets.FSetBridge M filter_2 defax
R7550:7557 Coq.FSets.FSetBridge M filter_2 defax
R7595:7598 Coq.FSets.FSetBridge DepOfNodep fdec def
R7626:7638 Coq.Init.Logic <> eq_refl constr
R7595:7598 Coq.FSets.FSetBridge DepOfNodep fdec def
R7626:7638 Coq.Init.Logic <> eq_refl constr
R7822:7829 Coq.FSets.FSetBridge M filter_3 defax
R7822:7829 Coq.FSets.FSetBridge M filter_3 defax
R7872:7879 Coq.FSets.FSetBridge M filter_1 defax
R7872:7879 Coq.FSets.FSetBridge M filter_1 defax
R7957:7964 Coq.FSets.FSetBridge M filter_1 defax
R7957:7964 Coq.FSets.FSetBridge M filter_1 defax
def 8045:8054 DepOfNodep choose_aux
R8068:8068 Coq.FSets.FSetBridge M t defax
binder 8064:8064 <> s:85
R8108:8112 Coq.Init.Specif <> ::type_scope:x_'+'_'{'_x_'}' not
R8130:8131 Coq.Init.Specif <> ::type_scope:x_'+'_'{'_x_'}' not
R8075:8076 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8078:8080 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8084:8086 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8106:8107 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8081:8083 Coq.FSets.FSetBridge M elt def
binder 8077:8077 <> x:86
R8097:8099 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8087:8094 Coq.FSets.FSetBridge M choose defax
R8096:8096 Coq.FSets.FSetBridge <> s:85 var
R8100:8103 Coq.Init.Datatypes <> Some constr
R8105:8105 Coq.FSets.FSetBridge <> x:86 var
R8123:8125 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8113:8120 Coq.FSets.FSetBridge M choose defax
R8122:8122 Coq.FSets.FSetBridge <> s:85 var
R8126:8129 Coq.Init.Datatypes <> None constr
R8167:8174 Coq.FSets.FSetBridge M choose defax
R8167:8174 Coq.FSets.FSetBridge M choose defax
def 8242:8247 DepOfNodep choose
R8262:8262 Coq.FSets.FSetBridge M t defax
binder 8258:8258 <> s:87
R8283:8286 Coq.Init.Specif <> ::type_scope:x_'+'_'{'_x_'}' not
R8294:8294 Coq.Init.Specif <> ::type_scope:x_'+'_'{'_x_'}' not
R8265:8265 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8267:8269 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8273:8275 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8282:8282 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8270:8272 Coq.FSets.FSetBridge M elt def
binder 8266:8266 <> x:88
R8276:8277 Coq.FSets.FSetBridge M In defax
R8281:8281 Coq.FSets.FSetBridge <> s:87 var
R8279:8279 Coq.FSets.FSetBridge <> x:88 var
R8287:8291 Coq.FSets.FSetBridge M Empty def
R8293:8293 Coq.FSets.FSetBridge <> s:87 var
R8327:8336 Coq.FSets.FSetBridge DepOfNodep choose_aux def
R8327:8336 Coq.FSets.FSetBridge DepOfNodep choose_aux def
R8381:8388 Coq.FSets.FSetBridge M choose_1 defax
R8381:8388 Coq.FSets.FSetBridge M choose_1 defax
R8413:8420 Coq.FSets.FSetBridge M choose_2 defax
R8413:8420 Coq.FSets.FSetBridge M choose_2 defax
prf 8449:8458 DepOfNodep choose_ok1
binder 8472:8472 <> s:89
binder 8474:8474 <> x:90
R8496:8500 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8487:8489 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8477:8484 Coq.FSets.FSetBridge M choose defax
R8486:8486 Coq.FSets.FSetBridge <> s:89 var
R8490:8493 Coq.Init.Datatypes <> Some constr
R8495:8495 Coq.FSets.FSetBridge <> x:90 var
R8501:8507 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R8516:8523 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R8510:8511 Coq.FSets.FSetBridge M In defax
R8515:8515 Coq.FSets.FSetBridge <> s:89 var
R8513:8513 Coq.FSets.FSetBridge <> x:90 var
binder 8508:8508 <> H:91
R8532:8534 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8524:8529 Coq.FSets.FSetBridge DepOfNodep choose def
R8531:8531 Coq.FSets.FSetBridge <> s:89 var
R8535:8540 Coq.Init.Specif <> inleft constr
R8545:8549 Coq.Init.Specif <> exist constr
R8571:8571 Coq.FSets.FSetBridge <> H:91 var
R8569:8569 Coq.FSets.FSetBridge <> x:90 var
binder 8556:8556 <> x:92
R8561:8562 Coq.FSets.FSetBridge M In defax
R8566:8566 Coq.FSets.FSetBridge <> s:89 var
R8564:8564 Coq.FSets.FSetBridge <> x:92 var
R8611:8616 Coq.FSets.FSetBridge DepOfNodep choose def
R8648:8657 Coq.FSets.FSetBridge DepOfNodep choose_aux def
R8648:8657 Coq.FSets.FSetBridge DepOfNodep choose_aux def
R8747:8754 Coq.FSets.FSetBridge M choose_1 defax
R8747:8754 Coq.FSets.FSetBridge M choose_1 defax
R8797:8806 Coq.FSets.FSetBridge DepOfNodep choose_aux def
R8797:8806 Coq.FSets.FSetBridge DepOfNodep choose_aux def
prf 8855:8864 DepOfNodep choose_ok2
binder 8878:8878 <> s:93
R8898:8902 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8891:8893 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8881:8888 Coq.FSets.FSetBridge M choose defax
R8890:8890 Coq.FSets.FSetBridge <> s:93 var
R8894:8897 Coq.Init.Datatypes <> None constr
R8903:8909 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R8919:8926 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R8912:8916 Coq.FSets.FSetBridge M Empty def
R8918:8918 Coq.FSets.FSetBridge <> s:93 var
binder 8910:8910 <> H:94
R8935:8937 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8927:8932 Coq.FSets.FSetBridge DepOfNodep choose def
R8934:8934 Coq.FSets.FSetBridge <> s:93 var
R8938:8944 Coq.Init.Specif <> inright constr
R8948:8948 Coq.FSets.FSetBridge <> H:94 var
R8985:8990 Coq.FSets.FSetBridge DepOfNodep choose def
R9022:9031 Coq.FSets.FSetBridge DepOfNodep choose_aux def
R9022:9031 Coq.FSets.FSetBridge DepOfNodep choose_aux def
R9080:9087 Coq.FSets.FSetBridge M choose_2 defax
R9080:9087 Coq.FSets.FSetBridge M choose_2 defax
R9130:9139 Coq.FSets.FSetBridge DepOfNodep choose_aux def
R9130:9139 Coq.FSets.FSetBridge DepOfNodep choose_aux def
prf 9188:9199 DepOfNodep choose_equal
binder 9210:9210 <> s:95
binder 9212:9213 <> s':96
R9226:9234 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9216:9220 Coq.FSets.FSetBridge M Equal def
R9224:9225 Coq.FSets.FSetBridge <> s':96 var
R9222:9222 Coq.FSets.FSetBridge <> s:95 var
R9251:9256 Coq.FSets.FSetBridge DepOfNodep choose def
R9258:9259 Coq.FSets.FSetBridge <> s':96 var
R9241:9246 Coq.FSets.FSetBridge DepOfNodep choose def
R9248:9248 Coq.FSets.FSetBridge <> s:95 var
R9275:9280 Coq.Init.Specif <> inleft constr
R9283:9287 Coq.Init.Specif <> exist constr
R9297:9302 Coq.Init.Specif <> inleft constr
R9305:9309 Coq.Init.Specif <> exist constr
R9322:9325 Coq.FSets.FSetBridge M.E eq defax
R9341:9347 Coq.Init.Specif <> inright constr
R9352:9358 Coq.Init.Specif <> inright constr
R9366:9369 Coq.Init.Logic <> True ind
R9411:9415 Coq.Init.Logic <> False ind
R9463:9472 Coq.FSets.FSetBridge M choose_1 defax
R9478:9487 Coq.FSets.FSetBridge M choose_2 defax
R9508:9517 Coq.FSets.FSetBridge M choose_1 defax
R9524:9533 Coq.FSets.FSetBridge M choose_2 defax
R9540:9549 Coq.FSets.FSetBridge M choose_3 defax
R9572:9581 Coq.FSets.FSetBridge DepOfNodep choose_ok1 thm
R9586:9595 Coq.FSets.FSetBridge DepOfNodep choose_ok2 thm
R9600:9609 Coq.FSets.FSetBridge DepOfNodep choose_ok1 thm
R9615:9624 Coq.FSets.FSetBridge DepOfNodep choose_ok2 thm
R9463:9472 Coq.FSets.FSetBridge M choose_1 defax
R9478:9487 Coq.FSets.FSetBridge M choose_2 defax
R9508:9517 Coq.FSets.FSetBridge M choose_1 defax
R9524:9533 Coq.FSets.FSetBridge M choose_2 defax
R9540:9549 Coq.FSets.FSetBridge M choose_3 defax
R9572:9581 Coq.FSets.FSetBridge DepOfNodep choose_ok1 thm
R9586:9595 Coq.FSets.FSetBridge DepOfNodep choose_ok2 thm
R9600:9609 Coq.FSets.FSetBridge DepOfNodep choose_ok1 thm
R9615:9624 Coq.FSets.FSetBridge DepOfNodep choose_ok2 thm
R9644:9649 Coq.FSets.FSetBridge DepOfNodep choose def
R9680:9685 Coq.FSets.FSetBridge DepOfNodep choose def
R9644:9649 Coq.FSets.FSetBridge DepOfNodep choose def
R9680:9685 Coq.FSets.FSetBridge DepOfNodep choose def
R9680:9685 Coq.FSets.FSetBridge DepOfNodep choose def
R9836:9840 Coq.FSets.FSetBridge M Equal def
R9895:9899 Coq.FSets.FSetBridge M Equal def
def 9945:9951 DepOfNodep min_elt
R9970:9970 Coq.FSets.FSetBridge M t defax
binder 9966:9966 <> s:97
R10030:10033 Coq.Init.Specif <> ::type_scope:x_'+'_'{'_x_'}' not
R10041:10041 Coq.Init.Specif <> ::type_scope:x_'+'_'{'_x_'}' not
R9977:9977 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R9979:9981 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R9985:9987 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R10029:10029 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R9982:9984 Coq.FSets.FSetBridge M elt def
binder 9978:9978 <> x:98
R9994:9997 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R9988:9989 Coq.FSets.FSetBridge M In defax
R9993:9993 Coq.FSets.FSetBridge <> s:97 var
R9991:9991 Coq.FSets.FSetBridge <> x:98 var
R9998:10004 Coq.FSets.FSetBridge M For_all def
R10028:10028 Coq.FSets.FSetBridge <> s:97 var
binder 10011:10011 <> y:99
R10016:10017 Coq.Init.Logic <> ::type_scope:'~'_x not
R10018:10021 Coq.FSets.FSetBridge M.E lt defax
R10025:10025 Coq.FSets.FSetBridge <> x:98 var
R10023:10023 Coq.FSets.FSetBridge <> y:99 var
R10034:10038 Coq.FSets.FSetBridge M Empty def
R10040:10040 Coq.FSets.FSetBridge <> s:97 var
R10082:10090 Coq.FSets.FSetBridge M min_elt_1 defax
R10101:10109 Coq.FSets.FSetBridge M min_elt_2 defax
R10120:10128 Coq.FSets.FSetBridge M min_elt_3 defax
R10082:10090 Coq.FSets.FSetBridge M min_elt_1 defax
R10101:10109 Coq.FSets.FSetBridge M min_elt_2 defax
R10120:10128 Coq.FSets.FSetBridge M min_elt_3 defax
R10149:10155 Coq.FSets.FSetBridge M min_elt defax
R10149:10155 Coq.FSets.FSetBridge M min_elt defax
R10206:10212 Coq.FSets.FSetBridge M For_all def
def 10243:10249 DepOfNodep max_elt
R10268:10268 Coq.FSets.FSetBridge M t defax
binder 10264:10264 <> s:100
R10328:10331 Coq.Init.Specif <> ::type_scope:x_'+'_'{'_x_'}' not
R10339:10339 Coq.Init.Specif <> ::type_scope:x_'+'_'{'_x_'}' not
R10275:10275 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R10277:10279 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R10283:10285 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R10327:10327 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R10280:10282 Coq.FSets.FSetBridge M elt def
binder 10276:10276 <> x:101
R10292:10295 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R10286:10287 Coq.FSets.FSetBridge M In defax
R10291:10291 Coq.FSets.FSetBridge <> s:100 var
R10289:10289 Coq.FSets.FSetBridge <> x:101 var
R10296:10302 Coq.FSets.FSetBridge M For_all def
R10326:10326 Coq.FSets.FSetBridge <> s:100 var
binder 10309:10309 <> y:102
R10314:10315 Coq.Init.Logic <> ::type_scope:'~'_x not
R10316:10319 Coq.FSets.FSetBridge M.E lt defax
R10323:10323 Coq.FSets.FSetBridge <> y:102 var
R10321:10321 Coq.FSets.FSetBridge <> x:101 var
R10332:10336 Coq.FSets.FSetBridge M Empty def
R10338:10338 Coq.FSets.FSetBridge <> s:100 var
R10380:10388 Coq.FSets.FSetBridge M max_elt_1 defax
R10399:10407 Coq.FSets.FSetBridge M max_elt_2 defax
R10418:10426 Coq.FSets.FSetBridge M max_elt_3 defax
R10380:10388 Coq.FSets.FSetBridge M max_elt_1 defax
R10399:10407 Coq.FSets.FSetBridge M max_elt_2 defax
R10418:10426 Coq.FSets.FSetBridge M max_elt_3 defax
R10447:10453 Coq.FSets.FSetBridge M max_elt defax
R10447:10453 Coq.FSets.FSetBridge M max_elt defax
R10504:10510 Coq.FSets.FSetBridge M For_all def
def 10541:10543 DepOfNodep elt
R10548:10550 Coq.FSets.FSetBridge M elt def
def 10566:10566 DepOfNodep t
R10571:10571 Coq.FSets.FSetBridge M t defax
def 10588:10589 DepOfNodep In
R10594:10595 Coq.FSets.FSetBridge M In defax
def 10611:10615 DepOfNodep Equal
binder 10617:10617 <> s:103
binder 10619:10620 <> s':104
R10636:10638 Coq.FSets.FSetBridge DepOfNodep elt def
binder 10632:10632 <> a:105
R10647:10651 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R10641:10642 Coq.FSets.FSetBridge DepOfNodep In def
R10646:10646 Coq.FSets.FSetBridge <> s:103 var
R10644:10644 Coq.FSets.FSetBridge <> a:105 var
R10652:10653 Coq.FSets.FSetBridge DepOfNodep In def
R10657:10658 Coq.FSets.FSetBridge <> s':104 var
R10655:10655 Coq.FSets.FSetBridge <> a:105 var
def 10674:10679 DepOfNodep Subset
binder 10681:10681 <> s:106
binder 10683:10684 <> s':107
R10700:10702 Coq.FSets.FSetBridge DepOfNodep elt def
binder 10696:10696 <> a:108
R10711:10714 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10705:10706 Coq.FSets.FSetBridge DepOfNodep In def
R10710:10710 Coq.FSets.FSetBridge <> s:106 var
R10708:10708 Coq.FSets.FSetBridge <> a:108 var
R10715:10716 Coq.FSets.FSetBridge DepOfNodep In def
R10720:10721 Coq.FSets.FSetBridge <> s':107 var
R10718:10718 Coq.FSets.FSetBridge <> a:108 var
def 10737:10741 DepOfNodep Empty
binder 10743:10743 <> s:109
R10759:10761 Coq.FSets.FSetBridge DepOfNodep elt def
binder 10755:10755 <> a:110
R10764:10765 Coq.Init.Logic <> ::type_scope:'~'_x not
R10766:10767 Coq.FSets.FSetBridge DepOfNodep In def
R10771:10771 Coq.FSets.FSetBridge <> s:109 var
R10769:10769 Coq.FSets.FSetBridge <> a:110 var
def 10787:10793 DepOfNodep For_all
R10803:10806 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10800:10802 Coq.FSets.FSetBridge DepOfNodep elt def
binder 10796:10796 <> P:111
R10818:10818 Coq.FSets.FSetBridge DepOfNodep t def
binder 10814:10814 <> s:112
R10839:10841 Coq.FSets.FSetBridge DepOfNodep elt def
binder 10835:10835 <> x:113
R10850:10853 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10844:10845 Coq.FSets.FSetBridge DepOfNodep In def
R10849:10849 Coq.FSets.FSetBridge <> s:112 var
R10847:10847 Coq.FSets.FSetBridge <> x:113 var
R10854:10854 Coq.FSets.FSetBridge <> P:111 var
R10856:10856 Coq.FSets.FSetBridge <> x:113 var
def 10872:10877 DepOfNodep Exists
R10887:10890 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10884:10886 Coq.FSets.FSetBridge DepOfNodep elt def
binder 10880:10880 <> P:114
R10902:10902 Coq.FSets.FSetBridge DepOfNodep t def
binder 10898:10898 <> s:115
R10912:10918 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R10926:10927 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R10923:10925 Coq.FSets.FSetBridge DepOfNodep elt def
binder 10919:10919 <> x:116
R10934:10937 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R10928:10929 Coq.FSets.FSetBridge DepOfNodep In def
R10933:10933 Coq.FSets.FSetBridge <> s:115 var
R10931:10931 Coq.FSets.FSetBridge <> x:116 var
R10938:10938 Coq.FSets.FSetBridge <> P:114 var
R10940:10940 Coq.FSets.FSetBridge <> x:116 var
def 10957:10961 DepOfNodep eq_In
R10966:10969 Coq.FSets.FSetBridge M In_1 defax
def 10986:10987 DepOfNodep eq
R10992:10996 Coq.FSets.FSetBridge DepOfNodep Equal def
def 11012:11013 DepOfNodep lt
R11018:11019 Coq.FSets.FSetBridge M lt defax
def 11035:11041 DepOfNodep eq_refl
R11046:11052 Coq.FSets.FSetBridge M eq_refl defax
def 11068:11073 DepOfNodep eq_sym
R11078:11083 Coq.FSets.FSetBridge M eq_sym defax
def 11099:11106 DepOfNodep eq_trans
R11111:11118 Coq.FSets.FSetBridge M eq_trans defax
def 11134:11141 DepOfNodep lt_trans
R11146:11153 Coq.FSets.FSetBridge M lt_trans defax
def 11169:11177 DepOfNodep lt_not_eq
R11182:11190 Coq.FSets.FSetBridge M lt_not_eq defax
def 11206:11212 DepOfNodep compare
R11217:11223 Coq.FSets.FSetBridge M compare defax
R11241:11241 Coq.FSets.FSetBridge M.E <> modtype
mod 11236:11236 <> DepOfNodep.E
R11249:11258 Coq.FSets.FSetBridge DepOfNodep <> mod
R11359:11362 Coq.FSets.FSetInterface Sdep <> mod
R11368:11368 Coq.FSets.FSetInterface S <> mod
R11387:11389 Coq.FSets.FSetBridge M.E <> modtype
mod 11344:11353 <> NodepOfDep
R11401:11401 Coq.FSets.FSetBridge M <> mod
R11420:11435 Coq.Structures.OrderedType OrderedTypeFacts <> modtype
R11437:11437 Coq.FSets.FSetBridge M.E <> modtype
mod 11414:11415 <> NodepOfDep.ME
def 11454:11458 NodepOfDep empty
R11462:11462 Coq.FSets.FSetBridge M t defax
R11481:11485 Coq.FSets.FSetBridge M empty defax
binder 11472:11472 <> s:117
R11490:11490 Coq.FSets.FSetBridge <> s:117 var
prf 11502:11508 NodepOfDep empty_1
R11512:11516 Coq.FSets.FSetBridge M Empty def
R11518:11522 Coq.FSets.FSetBridge NodepOfDep empty def
R11545:11549 Coq.FSets.FSetBridge NodepOfDep empty def
R11557:11563 Coq.FSets.FSetBridge M empty defax
R11557:11563 Coq.FSets.FSetBridge M empty defax
def 11593:11600 NodepOfDep is_empty
R11607:11607 Coq.FSets.FSetBridge M t defax
binder 11603:11603 <> s:118
R11612:11615 Coq.Init.Datatypes <> bool ind
R11627:11634 Coq.FSets.FSetBridge M is_empty defax
R11636:11636 Coq.FSets.FSetBridge <> s:118 var
R11653:11657 Coq.Init.Datatypes <> false constr
R11643:11646 Coq.Init.Datatypes <> true constr
prf 11669:11678 NodepOfDep is_empty_1
R11693:11693 Coq.FSets.FSetBridge M t defax
binder 11689:11689 <> s:119
R11703:11706 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11696:11700 Coq.FSets.FSetBridge M Empty def
R11702:11702 Coq.FSets.FSetBridge <> s:119 var
R11717:11719 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11707:11714 Coq.FSets.FSetBridge NodepOfDep is_empty def
R11716:11716 Coq.FSets.FSetBridge <> s:119 var
R11720:11723 Coq.Init.Datatypes <> true constr
R11754:11761 Coq.FSets.FSetBridge NodepOfDep is_empty def
R11770:11779 Coq.FSets.FSetBridge M is_empty defax
R11770:11779 Coq.FSets.FSetBridge M is_empty defax
prf 11807:11816 NodepOfDep is_empty_2
R11831:11831 Coq.FSets.FSetBridge M t defax
binder 11827:11827 <> s:120
R11851:11854 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11844:11846 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11834:11841 Coq.FSets.FSetBridge NodepOfDep is_empty def
R11843:11843 Coq.FSets.FSetBridge <> s:120 var
R11847:11850 Coq.Init.Datatypes <> true constr
R11855:11859 Coq.FSets.FSetBridge M Empty def
R11861:11861 Coq.FSets.FSetBridge <> s:120 var
R11893:11900 Coq.FSets.FSetBridge NodepOfDep is_empty def
R11909:11918 Coq.FSets.FSetBridge M is_empty defax
R11909:11918 Coq.FSets.FSetBridge M is_empty defax
def 11979:11981 NodepOfDep mem
R11988:11990 Coq.FSets.FSetBridge M elt def
binder 11984:11984 <> x:121
R11998:11998 Coq.FSets.FSetBridge M t defax
binder 11994:11994 <> s:122
R12003:12006 Coq.Init.Datatypes <> bool ind
R12018:12020 Coq.FSets.FSetBridge M mem defax
R12024:12024 Coq.FSets.FSetBridge <> s:122 var
R12022:12022 Coq.FSets.FSetBridge <> x:121 var
R12041:12045 Coq.Init.Datatypes <> false constr
R12031:12034 Coq.Init.Datatypes <> true constr
prf 12057:12061 NodepOfDep mem_1
R12077:12077 Coq.FSets.FSetBridge M t defax
binder 12073:12073 <> s:123
R12085:12087 Coq.FSets.FSetBridge M elt def
binder 12081:12081 <> x:124
R12097:12100 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12091:12092 Coq.FSets.FSetBridge M In defax
R12096:12096 Coq.FSets.FSetBridge <> s:123 var
R12094:12094 Coq.FSets.FSetBridge <> x:124 var
R12108:12110 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12101:12103 Coq.FSets.FSetBridge NodepOfDep mem def
R12107:12107 Coq.FSets.FSetBridge <> s:123 var
R12105:12105 Coq.FSets.FSetBridge <> x:124 var
R12111:12114 Coq.Init.Datatypes <> true constr
R12145:12147 Coq.FSets.FSetBridge NodepOfDep mem def
R12156:12160 Coq.FSets.FSetBridge M mem defax
R12156:12160 Coq.FSets.FSetBridge M mem defax
prf 12190:12194 NodepOfDep mem_2
R12210:12210 Coq.FSets.FSetBridge M t defax
binder 12206:12206 <> s:125
R12218:12220 Coq.FSets.FSetBridge M elt def
binder 12214:12214 <> x:126
R12238:12241 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12231:12233 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12224:12226 Coq.FSets.FSetBridge NodepOfDep mem def
R12230:12230 Coq.FSets.FSetBridge <> s:125 var
R12228:12228 Coq.FSets.FSetBridge <> x:126 var
R12234:12237 Coq.Init.Datatypes <> true constr
R12242:12243 Coq.FSets.FSetBridge M In defax
R12247:12247 Coq.FSets.FSetBridge <> s:125 var
R12245:12245 Coq.FSets.FSetBridge <> x:126 var
R12282:12284 Coq.FSets.FSetBridge NodepOfDep mem def
R12293:12297 Coq.FSets.FSetBridge M mem defax
R12293:12297 Coq.FSets.FSetBridge M mem defax
def 12360:12365 NodepOfDep eq_dec
R12370:12374 Coq.FSets.FSetBridge M equal defax
def 12391:12395 NodepOfDep equal
R12405:12405 Coq.FSets.FSetBridge M t defax
binder 12398:12398 <> s:127
binder 12400:12401 <> s':128
R12410:12413 Coq.Init.Datatypes <> bool ind
R12425:12429 Coq.FSets.FSetBridge M equal defax
R12433:12434 Coq.FSets.FSetBridge <> s':128 var
R12431:12431 Coq.FSets.FSetBridge <> s:127 var
R12451:12455 Coq.Init.Datatypes <> false constr
R12441:12444 Coq.Init.Datatypes <> true constr
prf 12467:12473 NodepOfDep equal_1
R12491:12491 Coq.FSets.FSetBridge M t defax
binder 12484:12484 <> s:129
binder 12486:12487 <> s':130
R12504:12507 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12494:12498 Coq.FSets.FSetBridge M Equal def
R12502:12503 Coq.FSets.FSetBridge <> s':130 var
R12500:12500 Coq.FSets.FSetBridge <> s:129 var
R12518:12520 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12508:12512 Coq.FSets.FSetBridge NodepOfDep equal def
R12516:12517 Coq.FSets.FSetBridge <> s':130 var
R12514:12514 Coq.FSets.FSetBridge <> s:129 var
R12521:12524 Coq.Init.Datatypes <> true constr
R12555:12559 Coq.FSets.FSetBridge NodepOfDep equal def
R12567:12573 Coq.FSets.FSetBridge M equal defax
R12567:12573 Coq.FSets.FSetBridge M equal defax
prf 12603:12609 NodepOfDep equal_2
R12627:12627 Coq.FSets.FSetBridge M t defax
binder 12620:12620 <> s:131
binder 12622:12623 <> s':132
R12647:12650 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12640:12642 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12630:12634 Coq.FSets.FSetBridge NodepOfDep equal def
R12638:12639 Coq.FSets.FSetBridge <> s':132 var
R12636:12636 Coq.FSets.FSetBridge <> s:131 var
R12643:12646 Coq.Init.Datatypes <> true constr
R12651:12655 Coq.FSets.FSetBridge M Equal def
R12659:12660 Coq.FSets.FSetBridge <> s':132 var
R12657:12657 Coq.FSets.FSetBridge <> s:131 var
R12696:12700 Coq.FSets.FSetBridge NodepOfDep equal def
R12709:12715 Coq.FSets.FSetBridge M equal defax
R12709:12715 Coq.FSets.FSetBridge M equal defax
def 12774:12779 NodepOfDep subset
R12789:12789 Coq.FSets.FSetBridge M t defax
binder 12782:12782 <> s:133
binder 12784:12785 <> s':134
R12794:12797 Coq.Init.Datatypes <> bool ind
R12809:12814 Coq.FSets.FSetBridge M subset defax
R12818:12819 Coq.FSets.FSetBridge <> s':134 var
R12816:12816 Coq.FSets.FSetBridge <> s:133 var
R12836:12840 Coq.Init.Datatypes <> false constr
R12826:12829 Coq.Init.Datatypes <> true constr
prf 12852:12859 NodepOfDep subset_1
R12877:12877 Coq.FSets.FSetBridge M t defax
binder 12870:12870 <> s:135
binder 12872:12873 <> s':136
R12891:12894 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12880:12885 Coq.FSets.FSetBridge M Subset def
R12889:12890 Coq.FSets.FSetBridge <> s':136 var
R12887:12887 Coq.FSets.FSetBridge <> s:135 var
R12906:12908 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12895:12900 Coq.FSets.FSetBridge NodepOfDep subset def
R12904:12905 Coq.FSets.FSetBridge <> s':136 var
R12902:12902 Coq.FSets.FSetBridge <> s:135 var
R12909:12912 Coq.Init.Datatypes <> true constr
R12943:12948 Coq.FSets.FSetBridge NodepOfDep subset def
R12956:12963 Coq.FSets.FSetBridge M subset defax
R12956:12963 Coq.FSets.FSetBridge M subset defax
prf 12993:13000 NodepOfDep subset_2
R13018:13018 Coq.FSets.FSetBridge M t defax
binder 13011:13011 <> s:137
binder 13013:13014 <> s':138
R13039:13042 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13032:13034 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13021:13026 Coq.FSets.FSetBridge NodepOfDep subset def
R13030:13031 Coq.FSets.FSetBridge <> s':138 var
R13028:13028 Coq.FSets.FSetBridge <> s:137 var
R13035:13038 Coq.Init.Datatypes <> true constr
R13043:13048 Coq.FSets.FSetBridge M Subset def
R13052:13053 Coq.FSets.FSetBridge <> s':138 var
R13050:13050 Coq.FSets.FSetBridge <> s:137 var
R13089:13094 Coq.FSets.FSetBridge NodepOfDep subset def
R13103:13110 Coq.FSets.FSetBridge M subset defax
R13103:13110 Coq.FSets.FSetBridge M subset defax
def 13169:13174 NodepOfDep choose
R13181:13181 Coq.FSets.FSetBridge M t defax
binder 13177:13177 <> s:139
R13186:13191 Coq.Init.Datatypes <> option ind
R13193:13195 Coq.FSets.FSetBridge M elt def
R13210:13215 Coq.FSets.FSetBridge M choose defax
R13217:13217 Coq.FSets.FSetBridge <> s:139 var
R13230:13235 Coq.Init.Specif <> inleft constr
R13238:13242 Coq.Init.Specif <> exist constr
R13254:13257 Coq.Init.Datatypes <> Some constr
R13267:13273 Coq.Init.Specif <> inright constr
R13280:13283 Coq.Init.Datatypes <> None constr
prf 13303:13310 NodepOfDep choose_1
R13326:13326 Coq.FSets.FSetBridge M t defax
binder 13322:13322 <> s:140
R13334:13336 Coq.FSets.FSetBridge M elt def
binder 13330:13330 <> x:141
R13357:13360 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13348:13350 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13340:13345 Coq.FSets.FSetBridge NodepOfDep choose def
R13347:13347 Coq.FSets.FSetBridge <> s:140 var
R13351:13354 Coq.Init.Datatypes <> Some constr
R13356:13356 Coq.FSets.FSetBridge <> x:141 var
R13361:13362 Coq.FSets.FSetBridge M In defax
R13366:13366 Coq.FSets.FSetBridge <> s:140 var
R13364:13364 Coq.FSets.FSetBridge <> x:141 var
R13401:13406 Coq.FSets.FSetBridge NodepOfDep choose def
R13415:13422 Coq.FSets.FSetBridge M choose defax
R13415:13422 Coq.FSets.FSetBridge M choose defax
prf 13538:13545 NodepOfDep choose_2
R13560:13560 Coq.FSets.FSetBridge M t defax
binder 13556:13556 <> s:142
R13578:13581 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13571:13573 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13563:13568 Coq.FSets.FSetBridge NodepOfDep choose def
R13570:13570 Coq.FSets.FSetBridge <> s:142 var
R13574:13577 Coq.Init.Datatypes <> None constr
R13582:13586 Coq.FSets.FSetBridge M Empty def
R13588:13588 Coq.FSets.FSetBridge <> s:142 var
R13620:13625 Coq.FSets.FSetBridge NodepOfDep choose def
R13634:13641 Coq.FSets.FSetBridge M choose defax
R13634:13641 Coq.FSets.FSetBridge M choose defax
prf 13717:13724 NodepOfDep choose_3
binder 13735:13735 <> s:143
binder 13737:13738 <> s':144
binder 13740:13740 <> x:145
binder 13742:13743 <> x':146
R13766:13769 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13757:13759 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13749:13754 Coq.FSets.FSetBridge NodepOfDep choose def
R13756:13756 Coq.FSets.FSetBridge <> s:143 var
R13760:13763 Coq.Init.Datatypes <> Some constr
R13765:13765 Coq.FSets.FSetBridge <> x:145 var
R13789:13792 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13779:13781 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13770:13775 Coq.FSets.FSetBridge NodepOfDep choose def
R13777:13778 Coq.FSets.FSetBridge <> s':144 var
R13782:13785 Coq.Init.Datatypes <> Some constr
R13787:13788 Coq.FSets.FSetBridge <> x':146 var
R13803:13806 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13793:13797 Coq.FSets.FSetBridge M Equal def
R13801:13802 Coq.FSets.FSetBridge <> s':144 var
R13799:13799 Coq.FSets.FSetBridge <> s:143 var
R13807:13810 Coq.FSets.FSetBridge M.E eq defax
R13814:13815 Coq.FSets.FSetBridge <> x':146 var
R13812:13812 Coq.FSets.FSetBridge <> x:145 var
R13836:13841 Coq.FSets.FSetBridge NodepOfDep choose def
R13866:13879 Coq.FSets.FSetBridge M choose_equal defax
R13866:13879 Coq.FSets.FSetBridge M choose_equal defax
R13908:13915 Coq.FSets.FSetBridge M choose defax
R13944:13951 Coq.FSets.FSetBridge M choose defax
R13908:13915 Coq.FSets.FSetBridge M choose defax
R13944:13951 Coq.FSets.FSetBridge M choose defax
R13944:13951 Coq.FSets.FSetBridge M choose defax
def 14020:14027 NodepOfDep elements
R14034:14034 Coq.FSets.FSetBridge M t defax
binder 14030:14030 <> s:147
R14039:14042 Coq.Init.Datatypes <> list ind
R14044:14046 Coq.FSets.FSetBridge M elt def
R14065:14072 Coq.FSets.FSetBridge M elements defax
R14074:14074 Coq.FSets.FSetBridge <> s:147 var
binder 14056:14056 <> l:148
R14079:14079 Coq.FSets.FSetBridge <> l:148 var
prf 14091:14100 NodepOfDep elements_1
R14116:14116 Coq.FSets.FSetBridge M t defax
binder 14112:14112 <> s:149
R14124:14126 Coq.FSets.FSetBridge M elt def
binder 14120:14120 <> x:150
R14136:14139 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14130:14131 Coq.FSets.FSetBridge M In defax
R14135:14135 Coq.FSets.FSetBridge <> s:149 var
R14133:14133 Coq.FSets.FSetBridge <> x:150 var
R14140:14142 Coq.Lists.SetoidList <> InA ind
R14152:14159 Coq.FSets.FSetBridge NodepOfDep elements def
R14161:14161 Coq.FSets.FSetBridge <> s:149 var
R14149:14149 Coq.FSets.FSetBridge <> x:150 var
R14144:14147 Coq.FSets.FSetBridge M.E eq defax
R14193:14200 Coq.FSets.FSetBridge NodepOfDep elements def
R14209:14218 Coq.FSets.FSetBridge M elements defax
R14209:14218 Coq.FSets.FSetBridge M elements defax
prf 14252:14261 NodepOfDep elements_2
R14277:14277 Coq.FSets.FSetBridge M t defax
binder 14273:14273 <> s:151
R14285:14287 Coq.FSets.FSetBridge M elt def
binder 14281:14281 <> x:152
R14314:14317 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14291:14293 Coq.Lists.SetoidList <> InA ind
R14303:14310 Coq.FSets.FSetBridge NodepOfDep elements def
R14312:14312 Coq.FSets.FSetBridge <> s:151 var
R14300:14300 Coq.FSets.FSetBridge <> x:152 var
R14295:14298 Coq.FSets.FSetBridge M.E eq defax
R14318:14319 Coq.FSets.FSetBridge M In defax
R14323:14323 Coq.FSets.FSetBridge <> s:151 var
R14321:14321 Coq.FSets.FSetBridge <> x:152 var
R14358:14365 Coq.FSets.FSetBridge NodepOfDep elements def
R14374:14383 Coq.FSets.FSetBridge M elements defax
R14374:14383 Coq.FSets.FSetBridge M elements defax
prf 14417:14426 NodepOfDep elements_3
R14441:14441 Coq.FSets.FSetBridge M t defax
binder 14437:14437 <> s:153
R14444:14447 Coq.Sorting.Sorted <> sort abbrev
R14455:14462 Coq.FSets.FSetBridge NodepOfDep elements def
R14464:14464 Coq.FSets.FSetBridge <> s:153 var
R14449:14452 Coq.FSets.FSetBridge M.E lt defax
R14496:14503 Coq.FSets.FSetBridge NodepOfDep elements def
R14512:14521 Coq.FSets.FSetBridge M elements defax
R14512:14521 Coq.FSets.FSetBridge M elements defax
prf 14601:14611 NodepOfDep elements_3w
R14626:14626 Coq.FSets.FSetBridge M t defax
binder 14622:14622 <> s:154
R14629:14634 Coq.Lists.SetoidList <> NoDupA ind
R14642:14649 Coq.FSets.FSetBridge NodepOfDep elements def
R14651:14651 Coq.FSets.FSetBridge <> s:154 var
R14636:14639 Coq.FSets.FSetBridge M.E eq defax
def 14707:14713 NodepOfDep min_elt
R14720:14720 Coq.FSets.FSetBridge M t defax
binder 14716:14716 <> s:155
R14725:14730 Coq.Init.Datatypes <> option ind
R14732:14734 Coq.FSets.FSetBridge M elt def
R14749:14755 Coq.FSets.FSetBridge M min_elt defax
R14757:14757 Coq.FSets.FSetBridge <> s:155 var
R14770:14775 Coq.Init.Specif <> inleft constr
R14778:14782 Coq.Init.Specif <> exist constr
R14794:14797 Coq.Init.Datatypes <> Some constr
R14807:14813 Coq.Init.Specif <> inright constr
R14820:14823 Coq.Init.Datatypes <> None constr
prf 14843:14851 NodepOfDep min_elt_1
R14867:14867 Coq.FSets.FSetBridge M t defax
binder 14863:14863 <> s:156
R14875:14877 Coq.FSets.FSetBridge M elt def
binder 14871:14871 <> x:157
R14899:14902 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14890:14892 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14881:14887 Coq.FSets.FSetBridge NodepOfDep min_elt def
R14889:14889 Coq.FSets.FSetBridge <> s:156 var
R14893:14896 Coq.Init.Datatypes <> Some constr
R14898:14898 Coq.FSets.FSetBridge <> x:157 var
R14903:14904 Coq.FSets.FSetBridge M In defax
R14908:14908 Coq.FSets.FSetBridge <> s:156 var
R14906:14906 Coq.FSets.FSetBridge <> x:157 var
R14943:14949 Coq.FSets.FSetBridge NodepOfDep min_elt def
R14958:14966 Coq.FSets.FSetBridge M min_elt defax
R14958:14966 Coq.FSets.FSetBridge M min_elt defax
prf 15087:15095 NodepOfDep min_elt_2
R15114:15114 Coq.FSets.FSetBridge M t defax
binder 15110:15110 <> s:158
R15124:15126 Coq.FSets.FSetBridge M elt def
binder 15118:15118 <> x:159
binder 15120:15120 <> y:160
R15148:15151 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15139:15141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15130:15136 Coq.FSets.FSetBridge NodepOfDep min_elt def
R15138:15138 Coq.FSets.FSetBridge <> s:158 var
R15142:15145 Coq.Init.Datatypes <> Some constr
R15147:15147 Coq.FSets.FSetBridge <> x:159 var
R15158:15161 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15152:15153 Coq.FSets.FSetBridge M In defax
R15157:15157 Coq.FSets.FSetBridge <> s:158 var
R15155:15155 Coq.FSets.FSetBridge <> y:160 var
R15162:15163 Coq.Init.Logic <> ::type_scope:'~'_x not
R15164:15167 Coq.FSets.FSetBridge M.E lt defax
R15171:15171 Coq.FSets.FSetBridge <> x:159 var
R15169:15169 Coq.FSets.FSetBridge <> y:160 var
R15208:15214 Coq.FSets.FSetBridge NodepOfDep min_elt def
R15223:15231 Coq.FSets.FSetBridge M min_elt defax
R15223:15231 Coq.FSets.FSetBridge M min_elt defax
R15248:15254 Coq.FSets.FSetBridge M For_all def
prf 15374:15382 NodepOfDep min_elt_3
R15397:15397 Coq.FSets.FSetBridge M t defax
binder 15393:15393 <> s:161
R15416:15419 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15409:15411 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15400:15406 Coq.FSets.FSetBridge NodepOfDep min_elt def
R15408:15408 Coq.FSets.FSetBridge <> s:161 var
R15412:15415 Coq.Init.Datatypes <> None constr
R15420:15424 Coq.FSets.FSetBridge M Empty def
R15426:15426 Coq.FSets.FSetBridge <> s:161 var
R15459:15465 Coq.FSets.FSetBridge NodepOfDep min_elt def
R15474:15482 Coq.FSets.FSetBridge M min_elt defax
R15474:15482 Coq.FSets.FSetBridge M min_elt defax
def 15563:15569 NodepOfDep max_elt
R15576:15576 Coq.FSets.FSetBridge M t defax
binder 15572:15572 <> s:162
R15581:15586 Coq.Init.Datatypes <> option ind
R15588:15590 Coq.FSets.FSetBridge M elt def
R15605:15611 Coq.FSets.FSetBridge M max_elt defax
R15613:15613 Coq.FSets.FSetBridge <> s:162 var
R15626:15631 Coq.Init.Specif <> inleft constr
R15634:15638 Coq.Init.Specif <> exist constr
R15650:15653 Coq.Init.Datatypes <> Some constr
R15663:15669 Coq.Init.Specif <> inright constr
R15676:15679 Coq.Init.Datatypes <> None constr
prf 15699:15707 NodepOfDep max_elt_1
R15723:15723 Coq.FSets.FSetBridge M t defax
binder 15719:15719 <> s:163
R15731:15733 Coq.FSets.FSetBridge M elt def
binder 15727:15727 <> x:164
R15755:15758 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15746:15748 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15737:15743 Coq.FSets.FSetBridge NodepOfDep max_elt def
R15745:15745 Coq.FSets.FSetBridge <> s:163 var
R15749:15752 Coq.Init.Datatypes <> Some constr
R15754:15754 Coq.FSets.FSetBridge <> x:164 var
R15759:15760 Coq.FSets.FSetBridge M In defax
R15764:15764 Coq.FSets.FSetBridge <> s:163 var
R15762:15762 Coq.FSets.FSetBridge <> x:164 var
R15799:15805 Coq.FSets.FSetBridge NodepOfDep max_elt def
R15814:15822 Coq.FSets.FSetBridge M max_elt defax
R15814:15822 Coq.FSets.FSetBridge M max_elt defax
prf 15943:15951 NodepOfDep max_elt_2
R15970:15970 Coq.FSets.FSetBridge M t defax
binder 15966:15966 <> s:165
R15980:15982 Coq.FSets.FSetBridge M elt def
binder 15974:15974 <> x:166
binder 15976:15976 <> y:167
R16004:16007 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15995:15997 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15986:15992 Coq.FSets.FSetBridge NodepOfDep max_elt def
R15994:15994 Coq.FSets.FSetBridge <> s:165 var
R15998:16001 Coq.Init.Datatypes <> Some constr
R16003:16003 Coq.FSets.FSetBridge <> x:166 var
R16014:16017 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16008:16009 Coq.FSets.FSetBridge M In defax
R16013:16013 Coq.FSets.FSetBridge <> s:165 var
R16011:16011 Coq.FSets.FSetBridge <> y:167 var
R16018:16019 Coq.Init.Logic <> ::type_scope:'~'_x not
R16020:16023 Coq.FSets.FSetBridge M.E lt defax
R16027:16027 Coq.FSets.FSetBridge <> y:167 var
R16025:16025 Coq.FSets.FSetBridge <> x:166 var
R16064:16070 Coq.FSets.FSetBridge NodepOfDep max_elt def
R16079:16087 Coq.FSets.FSetBridge M max_elt defax
R16079:16087 Coq.FSets.FSetBridge M max_elt defax
R16104:16110 Coq.FSets.FSetBridge M For_all def
prf 16230:16238 NodepOfDep max_elt_3
R16253:16253 Coq.FSets.FSetBridge M t defax
binder 16249:16249 <> s:168
R16272:16275 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16265:16267 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16256:16262 Coq.FSets.FSetBridge NodepOfDep max_elt def
R16264:16264 Coq.FSets.FSetBridge <> s:168 var
R16268:16271 Coq.Init.Datatypes <> None constr
R16276:16280 Coq.FSets.FSetBridge M Empty def
R16282:16282 Coq.FSets.FSetBridge <> s:168 var
R16315:16321 Coq.FSets.FSetBridge NodepOfDep max_elt def
R16330:16338 Coq.FSets.FSetBridge M max_elt defax
R16330:16338 Coq.FSets.FSetBridge M max_elt defax
def 16419:16421 NodepOfDep add
R16428:16430 Coq.FSets.FSetBridge M elt def
binder 16424:16424 <> x:169
R16438:16438 Coq.FSets.FSetBridge M t defax
binder 16434:16434 <> s:170
R16443:16443 Coq.FSets.FSetBridge M t defax
R16463:16465 Coq.FSets.FSetBridge M add defax
R16469:16469 Coq.FSets.FSetBridge <> s:170 var
R16467:16467 Coq.FSets.FSetBridge <> x:169 var
binder 16453:16454 <> s':171
R16474:16475 Coq.FSets.FSetBridge <> s':171 var
prf 16487:16491 NodepOfDep add_1
R16507:16507 Coq.FSets.FSetBridge M t defax
binder 16503:16503 <> s:172
R16517:16519 Coq.FSets.FSetBridge M elt def
binder 16511:16511 <> x:173
binder 16513:16513 <> y:174
R16531:16534 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16523:16526 Coq.FSets.FSetBridge M.E eq defax
R16530:16530 Coq.FSets.FSetBridge <> y:174 var
R16528:16528 Coq.FSets.FSetBridge <> x:173 var
R16535:16536 Coq.FSets.FSetBridge M In defax
R16541:16543 Coq.FSets.FSetBridge NodepOfDep add def
R16547:16547 Coq.FSets.FSetBridge <> s:172 var
R16545:16545 Coq.FSets.FSetBridge <> x:173 var
R16538:16538 Coq.FSets.FSetBridge <> y:174 var
R16579:16581 Coq.FSets.FSetBridge NodepOfDep add def
R16590:16594 Coq.FSets.FSetBridge M add defax
R16609:16611 Coq.FSets.FSetBridge M Add def
R16590:16594 Coq.FSets.FSetBridge M add defax
prf 16647:16651 NodepOfDep add_2
R16667:16667 Coq.FSets.FSetBridge M t defax
binder 16663:16663 <> s:175
R16677:16679 Coq.FSets.FSetBridge M elt def
binder 16671:16671 <> x:176
binder 16673:16673 <> y:177
R16689:16692 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16683:16684 Coq.FSets.FSetBridge M In defax
R16688:16688 Coq.FSets.FSetBridge <> s:175 var
R16686:16686 Coq.FSets.FSetBridge <> y:177 var
R16693:16694 Coq.FSets.FSetBridge M In defax
R16699:16701 Coq.FSets.FSetBridge NodepOfDep add def
R16705:16705 Coq.FSets.FSetBridge <> s:175 var
R16703:16703 Coq.FSets.FSetBridge <> x:176 var
R16696:16696 Coq.FSets.FSetBridge <> y:177 var
R16737:16739 Coq.FSets.FSetBridge NodepOfDep add def
R16748:16752 Coq.FSets.FSetBridge M add defax
R16767:16769 Coq.FSets.FSetBridge M Add def
R16748:16752 Coq.FSets.FSetBridge M add defax
prf 16805:16809 NodepOfDep add_3
R16828:16828 Coq.FSets.FSetBridge M t defax
binder 16824:16824 <> s:178
R16838:16840 Coq.FSets.FSetBridge M elt def
binder 16832:16832 <> x:179
binder 16834:16834 <> y:180
R16854:16857 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16844:16845 Coq.Init.Logic <> ::type_scope:'~'_x not
R16846:16849 Coq.FSets.FSetBridge M.E eq defax
R16853:16853 Coq.FSets.FSetBridge <> y:180 var
R16851:16851 Coq.FSets.FSetBridge <> x:179 var
R16872:16875 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16858:16859 Coq.FSets.FSetBridge M In defax
R16864:16866 Coq.FSets.FSetBridge NodepOfDep add def
R16870:16870 Coq.FSets.FSetBridge <> s:178 var
R16868:16868 Coq.FSets.FSetBridge <> x:179 var
R16861:16861 Coq.FSets.FSetBridge <> y:180 var
R16876:16877 Coq.FSets.FSetBridge M In defax
R16881:16881 Coq.FSets.FSetBridge <> s:178 var
R16879:16879 Coq.FSets.FSetBridge <> y:180 var
R16918:16920 Coq.FSets.FSetBridge NodepOfDep add def
R16929:16933 Coq.FSets.FSetBridge M add defax
R16948:16950 Coq.FSets.FSetBridge M Add def
R16929:16933 Coq.FSets.FSetBridge M add defax
def 16991:16996 NodepOfDep remove
R17003:17005 Coq.FSets.FSetBridge M elt def
binder 16999:16999 <> x:181
R17013:17013 Coq.FSets.FSetBridge M t defax
binder 17009:17009 <> s:182
R17018:17018 Coq.FSets.FSetBridge M t defax
R17038:17043 Coq.FSets.FSetBridge M remove defax
R17047:17047 Coq.FSets.FSetBridge <> s:182 var
R17045:17045 Coq.FSets.FSetBridge <> x:181 var
binder 17028:17029 <> s':183
R17052:17053 Coq.FSets.FSetBridge <> s':183 var
prf 17065:17072 NodepOfDep remove_1
R17088:17088 Coq.FSets.FSetBridge M t defax
binder 17084:17084 <> s:184
R17098:17100 Coq.FSets.FSetBridge M elt def
binder 17092:17092 <> x:185
binder 17094:17094 <> y:186
R17112:17115 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17104:17107 Coq.FSets.FSetBridge M.E eq defax
R17111:17111 Coq.FSets.FSetBridge <> y:186 var
R17109:17109 Coq.FSets.FSetBridge <> x:185 var
R17116:17117 Coq.Init.Logic <> ::type_scope:'~'_x not
R17118:17119 Coq.FSets.FSetBridge M In defax
R17124:17129 Coq.FSets.FSetBridge NodepOfDep remove def
R17133:17133 Coq.FSets.FSetBridge <> s:184 var
R17131:17131 Coq.FSets.FSetBridge <> x:185 var
R17121:17121 Coq.FSets.FSetBridge <> y:186 var
R17165:17170 Coq.FSets.FSetBridge NodepOfDep remove def
R17179:17186 Coq.FSets.FSetBridge M remove defax
R17179:17186 Coq.FSets.FSetBridge M remove defax
prf 17222:17229 NodepOfDep remove_2
R17248:17248 Coq.FSets.FSetBridge M t defax
binder 17244:17244 <> s:187
R17258:17260 Coq.FSets.FSetBridge M elt def
binder 17252:17252 <> x:188
binder 17254:17254 <> y:189
R17274:17277 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17264:17265 Coq.Init.Logic <> ::type_scope:'~'_x not
R17266:17269 Coq.FSets.FSetBridge M.E eq defax
R17273:17273 Coq.FSets.FSetBridge <> y:189 var
R17271:17271 Coq.FSets.FSetBridge <> x:188 var
R17284:17287 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17278:17279 Coq.FSets.FSetBridge M In defax
R17283:17283 Coq.FSets.FSetBridge <> s:187 var
R17281:17281 Coq.FSets.FSetBridge <> y:189 var
R17288:17289 Coq.FSets.FSetBridge M In defax
R17294:17299 Coq.FSets.FSetBridge NodepOfDep remove def
R17303:17303 Coq.FSets.FSetBridge <> s:187 var
R17301:17301 Coq.FSets.FSetBridge <> x:188 var
R17291:17291 Coq.FSets.FSetBridge <> y:189 var
R17335:17340 Coq.FSets.FSetBridge NodepOfDep remove def
R17349:17356 Coq.FSets.FSetBridge M remove defax
R17349:17356 Coq.FSets.FSetBridge M remove defax
prf 17392:17399 NodepOfDep remove_3
R17415:17415 Coq.FSets.FSetBridge M t defax
binder 17411:17411 <> s:190
R17425:17427 Coq.FSets.FSetBridge M elt def
binder 17419:17419 <> x:191
binder 17421:17421 <> y:192
R17448:17451 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17431:17432 Coq.FSets.FSetBridge M In defax
R17437:17442 Coq.FSets.FSetBridge NodepOfDep remove def
R17446:17446 Coq.FSets.FSetBridge <> s:190 var
R17444:17444 Coq.FSets.FSetBridge <> x:191 var
R17434:17434 Coq.FSets.FSetBridge <> y:192 var
R17452:17453 Coq.FSets.FSetBridge M In defax
R17457:17457 Coq.FSets.FSetBridge <> s:190 var
R17455:17455 Coq.FSets.FSetBridge <> y:192 var
R17494:17499 Coq.FSets.FSetBridge NodepOfDep remove def
R17508:17515 Coq.FSets.FSetBridge M remove defax
R17508:17515 Coq.FSets.FSetBridge M remove defax
def 17556:17564 NodepOfDep singleton
R17571:17573 Coq.FSets.FSetBridge M elt def
binder 17567:17567 <> x:193
R17578:17578 Coq.FSets.FSetBridge M t defax
R17597:17605 Coq.FSets.FSetBridge M singleton defax
R17607:17607 Coq.FSets.FSetBridge <> x:193 var
binder 17588:17588 <> s:194
R17612:17612 Coq.FSets.FSetBridge <> s:194 var
prf 17624:17634 NodepOfDep singleton_1
R17651:17653 Coq.FSets.FSetBridge M elt def
binder 17645:17645 <> x:195
binder 17647:17647 <> y:196
R17674:17677 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17656:17657 Coq.FSets.FSetBridge M In defax
R17662:17670 Coq.FSets.FSetBridge NodepOfDep singleton def
R17672:17672 Coq.FSets.FSetBridge <> x:195 var
R17659:17659 Coq.FSets.FSetBridge <> y:196 var
R17678:17681 Coq.FSets.FSetBridge M.E eq defax
R17685:17685 Coq.FSets.FSetBridge <> y:196 var
R17683:17683 Coq.FSets.FSetBridge <> x:195 var
R17720:17728 Coq.FSets.FSetBridge NodepOfDep singleton def
R17737:17747 Coq.FSets.FSetBridge M singleton defax
R17737:17747 Coq.FSets.FSetBridge M singleton defax
prf 17781:17791 NodepOfDep singleton_2
R17808:17810 Coq.FSets.FSetBridge M elt def
binder 17802:17802 <> x:197
binder 17804:17804 <> y:198
R17821:17824 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17813:17816 Coq.FSets.FSetBridge M.E eq defax
R17820:17820 Coq.FSets.FSetBridge <> y:198 var
R17818:17818 Coq.FSets.FSetBridge <> x:197 var
R17825:17826 Coq.FSets.FSetBridge M In defax
R17831:17839 Coq.FSets.FSetBridge NodepOfDep singleton def
R17841:17841 Coq.FSets.FSetBridge <> x:197 var
R17828:17828 Coq.FSets.FSetBridge <> y:198 var
R17877:17885 Coq.FSets.FSetBridge NodepOfDep singleton def
R17894:17904 Coq.FSets.FSetBridge M singleton defax
R17894:17904 Coq.FSets.FSetBridge M singleton defax
def 17943:17947 NodepOfDep union
R17957:17957 Coq.FSets.FSetBridge M t defax
binder 17950:17950 <> s:199
binder 17952:17953 <> s':200
R17962:17962 Coq.FSets.FSetBridge M t defax
R17983:17987 Coq.FSets.FSetBridge M union defax
R17991:17992 Coq.FSets.FSetBridge <> s':200 var
R17989:17989 Coq.FSets.FSetBridge <> s:199 var
binder 17972:17974 <> s'':201
R17997:17999 Coq.FSets.FSetBridge <> s'':201 var
prf 18011:18017 NodepOfDep union_1
R18039:18039 Coq.FSets.FSetBridge M t defax
binder 18032:18032 <> s:202
binder 18034:18035 <> s':203
R18047:18049 Coq.FSets.FSetBridge M elt def
binder 18043:18043 <> x:204
R18070:18073 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18053:18054 Coq.FSets.FSetBridge M In defax
R18059:18063 Coq.FSets.FSetBridge NodepOfDep union def
R18067:18068 Coq.FSets.FSetBridge <> s':203 var
R18065:18065 Coq.FSets.FSetBridge <> s:202 var
R18056:18056 Coq.FSets.FSetBridge <> x:204 var
R18080:18083 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R18074:18075 Coq.FSets.FSetBridge M In defax
R18079:18079 Coq.FSets.FSetBridge <> s:202 var
R18077:18077 Coq.FSets.FSetBridge <> x:204 var
R18084:18085 Coq.FSets.FSetBridge M In defax
R18089:18090 Coq.FSets.FSetBridge <> s':203 var
R18087:18087 Coq.FSets.FSetBridge <> x:204 var
R18128:18132 Coq.FSets.FSetBridge NodepOfDep union def
R18141:18147 Coq.FSets.FSetBridge M union defax
R18141:18147 Coq.FSets.FSetBridge M union defax
prf 18184:18190 NodepOfDep union_2
R18209:18209 Coq.FSets.FSetBridge M t defax
binder 18202:18202 <> s:205
binder 18204:18205 <> s':206
R18217:18219 Coq.FSets.FSetBridge M elt def
binder 18213:18213 <> x:207
R18229:18232 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18223:18224 Coq.FSets.FSetBridge M In defax
R18228:18228 Coq.FSets.FSetBridge <> s:205 var
R18226:18226 Coq.FSets.FSetBridge <> x:207 var
R18233:18234 Coq.FSets.FSetBridge M In defax
R18239:18243 Coq.FSets.FSetBridge NodepOfDep union def
R18247:18248 Coq.FSets.FSetBridge <> s':206 var
R18245:18245 Coq.FSets.FSetBridge <> s:205 var
R18236:18236 Coq.FSets.FSetBridge <> x:207 var
R18287:18291 Coq.FSets.FSetBridge NodepOfDep union def
R18300:18306 Coq.FSets.FSetBridge M union defax
R18300:18306 Coq.FSets.FSetBridge M union defax
prf 18343:18349 NodepOfDep union_3
R18368:18368 Coq.FSets.FSetBridge M t defax
binder 18361:18361 <> s:208
binder 18363:18364 <> s':209
R18376:18378 Coq.FSets.FSetBridge M elt def
binder 18372:18372 <> x:210
R18389:18392 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18382:18383 Coq.FSets.FSetBridge M In defax
R18387:18388 Coq.FSets.FSetBridge <> s':209 var
R18385:18385 Coq.FSets.FSetBridge <> x:210 var
R18393:18394 Coq.FSets.FSetBridge M In defax
R18399:18403 Coq.FSets.FSetBridge NodepOfDep union def
R18407:18408 Coq.FSets.FSetBridge <> s':209 var
R18405:18405 Coq.FSets.FSetBridge <> s:208 var
R18396:18396 Coq.FSets.FSetBridge <> x:210 var
R18447:18451 Coq.FSets.FSetBridge NodepOfDep union def
R18460:18466 Coq.FSets.FSetBridge M union defax
R18460:18466 Coq.FSets.FSetBridge M union defax
def 18508:18512 NodepOfDep inter
R18522:18522 Coq.FSets.FSetBridge M t defax
binder 18515:18515 <> s:211
binder 18517:18518 <> s':212
R18527:18527 Coq.FSets.FSetBridge M t defax
R18548:18552 Coq.FSets.FSetBridge M inter defax
R18556:18557 Coq.FSets.FSetBridge <> s':212 var
R18554:18554 Coq.FSets.FSetBridge <> s:211 var
binder 18537:18539 <> s'':213
R18562:18564 Coq.FSets.FSetBridge <> s'':213 var
prf 18576:18582 NodepOfDep inter_1
R18601:18601 Coq.FSets.FSetBridge M t defax
binder 18594:18594 <> s:214
binder 18596:18597 <> s':215
R18609:18611 Coq.FSets.FSetBridge M elt def
binder 18605:18605 <> x:216
R18632:18635 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18615:18616 Coq.FSets.FSetBridge M In defax
R18621:18625 Coq.FSets.FSetBridge NodepOfDep inter def
R18629:18630 Coq.FSets.FSetBridge <> s':215 var
R18627:18627 Coq.FSets.FSetBridge <> s:214 var
R18618:18618 Coq.FSets.FSetBridge <> x:216 var
R18636:18637 Coq.FSets.FSetBridge M In defax
R18641:18641 Coq.FSets.FSetBridge <> s:214 var
R18639:18639 Coq.FSets.FSetBridge <> x:216 var
R18679:18683 Coq.FSets.FSetBridge NodepOfDep inter def
R18692:18698 Coq.FSets.FSetBridge M inter defax
R18692:18698 Coq.FSets.FSetBridge M inter defax
prf 18735:18741 NodepOfDep inter_2
R18760:18760 Coq.FSets.FSetBridge M t defax
binder 18753:18753 <> s:217
binder 18755:18756 <> s':218
R18768:18770 Coq.FSets.FSetBridge M elt def
binder 18764:18764 <> x:219
R18791:18794 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18774:18775 Coq.FSets.FSetBridge M In defax
R18780:18784 Coq.FSets.FSetBridge NodepOfDep inter def
R18788:18789 Coq.FSets.FSetBridge <> s':218 var
R18786:18786 Coq.FSets.FSetBridge <> s:217 var
R18777:18777 Coq.FSets.FSetBridge <> x:219 var
R18795:18796 Coq.FSets.FSetBridge M In defax
R18800:18801 Coq.FSets.FSetBridge <> s':218 var
R18798:18798 Coq.FSets.FSetBridge <> x:219 var
R18839:18843 Coq.FSets.FSetBridge NodepOfDep inter def
R18852:18858 Coq.FSets.FSetBridge M inter defax
R18852:18858 Coq.FSets.FSetBridge M inter defax
prf 18895:18901 NodepOfDep inter_3
R18923:18923 Coq.FSets.FSetBridge M t defax
binder 18916:18916 <> s:220
binder 18918:18919 <> s':221
R18931:18933 Coq.FSets.FSetBridge M elt def
binder 18927:18927 <> x:222
R18943:18946 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18937:18938 Coq.FSets.FSetBridge M In defax
R18942:18942 Coq.FSets.FSetBridge <> s:220 var
R18940:18940 Coq.FSets.FSetBridge <> x:222 var
R18954:18957 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18947:18948 Coq.FSets.FSetBridge M In defax
R18952:18953 Coq.FSets.FSetBridge <> s':221 var
R18950:18950 Coq.FSets.FSetBridge <> x:222 var
R18958:18959 Coq.FSets.FSetBridge M In defax
R18964:18968 Coq.FSets.FSetBridge NodepOfDep inter def
R18972:18973 Coq.FSets.FSetBridge <> s':221 var
R18970:18970 Coq.FSets.FSetBridge <> s:220 var
R18961:18961 Coq.FSets.FSetBridge <> x:222 var
R19012:19016 Coq.FSets.FSetBridge NodepOfDep inter def
R19025:19031 Coq.FSets.FSetBridge M inter defax
R19025:19031 Coq.FSets.FSetBridge M inter defax
def 19073:19076 NodepOfDep diff
R19086:19086 Coq.FSets.FSetBridge M t defax
binder 19079:19079 <> s:223
binder 19081:19082 <> s':224
R19091:19091 Coq.FSets.FSetBridge M t defax
R19112:19115 Coq.FSets.FSetBridge M diff defax
R19119:19120 Coq.FSets.FSetBridge <> s':224 var
R19117:19117 Coq.FSets.FSetBridge <> s:223 var
binder 19101:19103 <> s'':225
R19125:19127 Coq.FSets.FSetBridge <> s'':225 var
prf 19139:19144 NodepOfDep diff_1
R19163:19163 Coq.FSets.FSetBridge M t defax
binder 19156:19156 <> s:226
binder 19158:19159 <> s':227
R19171:19173 Coq.FSets.FSetBridge M elt def
binder 19167:19167 <> x:228
R19193:19196 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19177:19178 Coq.FSets.FSetBridge M In defax
R19183:19186 Coq.FSets.FSetBridge NodepOfDep diff def
R19190:19191 Coq.FSets.FSetBridge <> s':227 var
R19188:19188 Coq.FSets.FSetBridge <> s:226 var
R19180:19180 Coq.FSets.FSetBridge <> x:228 var
R19197:19198 Coq.FSets.FSetBridge M In defax
R19202:19202 Coq.FSets.FSetBridge <> s:226 var
R19200:19200 Coq.FSets.FSetBridge <> x:228 var
R19240:19243 Coq.FSets.FSetBridge NodepOfDep diff def
R19252:19257 Coq.FSets.FSetBridge M diff defax
R19252:19257 Coq.FSets.FSetBridge M diff defax
prf 19294:19299 NodepOfDep diff_2
R19318:19318 Coq.FSets.FSetBridge M t defax
binder 19311:19311 <> s:229
binder 19313:19314 <> s':230
R19326:19328 Coq.FSets.FSetBridge M elt def
binder 19322:19322 <> x:231
R19348:19351 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19332:19333 Coq.FSets.FSetBridge M In defax
R19338:19341 Coq.FSets.FSetBridge NodepOfDep diff def
R19345:19346 Coq.FSets.FSetBridge <> s':230 var
R19343:19343 Coq.FSets.FSetBridge <> s:229 var
R19335:19335 Coq.FSets.FSetBridge <> x:231 var
R19352:19353 Coq.Init.Logic <> ::type_scope:'~'_x not
R19354:19355 Coq.FSets.FSetBridge M In defax
R19359:19360 Coq.FSets.FSetBridge <> s':230 var
R19357:19357 Coq.FSets.FSetBridge <> x:231 var
R19398:19401 Coq.FSets.FSetBridge NodepOfDep diff def
R19410:19415 Coq.FSets.FSetBridge M diff defax
R19410:19415 Coq.FSets.FSetBridge M diff defax
prf 19452:19457 NodepOfDep diff_3
R19479:19479 Coq.FSets.FSetBridge M t defax
binder 19472:19472 <> s:232
binder 19474:19475 <> s':233
R19487:19489 Coq.FSets.FSetBridge M elt def
binder 19483:19483 <> x:234
R19499:19502 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19493:19494 Coq.FSets.FSetBridge M In defax
R19498:19498 Coq.FSets.FSetBridge <> s:232 var
R19496:19496 Coq.FSets.FSetBridge <> x:234 var
R19512:19515 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19503:19504 Coq.Init.Logic <> ::type_scope:'~'_x not
R19505:19506 Coq.FSets.FSetBridge M In defax
R19510:19511 Coq.FSets.FSetBridge <> s':233 var
R19508:19508 Coq.FSets.FSetBridge <> x:234 var
R19516:19517 Coq.FSets.FSetBridge M In defax
R19522:19525 Coq.FSets.FSetBridge NodepOfDep diff def
R19529:19530 Coq.FSets.FSetBridge <> s':233 var
R19527:19527 Coq.FSets.FSetBridge <> s:232 var
R19519:19519 Coq.FSets.FSetBridge <> x:234 var
R19569:19572 Coq.FSets.FSetBridge NodepOfDep diff def
R19581:19586 Coq.FSets.FSetBridge M diff defax
R19581:19586 Coq.FSets.FSetBridge M diff defax
def 19628:19635 NodepOfDep cardinal
R19642:19642 Coq.FSets.FSetBridge M t defax
binder 19638:19638 <> s:235
R19647:19649 Coq.Init.Datatypes <> nat ind
R19668:19675 Coq.FSets.FSetBridge M cardinal defax
R19677:19677 Coq.FSets.FSetBridge <> s:235 var
binder 19659:19659 <> f:236
R19682:19682 Coq.FSets.FSetBridge <> f:236 var
prf 19694:19703 NodepOfDep cardinal_1
binder 19714:19714 <> s:237
R19727:19729 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19717:19724 Coq.FSets.FSetBridge NodepOfDep cardinal def
R19726:19726 Coq.FSets.FSetBridge <> s:237 var
R19730:19735 Coq.Init.Datatypes <> length def
R19738:19745 Coq.FSets.FSetBridge NodepOfDep elements def
R19747:19747 Coq.FSets.FSetBridge <> s:237 var
R19779:19786 Coq.FSets.FSetBridge NodepOfDep cardinal def
R19795:19804 Coq.FSets.FSetBridge M cardinal defax
R19817:19824 Coq.FSets.FSetBridge NodepOfDep elements def
R19846:19855 Coq.FSets.FSetBridge M elements defax
R19795:19804 Coq.FSets.FSetBridge M cardinal defax
R19846:19855 Coq.FSets.FSetBridge M elements defax
def 19888:19891 NodepOfDep fold
binder 19894:19894 <> B:238
R19912:19915 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19909:19911 Coq.FSets.FSetBridge M elt def
R19917:19920 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19916:19916 Coq.FSets.FSetBridge <> B:238 var
R19921:19921 Coq.FSets.FSetBridge <> B:238 var
binder 19905:19905 <> f:239
R19929:19929 Coq.FSets.FSetBridge M t defax
binder 19925:19925 <> i:240
R19941:19941 Coq.FSets.FSetBridge <> B:238 var
binder 19937:19937 <> s:241
R19946:19946 Coq.FSets.FSetBridge <> B:238 var
R19968:19971 Coq.FSets.FSetBridge M fold defax
R19977:19977 Coq.FSets.FSetBridge <> s:241 var
R19975:19975 Coq.FSets.FSetBridge <> i:240 var
R19973:19973 Coq.FSets.FSetBridge <> f:239 var
binder 19956:19959 <> fold:242
R19982:19985 Coq.FSets.FSetBridge <> fold:242 var
prf 19997:20002 NodepOfDep fold_1
R20021:20021 Coq.FSets.FSetBridge M t defax
binder 20017:20017 <> s:243
binder 20025:20025 <> A:244
R20040:20040 Coq.FSets.FSetBridge <> A:244 var
binder 20036:20036 <> i:245
R20051:20054 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20048:20050 Coq.FSets.FSetBridge M elt def
R20056:20059 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20055:20055 Coq.FSets.FSetBridge <> A:244 var
R20060:20060 Coq.FSets.FSetBridge <> A:244 var
binder 20044:20044 <> f:246
R20077:20079 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20067:20070 Coq.FSets.FSetBridge NodepOfDep fold def
R20076:20076 Coq.FSets.FSetBridge <> i:245 var
R20074:20074 Coq.FSets.FSetBridge <> s:243 var
R20072:20072 Coq.FSets.FSetBridge <> f:246 var
R20080:20088 Coq.Lists.List <> fold_left def
R20122:20122 Coq.FSets.FSetBridge <> i:245 var
R20110:20117 Coq.FSets.FSetBridge NodepOfDep elements def
R20119:20119 Coq.FSets.FSetBridge <> s:243 var
binder 20095:20095 <> a:247
binder 20097:20097 <> e:248
R20102:20102 Coq.FSets.FSetBridge <> f:246 var
R20106:20106 Coq.FSets.FSetBridge <> a:247 var
R20104:20104 Coq.FSets.FSetBridge <> e:248 var
R20153:20156 Coq.FSets.FSetBridge NodepOfDep fold def
R20165:20170 Coq.FSets.FSetBridge M fold defax
R20187:20194 Coq.FSets.FSetBridge NodepOfDep elements def
R20216:20225 Coq.FSets.FSetBridge M elements defax
R20165:20170 Coq.FSets.FSetBridge M fold defax
R20216:20225 Coq.FSets.FSetBridge M elements defax
def 20258:20262 NodepOfDep f_dec
R20285:20288 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20282:20284 Coq.FSets.FSetBridge M elt def
R20289:20292 Coq.Init.Datatypes <> bool ind
binder 20278:20278 <> f:249
R20300:20302 Coq.FSets.FSetBridge M elt def
binder 20296:20296 <> x:250
R20306:20306 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R20317:20321 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R20333:20333 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R20310:20312 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20307:20307 Coq.FSets.FSetBridge <> f:249 var
R20309:20309 Coq.FSets.FSetBridge <> x:250 var
R20313:20316 Coq.Init.Datatypes <> true constr
R20325:20328 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R20322:20322 Coq.FSets.FSetBridge <> f:249 var
R20324:20324 Coq.FSets.FSetBridge <> x:250 var
R20329:20332 Coq.Init.Datatypes <> true constr
prf 20405:20416 NodepOfDep compat_P_aux
R20437:20440 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20434:20436 Coq.FSets.FSetBridge M elt def
R20441:20444 Coq.Init.Datatypes <> bool ind
binder 20430:20430 <> f:251
R20468:20471 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20450:20460 Coq.Lists.SetoidList <> compat_bool def
R20467:20467 Coq.FSets.FSetBridge <> f:251 var
R20462:20465 Coq.FSets.FSetBridge M.E eq defax
R20472:20479 Coq.Lists.SetoidList <> compat_P def
binder 20491:20491 <> x:252
R20499:20501 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20496:20496 Coq.FSets.FSetBridge <> f:251 var
R20498:20498 Coq.FSets.FSetBridge <> x:252 var
R20502:20505 Coq.Init.Datatypes <> true constr
R20481:20484 Coq.FSets.FSetBridge M.E eq defax
R20530:20540 Coq.Lists.SetoidList <> compat_bool def
R20543:20550 Coq.Lists.SetoidList <> compat_P def
R20553:20558 Coq.Classes.Morphisms <> Proper class
R20561:20570 Coq.Classes.Morphisms <> respectful def
R20573:20576 Coq.Program.Basics <> impl def
def 20690:20695 NodepOfDep filter
R20705:20708 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20702:20704 Coq.FSets.FSetBridge M elt def
R20709:20712 Coq.Init.Datatypes <> bool ind
binder 20698:20698 <> f:253
R20720:20720 Coq.FSets.FSetBridge M t defax
binder 20716:20716 <> s:254
R20725:20725 Coq.FSets.FSetBridge M t defax
R20749:20754 Coq.FSets.FSetBridge M filter defax
R20791:20791 Coq.FSets.FSetBridge <> s:254 var
R20782:20786 Coq.FSets.FSetBridge NodepOfDep f_dec def
R20788:20788 Coq.FSets.FSetBridge <> f:253 var
binder 20764:20764 <> x:255
R20772:20774 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20769:20769 Coq.FSets.FSetBridge <> f:253 var
R20771:20771 Coq.FSets.FSetBridge <> x:255 var
R20775:20778 Coq.Init.Datatypes <> true constr
binder 20739:20740 <> s':256
R20796:20797 Coq.FSets.FSetBridge <> s':256 var
prf 20809:20816 NodepOfDep filter_1
R20835:20835 Coq.FSets.FSetBridge M t defax
binder 20831:20831 <> s:257
R20843:20845 Coq.FSets.FSetBridge M elt def
binder 20839:20839 <> x:258
R20856:20859 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20853:20855 Coq.FSets.FSetBridge M elt def
R20860:20863 Coq.Init.Datatypes <> bool ind
binder 20849:20849 <> f:259
R20888:20891 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20870:20880 Coq.Lists.SetoidList <> compat_bool def
R20887:20887 Coq.FSets.FSetBridge <> f:259 var
R20882:20885 Coq.FSets.FSetBridge M.E eq defax
R20909:20912 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20892:20893 Coq.FSets.FSetBridge M In defax
R20898:20903 Coq.FSets.FSetBridge NodepOfDep filter def
R20907:20907 Coq.FSets.FSetBridge <> s:257 var
R20905:20905 Coq.FSets.FSetBridge <> f:259 var
R20895:20895 Coq.FSets.FSetBridge <> x:258 var
R20913:20914 Coq.FSets.FSetBridge M In defax
R20918:20918 Coq.FSets.FSetBridge <> s:257 var
R20916:20916 Coq.FSets.FSetBridge <> x:258 var
R20955:20960 Coq.FSets.FSetBridge NodepOfDep filter def
R20968:20975 Coq.FSets.FSetBridge M filter defax
R20968:20975 Coq.FSets.FSetBridge M filter defax
R21024:21035 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
R21024:21035 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
prf 21070:21077 NodepOfDep filter_2
R21096:21096 Coq.FSets.FSetBridge M t defax
binder 21092:21092 <> s:260
R21104:21106 Coq.FSets.FSetBridge M elt def
binder 21100:21100 <> x:261
R21117:21120 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21114:21116 Coq.FSets.FSetBridge M elt def
R21121:21124 Coq.Init.Datatypes <> bool ind
binder 21110:21110 <> f:262
R21149:21152 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21131:21141 Coq.Lists.SetoidList <> compat_bool def
R21148:21148 Coq.FSets.FSetBridge <> f:262 var
R21143:21146 Coq.FSets.FSetBridge M.E eq defax
R21170:21173 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21153:21154 Coq.FSets.FSetBridge M In defax
R21159:21164 Coq.FSets.FSetBridge NodepOfDep filter def
R21168:21168 Coq.FSets.FSetBridge <> s:260 var
R21166:21166 Coq.FSets.FSetBridge <> f:262 var
R21156:21156 Coq.FSets.FSetBridge <> x:261 var
R21177:21179 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21174:21174 Coq.FSets.FSetBridge <> f:262 var
R21176:21176 Coq.FSets.FSetBridge <> x:261 var
R21180:21183 Coq.Init.Datatypes <> true constr
R21220:21225 Coq.FSets.FSetBridge NodepOfDep filter def
R21233:21240 Coq.FSets.FSetBridge M filter defax
R21233:21240 Coq.FSets.FSetBridge M filter defax
R21289:21300 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
R21289:21300 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
prf 21335:21342 NodepOfDep filter_3
R21361:21361 Coq.FSets.FSetBridge M t defax
binder 21357:21357 <> s:263
R21369:21371 Coq.FSets.FSetBridge M elt def
binder 21365:21365 <> x:264
R21382:21385 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21379:21381 Coq.FSets.FSetBridge M elt def
R21386:21389 Coq.Init.Datatypes <> bool ind
binder 21375:21375 <> f:265
R21414:21417 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21396:21406 Coq.Lists.SetoidList <> compat_bool def
R21413:21413 Coq.FSets.FSetBridge <> f:265 var
R21408:21411 Coq.FSets.FSetBridge M.E eq defax
R21424:21427 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21418:21419 Coq.FSets.FSetBridge M In defax
R21423:21423 Coq.FSets.FSetBridge <> s:263 var
R21421:21421 Coq.FSets.FSetBridge <> x:264 var
R21438:21441 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21431:21433 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21428:21428 Coq.FSets.FSetBridge <> f:265 var
R21430:21430 Coq.FSets.FSetBridge <> x:264 var
R21434:21437 Coq.Init.Datatypes <> true constr
R21442:21443 Coq.FSets.FSetBridge M In defax
R21448:21453 Coq.FSets.FSetBridge NodepOfDep filter def
R21457:21457 Coq.FSets.FSetBridge <> s:263 var
R21455:21455 Coq.FSets.FSetBridge <> f:265 var
R21445:21445 Coq.FSets.FSetBridge <> x:264 var
R21495:21500 Coq.FSets.FSetBridge NodepOfDep filter def
R21508:21515 Coq.FSets.FSetBridge M filter defax
R21508:21515 Coq.FSets.FSetBridge M filter defax
R21564:21575 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
R21564:21575 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
def 21615:21621 NodepOfDep for_all
R21631:21634 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21628:21630 Coq.FSets.FSetBridge M elt def
R21635:21638 Coq.Init.Datatypes <> bool ind
binder 21624:21624 <> f:266
R21646:21646 Coq.FSets.FSetBridge M t defax
binder 21642:21642 <> s:267
R21651:21654 Coq.Init.Datatypes <> bool ind
R21666:21672 Coq.FSets.FSetBridge M for_all defax
R21709:21709 Coq.FSets.FSetBridge <> s:267 var
R21700:21704 Coq.FSets.FSetBridge NodepOfDep f_dec def
R21706:21706 Coq.FSets.FSetBridge <> f:266 var
binder 21682:21682 <> x:268
R21690:21692 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21687:21687 Coq.FSets.FSetBridge <> f:266 var
R21689:21689 Coq.FSets.FSetBridge <> x:268 var
R21693:21696 Coq.Init.Datatypes <> true constr
R21734:21738 Coq.Init.Datatypes <> false constr
R21720:21723 Coq.Init.Datatypes <> true constr
prf 21750:21758 NodepOfDep for_all_1
R21777:21777 Coq.FSets.FSetBridge M t defax
binder 21773:21773 <> s:269
R21788:21791 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21785:21787 Coq.FSets.FSetBridge M elt def
R21792:21795 Coq.Init.Datatypes <> bool ind
binder 21781:21781 <> f:270
R21820:21826 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21802:21812 Coq.Lists.SetoidList <> compat_bool def
R21819:21819 Coq.FSets.FSetBridge <> f:270 var
R21814:21817 Coq.FSets.FSetBridge M.E eq defax
R21858:21861 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21827:21833 Coq.FSets.FSetBridge M For_all def
R21857:21857 Coq.FSets.FSetBridge <> s:269 var
binder 21840:21840 <> x:271
R21848:21850 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21845:21845 Coq.FSets.FSetBridge <> f:270 var
R21847:21847 Coq.FSets.FSetBridge <> x:271 var
R21851:21854 Coq.Init.Datatypes <> true constr
R21873:21875 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21862:21868 Coq.FSets.FSetBridge NodepOfDep for_all def
R21872:21872 Coq.FSets.FSetBridge <> s:269 var
R21870:21870 Coq.FSets.FSetBridge <> f:270 var
R21876:21879 Coq.Init.Datatypes <> true constr
R21914:21920 Coq.FSets.FSetBridge NodepOfDep for_all def
R21928:21936 Coq.FSets.FSetBridge M for_all defax
R21928:21936 Coq.FSets.FSetBridge M for_all defax
prf 21985:21993 NodepOfDep for_all_2
R22012:22012 Coq.FSets.FSetBridge M t defax
binder 22008:22008 <> s:272
R22023:22026 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22020:22022 Coq.FSets.FSetBridge M elt def
R22027:22030 Coq.Init.Datatypes <> bool ind
binder 22016:22016 <> f:273
R22055:22061 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22037:22047 Coq.Lists.SetoidList <> compat_bool def
R22054:22054 Coq.FSets.FSetBridge <> f:273 var
R22049:22052 Coq.FSets.FSetBridge M.E eq defax
R22080:22083 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22073:22075 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22062:22068 Coq.FSets.FSetBridge NodepOfDep for_all def
R22072:22072 Coq.FSets.FSetBridge <> s:272 var
R22070:22070 Coq.FSets.FSetBridge <> f:273 var
R22076:22079 Coq.Init.Datatypes <> true constr
R22084:22090 Coq.FSets.FSetBridge M For_all def
R22114:22114 Coq.FSets.FSetBridge <> s:272 var
binder 22097:22097 <> x:274
R22105:22107 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22102:22102 Coq.FSets.FSetBridge <> f:273 var
R22104:22104 Coq.FSets.FSetBridge <> x:274 var
R22108:22111 Coq.Init.Datatypes <> true constr
R22149:22155 Coq.FSets.FSetBridge NodepOfDep for_all def
R22163:22171 Coq.FSets.FSetBridge M for_all defax
R22163:22171 Coq.FSets.FSetBridge M for_all defax
def 22225:22231 NodepOfDep exists_
R22241:22244 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22238:22240 Coq.FSets.FSetBridge M elt def
R22245:22248 Coq.Init.Datatypes <> bool ind
binder 22234:22234 <> f:275
R22256:22256 Coq.FSets.FSetBridge M t defax
binder 22252:22252 <> s:276
R22261:22264 Coq.Init.Datatypes <> bool ind
R22276:22282 Coq.FSets.FSetBridge M exists_ defax
R22319:22319 Coq.FSets.FSetBridge <> s:276 var
R22310:22314 Coq.FSets.FSetBridge NodepOfDep f_dec def
R22316:22316 Coq.FSets.FSetBridge <> f:275 var
binder 22292:22292 <> x:277
R22300:22302 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22297:22297 Coq.FSets.FSetBridge <> f:275 var
R22299:22299 Coq.FSets.FSetBridge <> x:277 var
R22303:22306 Coq.Init.Datatypes <> true constr
R22344:22348 Coq.Init.Datatypes <> false constr
R22330:22333 Coq.Init.Datatypes <> true constr
prf 22360:22367 NodepOfDep exists_1
R22386:22386 Coq.FSets.FSetBridge M t defax
binder 22382:22382 <> s:278
R22397:22400 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22394:22396 Coq.FSets.FSetBridge M elt def
R22401:22404 Coq.Init.Datatypes <> bool ind
binder 22390:22390 <> f:279
R22429:22432 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22411:22421 Coq.Lists.SetoidList <> compat_bool def
R22428:22428 Coq.FSets.FSetBridge <> f:279 var
R22423:22426 Coq.FSets.FSetBridge M.E eq defax
R22463:22466 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22433:22438 Coq.FSets.FSetBridge M Exists def
R22462:22462 Coq.FSets.FSetBridge <> s:278 var
binder 22445:22445 <> x:280
R22453:22455 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22450:22450 Coq.FSets.FSetBridge <> f:279 var
R22452:22452 Coq.FSets.FSetBridge <> x:280 var
R22456:22459 Coq.Init.Datatypes <> true constr
R22478:22480 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22467:22473 Coq.FSets.FSetBridge NodepOfDep exists_ def
R22477:22477 Coq.FSets.FSetBridge <> s:278 var
R22475:22475 Coq.FSets.FSetBridge <> f:279 var
R22481:22484 Coq.Init.Datatypes <> true constr
R22519:22525 Coq.FSets.FSetBridge NodepOfDep exists_ def
R22533:22541 Coq.FSets.FSetBridge M exists_ defax
R22533:22541 Coq.FSets.FSetBridge M exists_ defax
prf 22590:22597 NodepOfDep exists_2
R22616:22616 Coq.FSets.FSetBridge M t defax
binder 22612:22612 <> s:281
R22627:22630 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22624:22626 Coq.FSets.FSetBridge M elt def
R22631:22634 Coq.Init.Datatypes <> bool ind
binder 22620:22620 <> f:282
R22659:22662 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22641:22651 Coq.Lists.SetoidList <> compat_bool def
R22658:22658 Coq.FSets.FSetBridge <> f:282 var
R22653:22656 Coq.FSets.FSetBridge M.E eq defax
R22681:22684 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22674:22676 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22663:22669 Coq.FSets.FSetBridge NodepOfDep exists_ def
R22673:22673 Coq.FSets.FSetBridge <> s:281 var
R22671:22671 Coq.FSets.FSetBridge <> f:282 var
R22677:22680 Coq.Init.Datatypes <> true constr
R22685:22690 Coq.FSets.FSetBridge M Exists def
R22714:22714 Coq.FSets.FSetBridge <> s:281 var
binder 22697:22697 <> x:283
R22705:22707 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22702:22702 Coq.FSets.FSetBridge <> f:282 var
R22704:22704 Coq.FSets.FSetBridge <> x:283 var
R22708:22711 Coq.Init.Datatypes <> true constr
R22749:22755 Coq.FSets.FSetBridge NodepOfDep exists_ def
R22763:22771 Coq.FSets.FSetBridge M exists_ defax
R22763:22771 Coq.FSets.FSetBridge M exists_ defax
def 22825:22833 NodepOfDep partition
R22843:22846 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22840:22842 Coq.FSets.FSetBridge M elt def
R22847:22850 Coq.Init.Datatypes <> bool ind
binder 22836:22836 <> f:284
R22858:22858 Coq.FSets.FSetBridge M t defax
binder 22854:22854 <> s:285
R22868:22870 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R22867:22867 Coq.FSets.FSetBridge M t defax
R22871:22871 Coq.FSets.FSetBridge M t defax
R22894:22902 Coq.FSets.FSetBridge M partition defax
R22939:22939 Coq.FSets.FSetBridge <> s:285 var
R22930:22934 Coq.FSets.FSetBridge NodepOfDep f_dec def
R22936:22936 Coq.FSets.FSetBridge <> f:284 var
binder 22912:22912 <> x:286
R22920:22922 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22917:22917 Coq.FSets.FSetBridge <> f:284 var
R22919:22919 Coq.FSets.FSetBridge <> x:286 var
R22923:22926 Coq.Init.Datatypes <> true constr
binder 22885:22885 <> p:287
R22944:22944 Coq.FSets.FSetBridge <> p:287 var
prf 22956:22966 NodepOfDep partition_1
R22985:22985 Coq.FSets.FSetBridge M t defax
binder 22981:22981 <> s:288
R22996:22999 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22993:22995 Coq.FSets.FSetBridge M elt def
R23000:23003 Coq.Init.Datatypes <> bool ind
binder 22989:22989 <> f:289
R23028:23031 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23010:23020 Coq.Lists.SetoidList <> compat_bool def
R23027:23027 Coq.FSets.FSetBridge <> f:289 var
R23022:23025 Coq.FSets.FSetBridge M.E eq defax
R23032:23036 Coq.FSets.FSetBridge M Equal def
R23061:23066 Coq.FSets.FSetBridge NodepOfDep filter def
R23070:23070 Coq.FSets.FSetBridge <> s:288 var
R23068:23068 Coq.FSets.FSetBridge <> f:289 var
R23039:23041 Coq.Init.Datatypes <> fst def
R23044:23052 Coq.FSets.FSetBridge NodepOfDep partition def
R23056:23056 Coq.FSets.FSetBridge <> s:288 var
R23054:23054 Coq.FSets.FSetBridge <> f:289 var
R23106:23114 Coq.FSets.FSetBridge NodepOfDep partition def
R23122:23132 Coq.FSets.FSetBridge M partition defax
R23122:23132 Coq.FSets.FSetBridge M partition defax
R23202:23213 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
R23202:23213 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
R23256:23260 Coq.FSets.FSetBridge M Equal def
R23284:23291 Coq.FSets.FSetBridge NodepOfDep filter_3 thm
R23284:23291 Coq.FSets.FSetBridge NodepOfDep filter_3 thm
R23343:23344 Coq.FSets.FSetBridge M In defax
R23343:23344 Coq.FSets.FSetBridge M In defax
R23364:23371 Coq.FSets.FSetBridge NodepOfDep filter_1 thm
R23364:23371 Coq.FSets.FSetBridge NodepOfDep filter_1 thm
R23423:23425 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23426:23429 Coq.Init.Datatypes <> true constr
R23423:23425 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23426:23429 Coq.Init.Datatypes <> true constr
R23464:23471 Coq.FSets.FSetBridge NodepOfDep filter_2 thm
R23464:23471 Coq.FSets.FSetBridge NodepOfDep filter_2 thm
prf 23497:23507 NodepOfDep partition_2
R23526:23526 Coq.FSets.FSetBridge M t defax
binder 23522:23522 <> s:290
R23537:23540 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23534:23536 Coq.FSets.FSetBridge M elt def
R23541:23544 Coq.Init.Datatypes <> bool ind
binder 23530:23530 <> f:291
R23569:23572 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23551:23561 Coq.Lists.SetoidList <> compat_bool def
R23568:23568 Coq.FSets.FSetBridge <> f:291 var
R23563:23566 Coq.FSets.FSetBridge M.E eq defax
R23573:23577 Coq.FSets.FSetBridge M Equal def
R23602:23607 Coq.FSets.FSetBridge NodepOfDep filter def
R23631:23631 Coq.FSets.FSetBridge <> s:290 var
binder 23614:23614 <> x:292
R23619:23622 Coq.Init.Datatypes <> negb def
R23625:23625 Coq.FSets.FSetBridge <> f:291 var
R23627:23627 Coq.FSets.FSetBridge <> x:292 var
R23580:23582 Coq.Init.Datatypes <> snd def
R23585:23593 Coq.FSets.FSetBridge NodepOfDep partition def
R23597:23597 Coq.FSets.FSetBridge <> s:290 var
R23595:23595 Coq.FSets.FSetBridge <> f:291 var
R23667:23675 Coq.FSets.FSetBridge NodepOfDep partition def
R23683:23693 Coq.FSets.FSetBridge M partition defax
R23683:23693 Coq.FSets.FSetBridge M partition defax
R23763:23774 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
R23763:23774 Coq.FSets.FSetBridge NodepOfDep compat_P_aux thm
R23815:23825 Coq.Lists.SetoidList <> compat_bool def
binder 23837:23837 <> x:293
R23842:23845 Coq.Init.Datatypes <> negb def
R23850:23850 Coq.FSets.FSetBridge <> x:293 var
R23827:23830 Coq.FSets.FSetBridge M.E eq defax
R23815:23825 Coq.Lists.SetoidList <> compat_bool def
binder 23837:23837 <> x:294
R23842:23845 Coq.Init.Datatypes <> negb def
R23850:23850 Coq.FSets.FSetBridge <> x:294 var
R23827:23830 Coq.FSets.FSetBridge M.E eq defax
R23881:23891 Coq.Lists.SetoidList <> compat_bool def
R23894:23899 Coq.Classes.Morphisms <> Proper class
R23902:23911 Coq.Classes.Morphisms <> respectful def
R23929:23935 Coq.Init.Logic <> f_equal thm
R23937:23940 Coq.Init.Datatypes <> negb def
R23929:23935 Coq.Init.Logic <> f_equal thm
R23937:23940 Coq.Init.Datatypes <> negb def
R23973:23977 Coq.FSets.FSetBridge M Equal def
R24001:24008 Coq.FSets.FSetBridge NodepOfDep filter_3 thm
R24001:24008 Coq.FSets.FSetBridge NodepOfDep filter_3 thm
R24070:24071 Coq.FSets.FSetBridge M In defax
R24070:24071 Coq.FSets.FSetBridge M In defax
R24091:24098 Coq.FSets.FSetBridge NodepOfDep filter_1 thm
R24091:24098 Coq.FSets.FSetBridge NodepOfDep filter_1 thm
R24150:24152 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24153:24156 Coq.Init.Datatypes <> true constr
R24150:24152 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24153:24156 Coq.Init.Datatypes <> true constr
R24187:24194 Coq.FSets.FSetBridge NodepOfDep filter_2 thm
R24187:24194 Coq.FSets.FSetBridge NodepOfDep filter_2 thm
def 24287:24289 NodepOfDep elt
R24294:24296 Coq.FSets.FSetBridge M elt def
def 24312:24312 NodepOfDep t
R24317:24317 Coq.FSets.FSetBridge M t defax
def 24334:24335 NodepOfDep In
R24340:24341 Coq.FSets.FSetBridge M In defax
def 24357:24361 NodepOfDep Equal
binder 24363:24363 <> s:295
binder 24365:24366 <> s':296
R24382:24384 Coq.FSets.FSetBridge NodepOfDep elt def
binder 24378:24378 <> a:297
R24393:24397 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R24387:24388 Coq.FSets.FSetBridge NodepOfDep In def
R24392:24392 Coq.FSets.FSetBridge <> s:295 var
R24390:24390 Coq.FSets.FSetBridge <> a:297 var
R24398:24399 Coq.FSets.FSetBridge NodepOfDep In def
R24403:24404 Coq.FSets.FSetBridge <> s':296 var
R24401:24401 Coq.FSets.FSetBridge <> a:297 var
def 24420:24425 NodepOfDep Subset
binder 24427:24427 <> s:298
binder 24429:24430 <> s':299
R24446:24448 Coq.FSets.FSetBridge NodepOfDep elt def
binder 24442:24442 <> a:300
R24457:24460 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24451:24452 Coq.FSets.FSetBridge NodepOfDep In def
R24456:24456 Coq.FSets.FSetBridge <> s:298 var
R24454:24454 Coq.FSets.FSetBridge <> a:300 var
R24461:24462 Coq.FSets.FSetBridge NodepOfDep In def
R24466:24467 Coq.FSets.FSetBridge <> s':299 var
R24464:24464 Coq.FSets.FSetBridge <> a:300 var
def 24483:24485 NodepOfDep Add
R24492:24494 Coq.FSets.FSetBridge NodepOfDep elt def
binder 24488:24488 <> x:301
R24505:24505 Coq.FSets.FSetBridge NodepOfDep t def
binder 24498:24498 <> s:302
binder 24500:24501 <> s':303
R24526:24528 Coq.FSets.FSetBridge NodepOfDep elt def
binder 24522:24522 <> y:304
R24538:24542 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R24531:24532 Coq.FSets.FSetBridge NodepOfDep In def
R24536:24537 Coq.FSets.FSetBridge <> s':303 var
R24534:24534 Coq.FSets.FSetBridge <> y:304 var
R24551:24554 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R24543:24546 Coq.FSets.FSetBridge M.E eq defax
R24550:24550 Coq.FSets.FSetBridge <> x:301 var
R24548:24548 Coq.FSets.FSetBridge <> y:304 var
R24555:24556 Coq.FSets.FSetBridge NodepOfDep In def
R24560:24560 Coq.FSets.FSetBridge <> s:302 var
R24558:24558 Coq.FSets.FSetBridge <> y:304 var
def 24576:24580 NodepOfDep Empty
binder 24582:24582 <> s:305
R24598:24600 Coq.FSets.FSetBridge NodepOfDep elt def
binder 24594:24594 <> a:306
R24603:24604 Coq.Init.Logic <> ::type_scope:'~'_x not
R24605:24606 Coq.FSets.FSetBridge NodepOfDep In def
R24610:24610 Coq.FSets.FSetBridge <> s:305 var
R24608:24608 Coq.FSets.FSetBridge <> a:306 var
def 24626:24632 NodepOfDep For_all
R24642:24645 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24639:24641 Coq.FSets.FSetBridge NodepOfDep elt def
binder 24635:24635 <> P:307
R24657:24657 Coq.FSets.FSetBridge NodepOfDep t def
binder 24653:24653 <> s:308
R24678:24680 Coq.FSets.FSetBridge NodepOfDep elt def
binder 24674:24674 <> x:309
R24689:24692 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24683:24684 Coq.FSets.FSetBridge NodepOfDep In def
R24688:24688 Coq.FSets.FSetBridge <> s:308 var
R24686:24686 Coq.FSets.FSetBridge <> x:309 var
R24693:24693 Coq.FSets.FSetBridge <> P:307 var
R24695:24695 Coq.FSets.FSetBridge <> x:309 var
def 24711:24716 NodepOfDep Exists
R24726:24729 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24723:24725 Coq.FSets.FSetBridge NodepOfDep elt def
binder 24719:24719 <> P:310
R24741:24741 Coq.FSets.FSetBridge NodepOfDep t def
binder 24737:24737 <> s:311
R24751:24757 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R24765:24766 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R24762:24764 Coq.FSets.FSetBridge NodepOfDep elt def
binder 24758:24758 <> x:312
R24773:24776 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R24767:24768 Coq.FSets.FSetBridge NodepOfDep In def
R24772:24772 Coq.FSets.FSetBridge <> s:311 var
R24770:24770 Coq.FSets.FSetBridge <> x:312 var
R24777:24777 Coq.FSets.FSetBridge <> P:310 var
R24779:24779 Coq.FSets.FSetBridge <> x:312 var
def 24796:24799 NodepOfDep In_1
R24804:24808 Coq.FSets.FSetBridge M eq_In defax
def 24825:24826 NodepOfDep eq
R24831:24835 Coq.FSets.FSetBridge NodepOfDep Equal def
def 24851:24852 NodepOfDep lt
R24857:24858 Coq.FSets.FSetBridge M lt defax
def 24874:24880 NodepOfDep eq_refl
R24885:24891 Coq.FSets.FSetBridge M eq_refl defax
def 24907:24912 NodepOfDep eq_sym
R24917:24922 Coq.FSets.FSetBridge M eq_sym defax
def 24938:24945 NodepOfDep eq_trans
R24950:24957 Coq.FSets.FSetBridge M eq_trans defax
def 24973:24980 NodepOfDep lt_trans
R24985:24992 Coq.FSets.FSetBridge M lt_trans defax
def 25008:25016 NodepOfDep lt_not_eq
R25021:25029 Coq.FSets.FSetBridge M lt_not_eq defax
def 25045:25051 NodepOfDep compare
R25056:25062 Coq.FSets.FSetBridge M compare defax
R25080:25080 Coq.FSets.FSetBridge M.E <> modtype
mod 25075:25075 <> NodepOfDep.E
R25088:25097 Coq.FSets.FSetBridge NodepOfDep <> mod
