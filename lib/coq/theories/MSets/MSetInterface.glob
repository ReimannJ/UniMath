DIGEST 793cf14204e0eabca59e30f85f3ae4b0
FCoq.MSets.MSetInterface
R1629:1632 Coq.Bool.Bool <> <> lib
R1634:1643 Coq.Lists.SetoidList <> <> lib
R1645:1659 Coq.Classes.RelationClasses <> <> lib
R1661:1669 Coq.Classes.Morphisms <> <> lib
R1672:1684 Coq.Classes.RelationPairs <> <> lib
R1686:1695 Coq.Structures.Equalities <> <> lib
R1697:1702 Coq.Structures.Orders <> <> lib
R1704:1714 Coq.Structures.OrdersFacts <> <> lib
modtype 1777:1782 <> TypElt
ax 1797:1797 TypElt t
ax 1799:1801 TypElt elt
R1815:1820 Coq.MSets.MSetInterface TypElt <> modtype
R1854:1859 Coq.MSets.MSetInterface TypElt <> mod
modtype 1836:1842 <> HasWOps
R1836:1842 Coq.MSets.MSetInterface T <> mod
ax 1876:1880 HasWOps empty
R1884:1884 Coq.MSets.MSetInterface T t defax
ax 1924:1931 HasWOps is_empty
R1936:1939 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1935:1935 Coq.MSets.MSetInterface T t defax
R1940:1943 Coq.Init.Datatypes <> bool ind
ax 2004:2006 HasWOps mem
R2013:2016 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2010:2012 Coq.MSets.MSetInterface T elt defax
R2018:2021 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2017:2017 Coq.MSets.MSetInterface T t defax
R2022:2025 Coq.Init.Datatypes <> bool ind
ax 2102:2104 HasWOps add
R2111:2114 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2108:2110 Coq.MSets.MSetInterface T elt defax
R2116:2119 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2115:2115 Coq.MSets.MSetInterface T t defax
R2120:2120 Coq.MSets.MSetInterface T t defax
ax 2267:2275 HasWOps singleton
R2282:2285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2279:2281 Coq.MSets.MSetInterface T elt defax
R2286:2286 Coq.MSets.MSetInterface T t defax
ax 2374:2379 HasWOps remove
R2386:2389 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2383:2385 Coq.MSets.MSetInterface T elt defax
R2391:2394 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2390:2390 Coq.MSets.MSetInterface T t defax
R2395:2395 Coq.MSets.MSetInterface T t defax
ax 2543:2547 HasWOps union
R2552:2555 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2551:2551 Coq.MSets.MSetInterface T t defax
R2557:2560 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2556:2556 Coq.MSets.MSetInterface T t defax
R2561:2561 Coq.MSets.MSetInterface T t defax
ax 2597:2601 HasWOps inter
R2606:2609 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2605:2605 Coq.MSets.MSetInterface T t defax
R2611:2614 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2610:2610 Coq.MSets.MSetInterface T t defax
R2615:2615 Coq.MSets.MSetInterface T t defax
ax 2658:2661 HasWOps diff
R2666:2669 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2665:2665 Coq.MSets.MSetInterface T t defax
R2671:2674 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2670:2670 Coq.MSets.MSetInterface T t defax
R2675:2675 Coq.MSets.MSetInterface T t defax
ax 2716:2720 HasWOps equal
R2725:2728 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2724:2724 Coq.MSets.MSetInterface T t defax
R2730:2733 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2729:2729 Coq.MSets.MSetInterface T t defax
R2734:2737 Coq.Init.Datatypes <> bool ind
ax 2859:2864 HasWOps subset
R2869:2872 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2868:2868 Coq.MSets.MSetInterface T t defax
R2874:2877 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2873:2873 Coq.MSets.MSetInterface T t defax
R2878:2881 Coq.Init.Datatypes <> bool ind
ax 2979:2982 HasWOps fold
binder 2993:2993 <> A:14
R3003:3003 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3017:3021 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3007:3010 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3004:3006 Coq.MSets.MSetInterface T elt defax
R3012:3015 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3011:3011 Coq.MSets.MSetInterface <> A:14 var
R3016:3016 Coq.MSets.MSetInterface <> A:14 var
R3023:3026 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3022:3022 Coq.MSets.MSetInterface T t defax
R3028:3031 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3027:3027 Coq.MSets.MSetInterface <> A:14 var
R3032:3032 Coq.MSets.MSetInterface <> A:14 var
ax 3233:3239 HasWOps for_all
R3243:3243 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3255:3259 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3247:3250 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3244:3246 Coq.MSets.MSetInterface T elt defax
R3251:3254 Coq.Init.Datatypes <> bool ind
R3261:3264 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3260:3260 Coq.MSets.MSetInterface T t defax
R3265:3268 Coq.Init.Datatypes <> bool ind
ax 3370:3376 HasWOps exists_
R3380:3380 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3392:3396 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3384:3387 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3381:3383 Coq.MSets.MSetInterface T elt defax
R3388:3391 Coq.Init.Datatypes <> bool ind
R3398:3401 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3397:3397 Coq.MSets.MSetInterface T t defax
R3402:3405 Coq.Init.Datatypes <> bool ind
ax 3516:3521 HasWOps filter
R3525:3525 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3537:3541 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3529:3532 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3526:3528 Coq.MSets.MSetInterface T elt defax
R3533:3536 Coq.Init.Datatypes <> bool ind
R3543:3546 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3542:3542 Coq.MSets.MSetInterface T t defax
R3547:3547 Coq.MSets.MSetInterface T t defax
ax 3654:3662 HasWOps partition
R3666:3666 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3678:3682 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3670:3673 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3667:3669 Coq.MSets.MSetInterface T elt defax
R3674:3677 Coq.Init.Datatypes <> bool ind
R3684:3687 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3683:3683 Coq.MSets.MSetInterface T t defax
R3689:3691 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R3688:3688 Coq.MSets.MSetInterface T t defax
R3692:3692 Coq.MSets.MSetInterface T t defax
ax 3927:3934 HasWOps cardinal
R3939:3942 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3938:3938 Coq.MSets.MSetInterface T t defax
R3943:3945 Coq.Init.Datatypes <> nat ind
ax 4010:4017 HasWOps elements
R4022:4025 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4021:4021 Coq.MSets.MSetInterface T t defax
R4026:4029 Coq.Init.Datatypes <> list ind
R4031:4033 Coq.MSets.MSetInterface T elt defax
ax 4122:4127 HasWOps choose
R4132:4135 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4131:4131 Coq.MSets.MSetInterface T t defax
R4136:4141 Coq.Init.Datatypes <> option ind
R4143:4145 Coq.MSets.MSetInterface T elt defax
R4318:4324 Coq.MSets.MSetInterface HasWOps <> modtype
R4350:4362 Coq.Structures.Equalities DecidableType <> mod
modtype 4340:4343 <> WOps
def 4379:4381 WOps elt
R4386:4388 Coq.MSets.MSetInterface E t defax
ax 4403:4403 WOps t
R4456:4462 Coq.MSets.MSetInterface HasWOps <> mod
R4469:4472 Coq.MSets.MSetInterface WOps <> modtype
R4638:4650 Coq.Structures.Equalities DecidableType <> mod
modtype 4625:4631 <> WSetsOn
R4709:4712 Coq.MSets.MSetInterface WOps <> mod
R4714:4714 Coq.MSets.MSetInterface E <> modtype
ax 4758:4759 WSetsOn In
R4766:4769 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4763:4765 Coq.MSets.MSetInterface WSetsOn elt def
R4771:4774 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4770:4770 Coq.MSets.MSetInterface WSetsOn t defax
inst 4810:4818 WSetsOn In_compat
R4822:4827 Coq.Classes.Morphisms <> Proper class
R4847:4848 Coq.MSets.MSetInterface WSetsOn In defax
R4834:4836 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R4830:4833 Coq.MSets.MSetInterface E eq defax
R4839:4841 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R4837:4838 Coq.Init.Logic <> eq ind
R4842:4844 Coq.Init.Logic <> iff def
def 4865:4869 WSetsOn Equal
binder 4871:4871 <> s:25
binder 4873:4874 <> s':26
R4890:4892 Coq.MSets.MSetInterface WSetsOn elt def
binder 4886:4886 <> a:27
R4901:4905 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R4895:4896 Coq.MSets.MSetInterface WSetsOn In defax
R4900:4900 Coq.MSets.MSetInterface <> s:25 var
R4898:4898 Coq.MSets.MSetInterface <> a:27 var
R4906:4907 Coq.MSets.MSetInterface WSetsOn In defax
R4911:4912 Coq.MSets.MSetInterface <> s':26 var
R4909:4909 Coq.MSets.MSetInterface <> a:27 var
def 4928:4933 WSetsOn Subset
binder 4935:4935 <> s:28
binder 4937:4938 <> s':29
R4954:4956 Coq.MSets.MSetInterface WSetsOn elt def
binder 4950:4950 <> a:30
R4965:4968 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4959:4960 Coq.MSets.MSetInterface WSetsOn In defax
R4964:4964 Coq.MSets.MSetInterface <> s:28 var
R4962:4962 Coq.MSets.MSetInterface <> a:30 var
R4969:4970 Coq.MSets.MSetInterface WSetsOn In defax
R4974:4975 Coq.MSets.MSetInterface <> s':29 var
R4972:4972 Coq.MSets.MSetInterface <> a:30 var
def 4991:4995 WSetsOn Empty
binder 4997:4997 <> s:31
R5013:5015 Coq.MSets.MSetInterface WSetsOn elt def
binder 5009:5009 <> a:32
R5018:5019 Coq.Init.Logic <> ::type_scope:'~'_x not
R5020:5021 Coq.MSets.MSetInterface WSetsOn In defax
R5025:5025 Coq.MSets.MSetInterface <> s:31 var
R5023:5023 Coq.MSets.MSetInterface <> a:32 var
def 5041:5047 WSetsOn For_all
R5057:5060 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5054:5056 Coq.MSets.MSetInterface WSetsOn elt def
binder 5050:5050 <> P:33
binder 5067:5067 <> s:34
binder 5079:5079 <> x:35
R5088:5091 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5082:5083 Coq.MSets.MSetInterface WSetsOn In defax
R5087:5087 Coq.MSets.MSetInterface <> s:34 var
R5085:5085 Coq.MSets.MSetInterface <> x:35 var
R5092:5092 Coq.MSets.MSetInterface <> P:33 var
R5094:5094 Coq.MSets.MSetInterface <> x:35 var
def 5110:5115 WSetsOn Exists
R5125:5128 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5122:5124 Coq.MSets.MSetInterface WSetsOn elt def
binder 5118:5118 <> P:36
binder 5135:5135 <> s:37
R5140:5146 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5148:5149 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 5147:5147 <> x:38
R5156:5159 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5150:5151 Coq.MSets.MSetInterface WSetsOn In defax
R5155:5155 Coq.MSets.MSetInterface <> s:37 var
R5153:5153 Coq.MSets.MSetInterface <> x:38 var
R5160:5160 Coq.MSets.MSetInterface <> P:36 var
R5162:5162 Coq.MSets.MSetInterface <> x:38 var
R5193:5197 Coq.MSets.MSetInterface WSetsOn Equal def
not 5177:5177 WSetsOn :::x_'[=]'_x
R5265:5270 Coq.MSets.MSetInterface WSetsOn Subset def
not 5248:5248 WSetsOn :::x_'[<=]'_x
def 5324:5325 WSetsOn eq
R5330:5333 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5329:5329 Coq.MSets.MSetInterface WSetsOn t defax
R5335:5338 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5334:5334 Coq.MSets.MSetInterface WSetsOn t defax
R5347:5351 Coq.MSets.MSetInterface WSetsOn Equal def
R5364:5367 Coq.Structures.Equalities IsEq <> mod
R5440:5447 Coq.Structures.Equalities HasEqDec <> mod
sec 5503:5506 WSetsOn Spec
var 5520:5520 WSetsOn.Spec s
var 5522:5523 WSetsOn.Spec s'
R5526:5526 Coq.MSets.MSetInterface WSetsOn t defax
var 5540:5540 WSetsOn.Spec x
var 5542:5542 WSetsOn.Spec y
R5546:5548 Coq.MSets.MSetInterface WSetsOn elt def
var 5562:5562 WSetsOn.Spec f
R5569:5572 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5566:5568 Coq.MSets.MSetInterface WSetsOn elt def
R5573:5576 Coq.Init.Datatypes <> bool ind
abbrev 5590:5596 WSetsOn compatb
R5602:5607 Coq.Classes.Morphisms <> Proper class
R5614:5616 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R5610:5613 Coq.MSets.MSetInterface E eq defax
R5617:5624 Coq.Init.Logic <> eq ind
ax 5657:5664 WSetsOn mem_spec
R5682:5686 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5675:5677 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5668:5670 Coq.MSets.MSetInterface WSetsOn mem defax
R5674:5674 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5672:5672 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R5678:5681 Coq.Init.Datatypes <> true constr
R5687:5688 Coq.MSets.MSetInterface WSetsOn In defax
R5692:5692 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5690:5690 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
ax 5707:5716 WSetsOn equal_spec
R5737:5741 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5730:5732 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5720:5724 Coq.MSets.MSetInterface WSetsOn equal defax
R5728:5729 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
R5726:5726 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5733:5736 Coq.Init.Datatypes <> true constr
R5743:5745 Coq.MSets.MSetInterface WSetsOn :::x_'[=]'_x not
R5742:5742 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5746:5747 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
ax 5762:5772 WSetsOn subset_spec
R5794:5798 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5787:5789 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5776:5781 Coq.MSets.MSetInterface WSetsOn subset defax
R5785:5786 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
R5783:5783 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5790:5793 Coq.Init.Datatypes <> true constr
R5800:5803 Coq.MSets.MSetInterface WSetsOn :::x_'[<=]'_x not
R5799:5799 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5804:5805 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
ax 5820:5829 WSetsOn empty_spec
R5833:5837 Coq.MSets.MSetInterface WSetsOn Empty def
R5839:5843 Coq.MSets.MSetInterface WSetsOn empty defax
ax 5858:5870 WSetsOn is_empty_spec
R5891:5895 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5884:5886 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5874:5881 Coq.MSets.MSetInterface WSetsOn is_empty defax
R5883:5883 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5887:5890 Coq.Init.Datatypes <> true constr
R5896:5900 Coq.MSets.MSetInterface WSetsOn Empty def
R5902:5902 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
ax 5917:5924 WSetsOn add_spec
R5942:5946 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5928:5929 Coq.MSets.MSetInterface WSetsOn In defax
R5934:5936 Coq.MSets.MSetInterface WSetsOn add defax
R5940:5940 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5938:5938 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R5931:5931 Coq.MSets.MSetInterface <> WSetsOn.Spec.y var
R5955:5958 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R5947:5950 Coq.MSets.MSetInterface E eq defax
R5954:5954 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R5952:5952 Coq.MSets.MSetInterface <> WSetsOn.Spec.y var
R5959:5960 Coq.MSets.MSetInterface WSetsOn In defax
R5964:5964 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R5962:5962 Coq.MSets.MSetInterface <> WSetsOn.Spec.y var
ax 5979:5989 WSetsOn remove_spec
R6010:6014 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5993:5994 Coq.MSets.MSetInterface WSetsOn In defax
R5999:6004 Coq.MSets.MSetInterface WSetsOn remove defax
R6008:6008 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6006:6006 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R5996:5996 Coq.MSets.MSetInterface <> WSetsOn.Spec.y var
R6021:6024 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6015:6016 Coq.MSets.MSetInterface WSetsOn In defax
R6020:6020 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6018:6018 Coq.MSets.MSetInterface <> WSetsOn.Spec.y var
R6025:6025 Coq.Init.Logic <> ::type_scope:'~'_x not
R6026:6029 Coq.MSets.MSetInterface E eq defax
R6033:6033 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6031:6031 Coq.MSets.MSetInterface <> WSetsOn.Spec.y var
ax 6048:6061 WSetsOn singleton_spec
R6083:6087 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6065:6066 Coq.MSets.MSetInterface WSetsOn In defax
R6071:6079 Coq.MSets.MSetInterface WSetsOn singleton defax
R6081:6081 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6068:6068 Coq.MSets.MSetInterface <> WSetsOn.Spec.y var
R6088:6091 Coq.MSets.MSetInterface E eq defax
R6095:6095 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6093:6093 Coq.MSets.MSetInterface <> WSetsOn.Spec.y var
ax 6110:6119 WSetsOn union_spec
R6140:6144 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6123:6124 Coq.MSets.MSetInterface WSetsOn In defax
R6129:6133 Coq.MSets.MSetInterface WSetsOn union defax
R6137:6138 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
R6135:6135 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6126:6126 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6151:6154 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R6145:6146 Coq.MSets.MSetInterface WSetsOn In defax
R6150:6150 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6148:6148 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6155:6156 Coq.MSets.MSetInterface WSetsOn In defax
R6160:6161 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
R6158:6158 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
ax 6176:6185 WSetsOn inter_spec
R6206:6210 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6189:6190 Coq.MSets.MSetInterface WSetsOn In defax
R6195:6199 Coq.MSets.MSetInterface WSetsOn inter defax
R6203:6204 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
R6201:6201 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6192:6192 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6217:6220 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6211:6212 Coq.MSets.MSetInterface WSetsOn In defax
R6216:6216 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6214:6214 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6221:6222 Coq.MSets.MSetInterface WSetsOn In defax
R6226:6227 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
R6224:6224 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
ax 6242:6250 WSetsOn diff_spec
R6270:6274 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6254:6255 Coq.MSets.MSetInterface WSetsOn In defax
R6260:6263 Coq.MSets.MSetInterface WSetsOn diff defax
R6267:6268 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
R6265:6265 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6257:6257 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6281:6284 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6275:6276 Coq.MSets.MSetInterface WSetsOn In defax
R6280:6280 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6278:6278 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6285:6285 Coq.Init.Logic <> ::type_scope:'~'_x not
R6286:6287 Coq.MSets.MSetInterface WSetsOn In defax
R6291:6292 Coq.MSets.MSetInterface <> WSetsOn.Spec.s' var
R6289:6289 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
ax 6307:6315 WSetsOn fold_spec
binder 6327:6327 <> A:55
R6342:6342 Coq.MSets.MSetInterface <> A:55 var
binder 6338:6338 <> i:56
R6353:6356 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6350:6352 Coq.MSets.MSetInterface WSetsOn elt def
R6358:6361 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6357:6357 Coq.MSets.MSetInterface <> A:55 var
R6362:6362 Coq.MSets.MSetInterface <> A:55 var
binder 6346:6346 <> f:57
R6380:6382 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6370:6373 Coq.MSets.MSetInterface WSetsOn fold defax
R6379:6379 Coq.MSets.MSetInterface <> i:56 var
R6377:6377 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6375:6375 Coq.MSets.MSetInterface <> f:57 var
R6383:6391 Coq.Lists.List <> fold_left def
R6415:6415 Coq.MSets.MSetInterface <> i:56 var
R6403:6410 Coq.MSets.MSetInterface WSetsOn elements defax
R6412:6412 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6394:6397 Coq.Program.Basics <> flip def
R6399:6399 Coq.MSets.MSetInterface <> f:57 var
ax 6430:6442 WSetsOn cardinal_spec
R6456:6458 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6446:6453 Coq.MSets.MSetInterface WSetsOn cardinal defax
R6455:6455 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6459:6464 Coq.Init.Datatypes <> length def
R6467:6474 Coq.MSets.MSetInterface WSetsOn elements defax
R6476:6476 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
ax 6492:6502 WSetsOn filter_spec
R6515:6523 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6566:6566 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6506:6512 Coq.MSets.MSetInterface WSetsOn compatb abbrev
R6514:6514 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6541:6545 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6524:6525 Coq.MSets.MSetInterface WSetsOn In defax
R6530:6535 Coq.MSets.MSetInterface WSetsOn filter defax
R6539:6539 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6537:6537 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6527:6527 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6552:6555 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6546:6547 Coq.MSets.MSetInterface WSetsOn In defax
R6551:6551 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6549:6549 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6559:6561 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6556:6556 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6558:6558 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6562:6565 Coq.Init.Datatypes <> true constr
ax 6581:6592 WSetsOn for_all_spec
R6605:6613 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6668:6668 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6596:6602 Coq.MSets.MSetInterface WSetsOn compatb abbrev
R6604:6604 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6632:6636 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6625:6627 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6614:6620 Coq.MSets.MSetInterface WSetsOn for_all defax
R6624:6624 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6622:6622 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6628:6631 Coq.Init.Datatypes <> true constr
R6637:6643 Coq.MSets.MSetInterface WSetsOn For_all def
R6667:6667 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
binder 6650:6650 <> x:61
R6658:6660 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6655:6655 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6657:6657 Coq.MSets.MSetInterface <> x:61 var
R6661:6664 Coq.Init.Datatypes <> true constr
ax 6683:6693 WSetsOn exists_spec
R6706:6714 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6768:6768 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6697:6703 Coq.MSets.MSetInterface WSetsOn compatb abbrev
R6705:6705 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6733:6737 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6726:6728 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6715:6721 Coq.MSets.MSetInterface WSetsOn exists_ defax
R6725:6725 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6723:6723 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6729:6732 Coq.Init.Datatypes <> true constr
R6738:6743 Coq.MSets.MSetInterface WSetsOn Exists def
R6767:6767 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
binder 6750:6750 <> x:63
R6758:6760 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6755:6755 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6757:6757 Coq.MSets.MSetInterface <> x:63 var
R6761:6764 Coq.Init.Datatypes <> true constr
ax 6783:6797 WSetsOn partition_spec1
R6810:6817 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6801:6807 Coq.MSets.MSetInterface WSetsOn compatb abbrev
R6809:6809 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6837:6841 Coq.MSets.MSetInterface WSetsOn :::x_'[=]'_x not
R6818:6820 Coq.Init.Datatypes <> fst def
R6823:6831 Coq.MSets.MSetInterface WSetsOn partition defax
R6835:6835 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6833:6833 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6842:6847 Coq.MSets.MSetInterface WSetsOn filter defax
R6851:6851 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6849:6849 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
ax 6866:6880 WSetsOn partition_spec2
R6893:6900 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6884:6890 Coq.MSets.MSetInterface WSetsOn compatb abbrev
R6892:6892 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6920:6924 Coq.MSets.MSetInterface WSetsOn :::x_'[=]'_x not
R6901:6903 Coq.Init.Datatypes <> snd def
R6906:6914 Coq.MSets.MSetInterface WSetsOn partition defax
R6918:6918 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6916:6916 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6925:6930 Coq.MSets.MSetInterface WSetsOn filter defax
R6954:6954 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
binder 6937:6937 <> x:66
R6942:6945 Coq.Init.Datatypes <> negb def
R6948:6948 Coq.MSets.MSetInterface <> WSetsOn.Spec.f var
R6950:6950 Coq.MSets.MSetInterface <> x:66 var
ax 6969:6982 WSetsOn elements_spec1
R7009:7013 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6986:6988 Coq.Lists.SetoidList <> InA ind
R6998:7005 Coq.MSets.MSetInterface WSetsOn elements defax
R7007:7007 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R6995:6995 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R6990:6993 Coq.MSets.MSetInterface E eq defax
R7014:7015 Coq.MSets.MSetInterface WSetsOn In defax
R7019:7019 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R7017:7017 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
ax 7134:7148 WSetsOn elements_spec2w
R7152:7157 Coq.Lists.SetoidList <> NoDupA ind
R7165:7172 Coq.MSets.MSetInterface WSetsOn elements defax
R7174:7174 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R7159:7162 Coq.MSets.MSetInterface E eq defax
ax 7190:7201 WSetsOn choose_spec1
R7222:7225 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7213:7215 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7205:7210 Coq.MSets.MSetInterface WSetsOn choose defax
R7212:7212 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R7216:7219 Coq.Init.Datatypes <> Some constr
R7221:7221 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
R7226:7227 Coq.MSets.MSetInterface WSetsOn In defax
R7231:7231 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R7229:7229 Coq.MSets.MSetInterface <> WSetsOn.Spec.x var
ax 7246:7257 WSetsOn choose_spec2
R7276:7279 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7269:7271 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7261:7266 Coq.MSets.MSetInterface WSetsOn choose defax
R7268:7268 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R7272:7275 Coq.Init.Datatypes <> None constr
R7280:7284 Coq.MSets.MSetInterface WSetsOn Empty def
R7286:7286 Coq.MSets.MSetInterface <> WSetsOn.Spec.s var
R7296:7299 Coq.MSets.MSetInterface WSetsOn.Spec <> sec
R7307:7313 Coq.MSets.MSetInterface WSetsOn <> modtype
modtype 7505:7509 <> WSets
R7533:7545 Coq.Structures.Equalities DecidableType <> mod
mod 7529:7529 <> WSets.E
R7558:7564 Coq.MSets.MSetInterface WSetsOn <> mod
R7566:7566 Coq.MSets.MSetInterface WSets.E <> modtype
R7573:7577 Coq.MSets.MSetInterface WSets <> modtype
R7807:7812 Coq.MSets.MSetInterface TypElt <> mod
modtype 7787:7795 <> HasOrdOps
R7787:7795 Coq.MSets.MSetInterface T <> mod
ax 7829:7835 HasOrdOps compare
R7840:7843 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7839:7839 Coq.MSets.MSetInterface T t defax
R7845:7848 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7844:7844 Coq.MSets.MSetInterface T t defax
R7849:7858 Coq.Init.Datatypes <> comparison ind
ax 7975:7981 HasOrdOps min_elt
R7986:7989 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7985:7985 Coq.MSets.MSetInterface T t defax
R7990:7995 Coq.Init.Datatypes <> option ind
R7997:7999 Coq.MSets.MSetInterface T elt defax
ax 8148:8154 HasOrdOps max_elt
R8159:8162 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8158:8158 Coq.MSets.MSetInterface T t defax
R8163:8168 Coq.Init.Datatypes <> option ind
R8170:8172 Coq.MSets.MSetInterface T elt defax
R8260:8268 Coq.MSets.MSetInterface HasOrdOps <> modtype
R8293:8303 Coq.Structures.Orders OrderedType <> mod
R8309:8312 Coq.MSets.MSetInterface WOps <> mod
R8314:8314 Coq.MSets.MSetInterface E <> modtype
R8319:8327 Coq.MSets.MSetInterface HasOrdOps <> mod
modtype 8284:8286 <> Ops
R8356:8366 Coq.Structures.Orders OrderedType <> mod
modtype 8344:8349 <> SetsOn
R8380:8386 Coq.MSets.MSetInterface WSetsOn <> mod
R8388:8388 Coq.MSets.MSetInterface E <> modtype
R8393:8401 Coq.MSets.MSetInterface HasOrdOps <> mod
R8406:8410 Coq.Structures.Orders HasLt <> mod
R8415:8424 Coq.Structures.Orders IsStrOrder <> mod
sec 8438:8441 SetsOn Spec
var 8455:8455 SetsOn.Spec s
var 8457:8458 SetsOn.Spec s'
R8461:8461 Coq.MSets.MSetInterface SetsOn t defax
var 8475:8475 SetsOn.Spec x
var 8477:8477 SetsOn.Spec y
R8481:8483 Coq.MSets.MSetInterface SetsOn elt def
ax 8499:8510 SetsOn compare_spec
R8514:8521 Coq.Init.Datatypes <> CompSpec def
R8535:8541 Coq.MSets.MSetInterface SetsOn compare defax
R8545:8546 Coq.MSets.MSetInterface <> SetsOn.Spec.s' var
R8543:8543 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8531:8532 Coq.MSets.MSetInterface <> SetsOn.Spec.s' var
R8529:8529 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8526:8527 Coq.MSets.MSetInterface SetsOn lt defax
R8523:8524 Coq.MSets.MSetInterface SetsOn eq def
ax 8611:8624 SetsOn elements_spec2
R8628:8631 Coq.Sorting.Sorted <> sort abbrev
R8639:8646 Coq.MSets.MSetInterface SetsOn elements defax
R8648:8648 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8633:8636 Coq.MSets.MSetInterface E lt defax
ax 8874:8886 SetsOn min_elt_spec1
R8908:8911 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8899:8901 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8890:8896 Coq.MSets.MSetInterface SetsOn min_elt defax
R8898:8898 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8902:8905 Coq.Init.Datatypes <> Some constr
R8907:8907 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
R8912:8913 Coq.MSets.MSetInterface SetsOn In defax
R8917:8917 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8915:8915 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
ax 8932:8944 SetsOn min_elt_spec2
R8966:8969 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8957:8959 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8948:8954 Coq.MSets.MSetInterface SetsOn min_elt defax
R8956:8956 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8960:8963 Coq.Init.Datatypes <> Some constr
R8965:8965 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
R8976:8979 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8970:8971 Coq.MSets.MSetInterface SetsOn In defax
R8975:8975 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R8973:8973 Coq.MSets.MSetInterface <> SetsOn.Spec.y var
R8980:8981 Coq.Init.Logic <> ::type_scope:'~'_x not
R8982:8985 Coq.MSets.MSetInterface E lt defax
R8989:8989 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
R8987:8987 Coq.MSets.MSetInterface <> SetsOn.Spec.y var
ax 9004:9016 SetsOn min_elt_spec3
R9036:9039 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9029:9031 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9020:9026 Coq.MSets.MSetInterface SetsOn min_elt defax
R9028:9028 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R9032:9035 Coq.Init.Datatypes <> None constr
R9040:9044 Coq.MSets.MSetInterface SetsOn Empty def
R9046:9046 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
ax 9062:9074 SetsOn max_elt_spec1
R9096:9099 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9087:9089 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9078:9084 Coq.MSets.MSetInterface SetsOn max_elt defax
R9086:9086 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R9090:9093 Coq.Init.Datatypes <> Some constr
R9095:9095 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
R9100:9101 Coq.MSets.MSetInterface SetsOn In defax
R9105:9105 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R9103:9103 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
ax 9120:9132 SetsOn max_elt_spec2
R9154:9157 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9145:9147 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9136:9142 Coq.MSets.MSetInterface SetsOn max_elt defax
R9144:9144 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R9148:9151 Coq.Init.Datatypes <> Some constr
R9153:9153 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
R9164:9167 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9158:9159 Coq.MSets.MSetInterface SetsOn In defax
R9163:9163 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R9161:9161 Coq.MSets.MSetInterface <> SetsOn.Spec.y var
R9168:9169 Coq.Init.Logic <> ::type_scope:'~'_x not
R9170:9173 Coq.MSets.MSetInterface E lt defax
R9177:9177 Coq.MSets.MSetInterface <> SetsOn.Spec.y var
R9175:9175 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
ax 9192:9204 SetsOn max_elt_spec3
R9224:9227 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9217:9219 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9208:9214 Coq.MSets.MSetInterface SetsOn max_elt defax
R9216:9216 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R9220:9223 Coq.Init.Datatypes <> None constr
R9228:9232 Coq.MSets.MSetInterface SetsOn Empty def
R9234:9234 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
ax 9296:9307 SetsOn choose_spec3
R9328:9331 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9319:9321 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9311:9316 Coq.MSets.MSetInterface SetsOn choose defax
R9318:9318 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R9322:9325 Coq.Init.Datatypes <> Some constr
R9327:9327 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
R9350:9357 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9341:9343 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9332:9337 Coq.MSets.MSetInterface SetsOn choose defax
R9339:9340 Coq.MSets.MSetInterface <> SetsOn.Spec.s' var
R9344:9347 Coq.Init.Datatypes <> Some constr
R9349:9349 Coq.MSets.MSetInterface <> SetsOn.Spec.y var
R9368:9371 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9358:9362 Coq.MSets.MSetInterface SetsOn Equal def
R9366:9367 Coq.MSets.MSetInterface <> SetsOn.Spec.s' var
R9364:9364 Coq.MSets.MSetInterface <> SetsOn.Spec.s var
R9372:9375 Coq.MSets.MSetInterface E eq defax
R9379:9379 Coq.MSets.MSetInterface <> SetsOn.Spec.y var
R9377:9377 Coq.MSets.MSetInterface <> SetsOn.Spec.x var
R9389:9392 Coq.MSets.MSetInterface SetsOn.Spec <> sec
R9400:9405 Coq.MSets.MSetInterface SetsOn <> modtype
modtype 9612:9615 <> Sets
R9639:9649 Coq.Structures.Orders OrderedType <> mod
mod 9635:9635 <> Sets.E
R9662:9667 Coq.MSets.MSetInterface SetsOn <> mod
R9669:9669 Coq.MSets.MSetInterface Sets.E <> modtype
R9676:9679 Coq.MSets.MSetInterface Sets <> modtype
R9700:9703 Coq.MSets.MSetInterface Sets <> mod
modtype 9695:9695 <> S
R11918:11930 Coq.Structures.Equalities DecidableType <> mod
modtype 11904:11911 <> WRawSets
R11989:11992 Coq.MSets.MSetInterface WOps <> mod
R11994:11994 Coq.MSets.MSetInterface E <> modtype
ax 12057:12060 WRawSets IsOk
R12065:12068 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12064:12064 Coq.MSets.MSetInterface WRawSets t defax
ind 12083:12084 WRawSets Ok
constr 12102:12103 WRawSets ok
rec 12083:12084 WRawSets Ok
proj 12102:12103 WRawSets ok
R12089:12089 Coq.MSets.MSetInterface WRawSets t defax
binder 12087:12087 <> s:89
R12107:12110 Coq.MSets.MSetInterface WRawSets IsOk defax
R12112:12112 Coq.MSets.MSetInterface <> s:89 var
ax 12367:12370 WRawSets isok
R12375:12378 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12374:12374 Coq.MSets.MSetInterface WRawSets t defax
R12379:12382 Coq.Init.Datatypes <> bool ind
inst 12560:12566 WRawSets isok_Ok
binder 12568:12568 <> s:93
R12578:12580 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12572:12575 Coq.MSets.MSetInterface WRawSets isok defax
R12577:12577 Coq.MSets.MSetInterface <> s:93 var
R12581:12584 Coq.Init.Datatypes <> true constr
binder 12572:12584 <> H:94
R12589:12590 Coq.MSets.MSetInterface WRawSets Ok class
R12592:12592 Coq.MSets.MSetInterface <> s:93 var
ax 12641:12642 WRawSets In
R12649:12652 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12646:12648 Coq.MSets.MSetInterface WRawSets elt def
R12654:12657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12653:12653 Coq.MSets.MSetInterface WRawSets t defax
inst 12693:12701 WRawSets In_compat
R12705:12710 Coq.Classes.Morphisms <> Proper class
R12730:12731 Coq.MSets.MSetInterface WRawSets In defax
R12717:12719 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R12713:12716 Coq.MSets.MSetInterface E eq defax
R12722:12724 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R12720:12721 Coq.Init.Logic <> eq ind
R12725:12727 Coq.Init.Logic <> iff def
def 12748:12752 WRawSets Equal
binder 12754:12754 <> s:96
binder 12756:12757 <> s':97
R12773:12775 Coq.MSets.MSetInterface WRawSets elt def
binder 12769:12769 <> a:98
R12784:12788 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12778:12779 Coq.MSets.MSetInterface WRawSets In defax
R12783:12783 Coq.MSets.MSetInterface <> s:96 var
R12781:12781 Coq.MSets.MSetInterface <> a:98 var
R12789:12790 Coq.MSets.MSetInterface WRawSets In defax
R12794:12795 Coq.MSets.MSetInterface <> s':97 var
R12792:12792 Coq.MSets.MSetInterface <> a:98 var
def 12811:12816 WRawSets Subset
binder 12818:12818 <> s:99
binder 12820:12821 <> s':100
R12837:12839 Coq.MSets.MSetInterface WRawSets elt def
binder 12833:12833 <> a:101
R12848:12851 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12842:12843 Coq.MSets.MSetInterface WRawSets In defax
R12847:12847 Coq.MSets.MSetInterface <> s:99 var
R12845:12845 Coq.MSets.MSetInterface <> a:101 var
R12852:12853 Coq.MSets.MSetInterface WRawSets In defax
R12857:12858 Coq.MSets.MSetInterface <> s':100 var
R12855:12855 Coq.MSets.MSetInterface <> a:101 var
def 12874:12878 WRawSets Empty
binder 12880:12880 <> s:102
R12896:12898 Coq.MSets.MSetInterface WRawSets elt def
binder 12892:12892 <> a:103
R12901:12902 Coq.Init.Logic <> ::type_scope:'~'_x not
R12903:12904 Coq.MSets.MSetInterface WRawSets In defax
R12908:12908 Coq.MSets.MSetInterface <> s:102 var
R12906:12906 Coq.MSets.MSetInterface <> a:103 var
def 12924:12930 WRawSets For_all
R12940:12943 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12937:12939 Coq.MSets.MSetInterface WRawSets elt def
binder 12933:12933 <> P:104
binder 12950:12950 <> s:105
binder 12962:12962 <> x:106
R12971:12974 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12965:12966 Coq.MSets.MSetInterface WRawSets In defax
R12970:12970 Coq.MSets.MSetInterface <> s:105 var
R12968:12968 Coq.MSets.MSetInterface <> x:106 var
R12975:12975 Coq.MSets.MSetInterface <> P:104 var
R12977:12977 Coq.MSets.MSetInterface <> x:106 var
def 12993:12998 WRawSets Exists
R13008:13011 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13005:13007 Coq.MSets.MSetInterface WRawSets elt def
binder 13001:13001 <> P:107
binder 13018:13018 <> s:108
R13023:13029 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R13031:13032 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 13030:13030 <> x:109
R13039:13042 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R13033:13034 Coq.MSets.MSetInterface WRawSets In defax
R13038:13038 Coq.MSets.MSetInterface <> s:108 var
R13036:13036 Coq.MSets.MSetInterface <> x:109 var
R13043:13043 Coq.MSets.MSetInterface <> P:107 var
R13045:13045 Coq.MSets.MSetInterface <> x:109 var
R13076:13080 Coq.MSets.MSetInterface WRawSets Equal def
not 13060:13060 WRawSets :::x_'[=]'_x
R13148:13153 Coq.MSets.MSetInterface WRawSets Subset def
not 13131:13131 WRawSets :::x_'[<=]'_x
def 13207:13208 WRawSets eq
R13213:13216 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13212:13212 Coq.MSets.MSetInterface WRawSets t defax
R13218:13221 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13217:13217 Coq.MSets.MSetInterface WRawSets t defax
R13230:13234 Coq.MSets.MSetInterface WRawSets Equal def
inst 13266:13273 WRawSets eq_equiv
R13277:13287 Coq.Classes.RelationClasses <> Equivalence class
R13289:13290 Coq.MSets.MSetInterface WRawSets eq def
inst 13402:13409 WRawSets empty_ok
R13413:13414 Coq.MSets.MSetInterface WRawSets Ok class
R13416:13420 Coq.MSets.MSetInterface WRawSets empty defax
inst 13452:13457 WRawSets add_ok
binder 13459:13459 <> s:110
binder 13461:13461 <> x:111
R13465:13466 Coq.MSets.MSetInterface WRawSets Ok class
R13468:13468 Coq.MSets.MSetInterface <> s:110 var
binder 13465:13468 <> H:112
R13473:13474 Coq.MSets.MSetInterface WRawSets Ok class
R13477:13479 Coq.MSets.MSetInterface WRawSets add defax
R13483:13483 Coq.MSets.MSetInterface <> s:110 var
R13481:13481 Coq.MSets.MSetInterface <> x:111 var
inst 13516:13524 WRawSets remove_ok
binder 13526:13526 <> s:113
binder 13528:13528 <> x:114
R13532:13533 Coq.MSets.MSetInterface WRawSets Ok class
R13535:13535 Coq.MSets.MSetInterface <> s:113 var
binder 13532:13535 <> H:115
R13540:13541 Coq.MSets.MSetInterface WRawSets Ok class
R13544:13549 Coq.MSets.MSetInterface WRawSets remove defax
R13553:13553 Coq.MSets.MSetInterface <> s:113 var
R13551:13551 Coq.MSets.MSetInterface <> x:114 var
inst 13586:13597 WRawSets singleton_ok
binder 13599:13599 <> x:116
R13603:13604 Coq.MSets.MSetInterface WRawSets Ok class
R13607:13615 Coq.MSets.MSetInterface WRawSets singleton defax
R13617:13617 Coq.MSets.MSetInterface <> x:116 var
inst 13650:13657 WRawSets union_ok
binder 13659:13659 <> s:117
binder 13661:13662 <> s':118
R13666:13667 Coq.MSets.MSetInterface WRawSets Ok class
R13669:13669 Coq.MSets.MSetInterface <> s:117 var
binder 13666:13669 <> H:119
R13672:13673 Coq.MSets.MSetInterface WRawSets Ok class
R13675:13676 Coq.MSets.MSetInterface <> s':118 var
binder 13672:13676 <> H0:120
R13681:13682 Coq.MSets.MSetInterface WRawSets Ok class
R13685:13689 Coq.MSets.MSetInterface WRawSets union defax
R13693:13694 Coq.MSets.MSetInterface <> s':118 var
R13691:13691 Coq.MSets.MSetInterface <> s:117 var
inst 13727:13734 WRawSets inter_ok
binder 13736:13736 <> s:121
binder 13738:13739 <> s':122
R13743:13744 Coq.MSets.MSetInterface WRawSets Ok class
R13746:13746 Coq.MSets.MSetInterface <> s:121 var
binder 13743:13746 <> H:123
R13749:13750 Coq.MSets.MSetInterface WRawSets Ok class
R13752:13753 Coq.MSets.MSetInterface <> s':122 var
binder 13749:13753 <> H0:124
R13758:13759 Coq.MSets.MSetInterface WRawSets Ok class
R13762:13766 Coq.MSets.MSetInterface WRawSets inter defax
R13770:13771 Coq.MSets.MSetInterface <> s':122 var
R13768:13768 Coq.MSets.MSetInterface <> s:121 var
inst 13804:13810 WRawSets diff_ok
binder 13812:13812 <> s:125
binder 13814:13815 <> s':126
R13819:13820 Coq.MSets.MSetInterface WRawSets Ok class
R13822:13822 Coq.MSets.MSetInterface <> s:125 var
binder 13819:13822 <> H:127
R13825:13826 Coq.MSets.MSetInterface WRawSets Ok class
R13828:13829 Coq.MSets.MSetInterface <> s':126 var
binder 13825:13829 <> H0:128
R13834:13835 Coq.MSets.MSetInterface WRawSets Ok class
R13838:13841 Coq.MSets.MSetInterface WRawSets diff defax
R13845:13846 Coq.MSets.MSetInterface <> s':126 var
R13843:13843 Coq.MSets.MSetInterface <> s:125 var
inst 13879:13887 WRawSets filter_ok
binder 13889:13889 <> s:129
binder 13891:13891 <> f:130
R13895:13896 Coq.MSets.MSetInterface WRawSets Ok class
R13898:13898 Coq.MSets.MSetInterface <> s:129 var
binder 13895:13898 <> H:131
R13903:13904 Coq.MSets.MSetInterface WRawSets Ok class
R13907:13912 Coq.MSets.MSetInterface WRawSets filter defax
R13916:13916 Coq.MSets.MSetInterface <> s:129 var
R13914:13914 Coq.MSets.MSetInterface <> f:130 var
inst 13949:13961 WRawSets partition_ok1
binder 13963:13963 <> s:132
binder 13965:13965 <> f:133
R13969:13970 Coq.MSets.MSetInterface WRawSets Ok class
R13972:13972 Coq.MSets.MSetInterface <> s:132 var
binder 13969:13972 <> H:134
R13977:13978 Coq.MSets.MSetInterface WRawSets Ok class
R13981:13983 Coq.Init.Datatypes <> fst def
R13986:13994 Coq.MSets.MSetInterface WRawSets partition defax
R13998:13998 Coq.MSets.MSetInterface <> s:132 var
R13996:13996 Coq.MSets.MSetInterface <> f:133 var
inst 14032:14044 WRawSets partition_ok2
binder 14046:14046 <> s:135
binder 14048:14048 <> f:136
R14052:14053 Coq.MSets.MSetInterface WRawSets Ok class
R14055:14055 Coq.MSets.MSetInterface <> s:135 var
binder 14052:14055 <> H:137
R14060:14061 Coq.MSets.MSetInterface WRawSets Ok class
R14064:14066 Coq.Init.Datatypes <> snd def
R14069:14077 Coq.MSets.MSetInterface WRawSets partition defax
R14081:14081 Coq.MSets.MSetInterface <> s:135 var
R14079:14079 Coq.MSets.MSetInterface <> f:136 var
sec 14168:14171 WRawSets Spec
var 14185:14185 WRawSets.Spec s
var 14187:14188 WRawSets.Spec s'
R14191:14191 Coq.MSets.MSetInterface WRawSets t defax
var 14205:14205 WRawSets.Spec x
var 14207:14207 WRawSets.Spec y
R14211:14213 Coq.MSets.MSetInterface WRawSets elt def
var 14227:14227 WRawSets.Spec f
R14234:14237 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14231:14233 Coq.MSets.MSetInterface WRawSets elt def
R14238:14241 Coq.Init.Datatypes <> bool ind
abbrev 14255:14261 WRawSets compatb
R14267:14272 Coq.Classes.Morphisms <> Proper class
R14279:14281 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R14275:14278 Coq.MSets.MSetInterface E eq defax
R14282:14289 Coq.Init.Logic <> eq ind
ax 14322:14329 WRawSets mem_spec
R14342:14343 Coq.MSets.MSetInterface WRawSets Ok class
R14345:14345 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
binder 14342:14345 <> H:143
R14363:14367 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14356:14358 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14349:14351 Coq.MSets.MSetInterface WRawSets mem defax
R14355:14355 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14353:14353 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14359:14362 Coq.Init.Datatypes <> true constr
R14368:14369 Coq.MSets.MSetInterface WRawSets In defax
R14373:14373 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14371:14371 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
ax 14388:14397 WRawSets equal_spec
R14410:14411 Coq.MSets.MSetInterface WRawSets Ok class
R14413:14413 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
binder 14410:14413 <> H:145
R14416:14417 Coq.MSets.MSetInterface WRawSets Ok class
R14419:14420 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
binder 14416:14420 <> H0:146
R14445:14449 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14438:14440 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14428:14432 Coq.MSets.MSetInterface WRawSets equal defax
R14436:14437 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14434:14434 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14441:14444 Coq.Init.Datatypes <> true constr
R14451:14453 Coq.MSets.MSetInterface WRawSets :::x_'[=]'_x not
R14450:14450 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14454:14455 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
ax 14470:14480 WRawSets subset_spec
R14493:14494 Coq.MSets.MSetInterface WRawSets Ok class
R14496:14496 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
binder 14493:14496 <> H:148
R14499:14500 Coq.MSets.MSetInterface WRawSets Ok class
R14502:14503 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
binder 14499:14503 <> H0:149
R14529:14533 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14522:14524 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14511:14516 Coq.MSets.MSetInterface WRawSets subset defax
R14520:14521 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14518:14518 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14525:14528 Coq.Init.Datatypes <> true constr
R14535:14538 Coq.MSets.MSetInterface WRawSets :::x_'[<=]'_x not
R14534:14534 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14539:14540 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
ax 14555:14564 WRawSets empty_spec
R14568:14572 Coq.MSets.MSetInterface WRawSets Empty def
R14574:14578 Coq.MSets.MSetInterface WRawSets empty defax
ax 14593:14605 WRawSets is_empty_spec
R14626:14630 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14619:14621 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14609:14616 Coq.MSets.MSetInterface WRawSets is_empty defax
R14618:14618 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14622:14625 Coq.Init.Datatypes <> true constr
R14631:14635 Coq.MSets.MSetInterface WRawSets Empty def
R14637:14637 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
ax 14652:14659 WRawSets add_spec
R14672:14673 Coq.MSets.MSetInterface WRawSets Ok class
R14675:14675 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
binder 14672:14675 <> H:153
R14697:14701 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14683:14684 Coq.MSets.MSetInterface WRawSets In defax
R14689:14691 Coq.MSets.MSetInterface WRawSets add defax
R14695:14695 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14693:14693 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14686:14686 Coq.MSets.MSetInterface <> WRawSets.Spec.y var
R14710:14713 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R14702:14705 Coq.MSets.MSetInterface E eq defax
R14709:14709 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14707:14707 Coq.MSets.MSetInterface <> WRawSets.Spec.y var
R14714:14715 Coq.MSets.MSetInterface WRawSets In defax
R14719:14719 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14717:14717 Coq.MSets.MSetInterface <> WRawSets.Spec.y var
ax 14734:14744 WRawSets remove_spec
R14757:14758 Coq.MSets.MSetInterface WRawSets Ok class
R14760:14760 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
binder 14757:14760 <> H:155
R14785:14789 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14768:14769 Coq.MSets.MSetInterface WRawSets In defax
R14774:14779 Coq.MSets.MSetInterface WRawSets remove defax
R14783:14783 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14781:14781 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14771:14771 Coq.MSets.MSetInterface <> WRawSets.Spec.y var
R14796:14799 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R14790:14791 Coq.MSets.MSetInterface WRawSets In defax
R14795:14795 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14793:14793 Coq.MSets.MSetInterface <> WRawSets.Spec.y var
R14800:14800 Coq.Init.Logic <> ::type_scope:'~'_x not
R14801:14804 Coq.MSets.MSetInterface E eq defax
R14808:14808 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14806:14806 Coq.MSets.MSetInterface <> WRawSets.Spec.y var
ax 14823:14836 WRawSets singleton_spec
R14858:14862 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14840:14841 Coq.MSets.MSetInterface WRawSets In defax
R14846:14854 Coq.MSets.MSetInterface WRawSets singleton defax
R14856:14856 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14843:14843 Coq.MSets.MSetInterface <> WRawSets.Spec.y var
R14863:14866 Coq.MSets.MSetInterface E eq defax
R14870:14870 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14868:14868 Coq.MSets.MSetInterface <> WRawSets.Spec.y var
ax 14885:14894 WRawSets union_spec
R14907:14908 Coq.MSets.MSetInterface WRawSets Ok class
R14910:14910 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
binder 14907:14910 <> H:158
R14913:14914 Coq.MSets.MSetInterface WRawSets Ok class
R14916:14917 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
binder 14913:14917 <> H0:159
R14942:14946 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14925:14926 Coq.MSets.MSetInterface WRawSets In defax
R14931:14935 Coq.MSets.MSetInterface WRawSets union defax
R14939:14940 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14937:14937 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14928:14928 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14953:14956 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R14947:14948 Coq.MSets.MSetInterface WRawSets In defax
R14952:14952 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R14950:14950 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R14957:14958 Coq.MSets.MSetInterface WRawSets In defax
R14962:14963 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R14960:14960 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
ax 14978:14987 WRawSets inter_spec
R15000:15001 Coq.MSets.MSetInterface WRawSets Ok class
R15003:15003 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
binder 15000:15003 <> H:161
R15006:15007 Coq.MSets.MSetInterface WRawSets Ok class
R15009:15010 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
binder 15006:15010 <> H0:162
R15035:15039 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15018:15019 Coq.MSets.MSetInterface WRawSets In defax
R15024:15028 Coq.MSets.MSetInterface WRawSets inter defax
R15032:15033 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R15030:15030 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15021:15021 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R15046:15049 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R15040:15041 Coq.MSets.MSetInterface WRawSets In defax
R15045:15045 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15043:15043 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R15050:15051 Coq.MSets.MSetInterface WRawSets In defax
R15055:15056 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R15053:15053 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
ax 15071:15079 WRawSets diff_spec
R15092:15093 Coq.MSets.MSetInterface WRawSets Ok class
R15095:15095 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
binder 15092:15095 <> H:164
R15098:15099 Coq.MSets.MSetInterface WRawSets Ok class
R15101:15102 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
binder 15098:15102 <> H0:165
R15126:15130 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15110:15111 Coq.MSets.MSetInterface WRawSets In defax
R15116:15119 Coq.MSets.MSetInterface WRawSets diff defax
R15123:15124 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R15121:15121 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15113:15113 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R15137:15140 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R15131:15132 Coq.MSets.MSetInterface WRawSets In defax
R15136:15136 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15134:15134 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R15141:15141 Coq.Init.Logic <> ::type_scope:'~'_x not
R15142:15143 Coq.MSets.MSetInterface WRawSets In defax
R15147:15148 Coq.MSets.MSetInterface <> WRawSets.Spec.s' var
R15145:15145 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
ax 15163:15171 WRawSets fold_spec
binder 15183:15183 <> A:167
R15198:15198 Coq.MSets.MSetInterface <> A:167 var
binder 15194:15194 <> i:168
R15209:15212 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15206:15208 Coq.MSets.MSetInterface WRawSets elt def
R15214:15217 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15213:15213 Coq.MSets.MSetInterface <> A:167 var
R15218:15218 Coq.MSets.MSetInterface <> A:167 var
binder 15202:15202 <> f:169
R15236:15238 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15226:15229 Coq.MSets.MSetInterface WRawSets fold defax
R15235:15235 Coq.MSets.MSetInterface <> i:168 var
R15233:15233 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15231:15231 Coq.MSets.MSetInterface <> f:169 var
R15239:15247 Coq.Lists.List <> fold_left def
R15271:15271 Coq.MSets.MSetInterface <> i:168 var
R15259:15266 Coq.MSets.MSetInterface WRawSets elements defax
R15268:15268 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15250:15253 Coq.Program.Basics <> flip def
R15255:15255 Coq.MSets.MSetInterface <> f:169 var
ax 15286:15298 WRawSets cardinal_spec
R15311:15312 Coq.MSets.MSetInterface WRawSets Ok class
R15314:15314 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
binder 15311:15314 <> H:171
R15332:15334 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15322:15329 Coq.MSets.MSetInterface WRawSets cardinal defax
R15331:15331 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15335:15340 Coq.Init.Datatypes <> length def
R15343:15350 Coq.MSets.MSetInterface WRawSets elements defax
R15352:15352 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
ax 15368:15378 WRawSets filter_spec
R15391:15399 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15442:15442 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15382:15388 Coq.MSets.MSetInterface WRawSets compatb abbrev
R15390:15390 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15417:15421 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15400:15401 Coq.MSets.MSetInterface WRawSets In defax
R15406:15411 Coq.MSets.MSetInterface WRawSets filter defax
R15415:15415 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15413:15413 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15403:15403 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R15428:15431 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R15422:15423 Coq.MSets.MSetInterface WRawSets In defax
R15427:15427 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15425:15425 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R15435:15437 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15432:15432 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15434:15434 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R15438:15441 Coq.Init.Datatypes <> true constr
ax 15457:15468 WRawSets for_all_spec
R15481:15489 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15544:15544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15472:15478 Coq.MSets.MSetInterface WRawSets compatb abbrev
R15480:15480 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15508:15512 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15501:15503 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15490:15496 Coq.MSets.MSetInterface WRawSets for_all defax
R15500:15500 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15498:15498 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15504:15507 Coq.Init.Datatypes <> true constr
R15513:15519 Coq.MSets.MSetInterface WRawSets For_all def
R15543:15543 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
binder 15526:15526 <> x:174
R15534:15536 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15531:15531 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15533:15533 Coq.MSets.MSetInterface <> x:174 var
R15537:15540 Coq.Init.Datatypes <> true constr
ax 15559:15569 WRawSets exists_spec
R15582:15590 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15644:15644 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15573:15579 Coq.MSets.MSetInterface WRawSets compatb abbrev
R15581:15581 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15609:15613 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15602:15604 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15591:15597 Coq.MSets.MSetInterface WRawSets exists_ defax
R15601:15601 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15599:15599 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15605:15608 Coq.Init.Datatypes <> true constr
R15614:15619 Coq.MSets.MSetInterface WRawSets Exists def
R15643:15643 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
binder 15626:15626 <> x:176
R15634:15636 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15631:15631 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15633:15633 Coq.MSets.MSetInterface <> x:176 var
R15637:15640 Coq.Init.Datatypes <> true constr
ax 15659:15673 WRawSets partition_spec1
R15686:15693 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15677:15683 Coq.MSets.MSetInterface WRawSets compatb abbrev
R15685:15685 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15713:15717 Coq.MSets.MSetInterface WRawSets :::x_'[=]'_x not
R15694:15696 Coq.Init.Datatypes <> fst def
R15699:15707 Coq.MSets.MSetInterface WRawSets partition defax
R15711:15711 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15709:15709 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15718:15723 Coq.MSets.MSetInterface WRawSets filter defax
R15727:15727 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15725:15725 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
ax 15742:15756 WRawSets partition_spec2
R15769:15776 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15760:15766 Coq.MSets.MSetInterface WRawSets compatb abbrev
R15768:15768 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15796:15800 Coq.MSets.MSetInterface WRawSets :::x_'[=]'_x not
R15777:15779 Coq.Init.Datatypes <> snd def
R15782:15790 Coq.MSets.MSetInterface WRawSets partition defax
R15794:15794 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15792:15792 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15801:15806 Coq.MSets.MSetInterface WRawSets filter defax
R15830:15830 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
binder 15813:15813 <> x:179
R15818:15821 Coq.Init.Datatypes <> negb def
R15824:15824 Coq.MSets.MSetInterface <> WRawSets.Spec.f var
R15826:15826 Coq.MSets.MSetInterface <> x:179 var
ax 15845:15858 WRawSets elements_spec1
R15885:15889 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15862:15864 Coq.Lists.SetoidList <> InA ind
R15874:15881 Coq.MSets.MSetInterface WRawSets elements defax
R15883:15883 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15871:15871 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R15866:15869 Coq.MSets.MSetInterface E eq defax
R15890:15891 Coq.MSets.MSetInterface WRawSets In defax
R15895:15895 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15893:15893 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
ax 15910:15924 WRawSets elements_spec2w
R15937:15938 Coq.MSets.MSetInterface WRawSets Ok class
R15940:15940 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
binder 15937:15940 <> H:182
R15944:15949 Coq.Lists.SetoidList <> NoDupA ind
R15957:15964 Coq.MSets.MSetInterface WRawSets elements defax
R15966:15966 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R15951:15954 Coq.MSets.MSetInterface E eq defax
ax 15982:15993 WRawSets choose_spec1
R16014:16017 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16005:16007 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15997:16002 Coq.MSets.MSetInterface WRawSets choose defax
R16004:16004 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R16008:16011 Coq.Init.Datatypes <> Some constr
R16013:16013 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
R16018:16019 Coq.MSets.MSetInterface WRawSets In defax
R16023:16023 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R16021:16021 Coq.MSets.MSetInterface <> WRawSets.Spec.x var
ax 16038:16049 WRawSets choose_spec2
R16068:16071 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16061:16063 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16053:16058 Coq.MSets.MSetInterface WRawSets choose defax
R16060:16060 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R16064:16067 Coq.Init.Datatypes <> None constr
R16072:16076 Coq.MSets.MSetInterface WRawSets Empty def
R16078:16078 Coq.MSets.MSetInterface <> WRawSets.Spec.s var
R16088:16091 Coq.MSets.MSetInterface WRawSets.Spec <> sec
R16099:16106 Coq.MSets.MSetInterface WRawSets <> modtype
R16178:16190 Coq.Structures.Equalities DecidableType <> mod
R16195:16202 Coq.MSets.MSetInterface WRawSets <> mod
R16204:16204 Coq.MSets.MSetInterface E <> modtype
R16210:16216 Coq.MSets.MSetInterface WSetsOn <> mod
R16218:16218 Coq.MSets.MSetInterface E <> modtype
mod 16163:16173 <> WRaw2SetsOn
def 16331:16333 WRaw2SetsOn elt
R16338:16340 Coq.MSets.MSetInterface E t defax
rec 16352:16353 WRaw2SetsOn t_
proj 16363:16366 WRaw2SetsOn this
proj 16376:16380 WRaw2SetsOn is_ok
R16371:16373 Coq.MSets.MSetInterface M t defax
R16384:16387 Coq.MSets.MSetInterface M Ok class
R16389:16392 Coq.MSets.MSetInterface <> this:187 meth
def 16408:16408 WRaw2SetsOn t
R16413:16414 Coq.MSets.MSetInterface WRaw2SetsOn t_ rec
R16428:16430 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R16428:16430 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
def 16513:16514 WRaw2SetsOn In
R16521:16523 Coq.MSets.MSetInterface WRaw2SetsOn elt def
binder 16517:16517 <> x:189
R16530:16530 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 16526:16526 <> s:190
R16536:16539 Coq.MSets.MSetInterface M In defax
R16544:16547 Coq.MSets.MSetInterface WRaw2SetsOn this proj
R16549:16549 Coq.MSets.MSetInterface <> s:190 var
R16541:16541 Coq.MSets.MSetInterface <> x:189 var
def 16565:16569 WRaw2SetsOn Equal
R16579:16579 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 16572:16572 <> s:191
binder 16574:16575 <> s':192
R16596:16598 Coq.MSets.MSetInterface WRaw2SetsOn elt def
binder 16592:16592 <> a:193
R16607:16611 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R16601:16602 Coq.MSets.MSetInterface WRaw2SetsOn In def
R16606:16606 Coq.MSets.MSetInterface <> s:191 var
R16604:16604 Coq.MSets.MSetInterface <> a:193 var
R16612:16613 Coq.MSets.MSetInterface WRaw2SetsOn In def
R16617:16618 Coq.MSets.MSetInterface <> s':192 var
R16615:16615 Coq.MSets.MSetInterface <> a:193 var
def 16633:16638 WRaw2SetsOn Subset
R16648:16648 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 16641:16641 <> s:194
binder 16643:16644 <> s':195
R16665:16667 Coq.MSets.MSetInterface WRaw2SetsOn elt def
binder 16661:16661 <> a:196
R16676:16679 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16670:16671 Coq.MSets.MSetInterface WRaw2SetsOn In def
R16675:16675 Coq.MSets.MSetInterface <> s:194 var
R16673:16673 Coq.MSets.MSetInterface <> a:196 var
R16680:16681 Coq.MSets.MSetInterface WRaw2SetsOn In def
R16685:16686 Coq.MSets.MSetInterface <> s':195 var
R16683:16683 Coq.MSets.MSetInterface <> a:196 var
def 16701:16705 WRaw2SetsOn Empty
R16712:16712 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 16708:16708 <> s:197
R16729:16731 Coq.MSets.MSetInterface WRaw2SetsOn elt def
binder 16725:16725 <> a:198
R16734:16735 Coq.Init.Logic <> ::type_scope:'~'_x not
R16736:16737 Coq.MSets.MSetInterface WRaw2SetsOn In def
R16741:16741 Coq.MSets.MSetInterface <> s:197 var
R16739:16739 Coq.MSets.MSetInterface <> a:198 var
def 16756:16762 WRaw2SetsOn For_all
R16772:16775 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16769:16771 Coq.MSets.MSetInterface WRaw2SetsOn elt def
binder 16765:16765 <> P:199
R16786:16786 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 16782:16782 <> s:200
binder 16799:16799 <> x:201
R16808:16811 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16802:16803 Coq.MSets.MSetInterface WRaw2SetsOn In def
R16807:16807 Coq.MSets.MSetInterface <> s:200 var
R16805:16805 Coq.MSets.MSetInterface <> x:201 var
R16812:16812 Coq.MSets.MSetInterface <> P:199 var
R16814:16814 Coq.MSets.MSetInterface <> x:201 var
def 16829:16834 WRaw2SetsOn Exists
R16844:16847 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16841:16843 Coq.MSets.MSetInterface WRaw2SetsOn elt def
binder 16837:16837 <> P:202
R16858:16858 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 16854:16854 <> s:203
R16864:16870 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R16872:16873 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 16871:16871 <> x:204
R16880:16883 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R16874:16875 Coq.MSets.MSetInterface WRaw2SetsOn In def
R16879:16879 Coq.MSets.MSetInterface <> s:203 var
R16877:16877 Coq.MSets.MSetInterface <> x:204 var
R16884:16884 Coq.MSets.MSetInterface <> P:202 var
R16886:16886 Coq.MSets.MSetInterface <> x:204 var
def 16902:16904 WRaw2SetsOn mem
R16911:16913 Coq.MSets.MSetInterface WRaw2SetsOn elt def
binder 16907:16907 <> x:205
R16920:16920 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 16916:16916 <> s:206
R16926:16930 Coq.MSets.MSetInterface M mem defax
R16934:16934 Coq.MSets.MSetInterface <> s:206 var
R16932:16932 Coq.MSets.MSetInterface <> x:205 var
def 16949:16951 WRaw2SetsOn add
R16958:16960 Coq.MSets.MSetInterface WRaw2SetsOn elt def
binder 16954:16954 <> x:207
R16967:16967 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 16963:16963 <> s:208
R16972:16972 Coq.MSets.MSetInterface WRaw2SetsOn t def
R16977:16979 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R16982:16986 Coq.MSets.MSetInterface M add defax
R16990:16990 Coq.MSets.MSetInterface <> s:208 var
R16988:16988 Coq.MSets.MSetInterface <> x:207 var
def 17006:17011 WRaw2SetsOn remove
R17018:17020 Coq.MSets.MSetInterface WRaw2SetsOn elt def
binder 17014:17014 <> x:209
R17027:17027 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 17023:17023 <> s:210
R17032:17032 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17037:17039 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R17042:17049 Coq.MSets.MSetInterface M remove defax
R17053:17053 Coq.MSets.MSetInterface <> s:210 var
R17051:17051 Coq.MSets.MSetInterface <> x:209 var
def 17069:17077 WRaw2SetsOn singleton
R17084:17086 Coq.MSets.MSetInterface WRaw2SetsOn elt def
binder 17080:17080 <> x:211
R17091:17091 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17096:17098 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R17101:17111 Coq.MSets.MSetInterface M singleton defax
R17113:17113 Coq.MSets.MSetInterface <> x:211 var
def 17129:17133 WRaw2SetsOn union
R17143:17143 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 17136:17136 <> s:212
binder 17138:17139 <> s':213
R17148:17148 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17153:17155 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R17158:17164 Coq.MSets.MSetInterface M union defax
R17168:17169 Coq.MSets.MSetInterface <> s':213 var
R17166:17166 Coq.MSets.MSetInterface <> s:212 var
def 17185:17189 WRaw2SetsOn inter
R17199:17199 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 17192:17192 <> s:214
binder 17194:17195 <> s':215
R17204:17204 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17209:17211 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R17214:17220 Coq.MSets.MSetInterface M inter defax
R17224:17225 Coq.MSets.MSetInterface <> s':215 var
R17222:17222 Coq.MSets.MSetInterface <> s:214 var
def 17241:17244 WRaw2SetsOn diff
R17254:17254 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 17247:17247 <> s:216
binder 17249:17250 <> s':217
R17259:17259 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17264:17266 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R17269:17274 Coq.MSets.MSetInterface M diff defax
R17278:17279 Coq.MSets.MSetInterface <> s':217 var
R17276:17276 Coq.MSets.MSetInterface <> s:216 var
def 17295:17299 WRaw2SetsOn equal
R17309:17309 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 17302:17302 <> s:218
binder 17304:17305 <> s':219
R17315:17321 Coq.MSets.MSetInterface M equal defax
R17325:17326 Coq.MSets.MSetInterface <> s':219 var
R17323:17323 Coq.MSets.MSetInterface <> s:218 var
def 17341:17346 WRaw2SetsOn subset
R17356:17356 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 17349:17349 <> s:220
binder 17351:17352 <> s':221
R17362:17369 Coq.MSets.MSetInterface M subset defax
R17373:17374 Coq.MSets.MSetInterface <> s':221 var
R17371:17371 Coq.MSets.MSetInterface <> s:220 var
def 17389:17393 WRaw2SetsOn empty
R17397:17397 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17402:17404 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R17406:17412 Coq.MSets.MSetInterface M empty defax
def 17427:17434 WRaw2SetsOn is_empty
R17441:17441 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 17437:17437 <> s:222
R17447:17456 Coq.MSets.MSetInterface M is_empty defax
R17458:17458 Coq.MSets.MSetInterface <> s:222 var
def 17473:17480 WRaw2SetsOn elements
R17487:17487 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 17483:17483 <> s:223
R17492:17495 Coq.Init.Datatypes <> list ind
R17497:17499 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R17504:17513 Coq.MSets.MSetInterface M elements defax
R17515:17515 Coq.MSets.MSetInterface <> s:223 var
def 17530:17535 WRaw2SetsOn choose
R17542:17542 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 17538:17538 <> s:224
R17547:17552 Coq.Init.Datatypes <> option ind
R17554:17556 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R17561:17568 Coq.MSets.MSetInterface M choose defax
R17570:17570 Coq.MSets.MSetInterface <> s:224 var
def 17585:17588 WRaw2SetsOn fold
binder 17591:17591 <> A:225
R17608:17611 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17605:17607 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R17613:17616 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17612:17612 Coq.MSets.MSetInterface <> A:225 var
R17617:17617 Coq.MSets.MSetInterface <> A:225 var
binder 17601:17601 <> f:226
R17624:17624 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 17620:17620 <> s:227
R17630:17633 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17629:17629 Coq.MSets.MSetInterface <> A:225 var
R17634:17634 Coq.MSets.MSetInterface <> A:225 var
R17639:17644 Coq.MSets.MSetInterface M fold defax
R17648:17648 Coq.MSets.MSetInterface <> s:227 var
R17646:17646 Coq.MSets.MSetInterface <> f:226 var
def 17663:17670 WRaw2SetsOn cardinal
R17677:17677 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 17673:17673 <> s:228
R17683:17692 Coq.MSets.MSetInterface M cardinal defax
R17694:17694 Coq.MSets.MSetInterface <> s:228 var
def 17709:17714 WRaw2SetsOn filter
R17724:17727 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17721:17723 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R17728:17731 Coq.Init.Datatypes <> bool ind
binder 17717:17717 <> f:229
R17738:17738 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 17734:17734 <> s:230
R17743:17743 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17748:17750 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R17753:17760 Coq.MSets.MSetInterface M filter defax
R17764:17764 Coq.MSets.MSetInterface <> s:230 var
R17762:17762 Coq.MSets.MSetInterface <> f:229 var
def 17780:17786 WRaw2SetsOn for_all
R17796:17799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17793:17795 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R17800:17803 Coq.Init.Datatypes <> bool ind
binder 17789:17789 <> f:231
R17810:17810 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 17806:17806 <> s:232
R17816:17824 Coq.MSets.MSetInterface M for_all defax
R17828:17828 Coq.MSets.MSetInterface <> s:232 var
R17826:17826 Coq.MSets.MSetInterface <> f:231 var
def 17843:17849 WRaw2SetsOn exists_
R17859:17862 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17856:17858 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R17863:17866 Coq.Init.Datatypes <> bool ind
binder 17852:17852 <> f:233
R17873:17873 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 17869:17869 <> s:234
R17879:17887 Coq.MSets.MSetInterface M exists_ defax
R17891:17891 Coq.MSets.MSetInterface <> s:234 var
R17889:17889 Coq.MSets.MSetInterface <> f:233 var
def 17906:17914 WRaw2SetsOn partition
R17924:17927 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17921:17923 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R17928:17931 Coq.Init.Datatypes <> bool ind
binder 17917:17917 <> f:235
R17938:17938 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 17934:17934 <> s:236
R17944:17946 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R17943:17943 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17947:17947 Coq.MSets.MSetInterface WRaw2SetsOn t def
R17964:17974 Coq.MSets.MSetInterface M partition defax
R17978:17978 Coq.MSets.MSetInterface <> s:236 var
R17976:17976 Coq.MSets.MSetInterface <> f:235 var
binder 17959:17959 <> p:237
R17983:17983 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17995:17996 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18008:18008 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17984:17986 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R17989:17991 Coq.Init.Datatypes <> fst def
R17993:17993 Coq.MSets.MSetInterface <> p:237 var
R17997:17999 Coq.MSets.MSetInterface WRaw2SetsOn Mkt constr
R18002:18004 Coq.Init.Datatypes <> snd def
R18006:18006 Coq.MSets.MSetInterface <> p:237 var
inst 18032:18040 WRaw2SetsOn In_compat
R18044:18049 Coq.Classes.Morphisms <> Proper class
R18069:18070 Coq.MSets.MSetInterface WRaw2SetsOn In def
R18056:18058 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R18052:18055 Coq.MSets.MSetInterface E eq defax
R18061:18063 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R18059:18060 Coq.Init.Logic <> eq ind
R18064:18066 Coq.Init.Logic <> iff def
R18107:18117 Coq.MSets.MSetInterface M In_compat prfax
R18107:18117 Coq.MSets.MSetInterface M In_compat prfax
def 18150:18151 WRaw2SetsOn eq
R18156:18159 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18155:18155 Coq.MSets.MSetInterface WRaw2SetsOn t def
R18161:18164 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18160:18160 Coq.MSets.MSetInterface WRaw2SetsOn t def
R18173:18177 Coq.MSets.MSetInterface WRaw2SetsOn Equal def
inst 18201:18208 WRaw2SetsOn eq_equiv
R18212:18222 Coq.Classes.RelationClasses <> Equivalence class
R18224:18225 Coq.MSets.MSetInterface WRaw2SetsOn eq def
def 18266:18271 WRaw2SetsOn eq_dec
R18288:18288 Coq.MSets.MSetInterface WRaw2SetsOn t def
binder 18283:18283 <> s:238
binder 18285:18286 <> s':239
R18292:18293 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R18301:18305 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R18314:18315 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R18294:18295 Coq.MSets.MSetInterface WRaw2SetsOn eq def
R18299:18300 Coq.MSets.MSetInterface <> s':239 var
R18297:18297 Coq.MSets.MSetInterface <> s:238 var
R18306:18306 Coq.Init.Logic <> ::type_scope:'~'_x not
R18307:18308 Coq.MSets.MSetInterface WRaw2SetsOn eq def
R18312:18313 Coq.MSets.MSetInterface <> s':239 var
R18310:18310 Coq.MSets.MSetInterface <> s:238 var
R18362:18362 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R18375:18377 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R18391:18391 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R18363:18369 Coq.MSets.MSetInterface M Equal def
R18378:18378 Coq.Init.Logic <> ::type_scope:'~'_x not
R18379:18385 Coq.MSets.MSetInterface M Equal def
R18362:18362 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R18375:18377 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R18391:18391 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R18363:18369 Coq.MSets.MSetInterface M Equal def
R18378:18378 Coq.Init.Logic <> ::type_scope:'~'_x not
R18379:18385 Coq.MSets.MSetInterface M Equal def
R18407:18413 Coq.MSets.MSetInterface M equal defax
R18456:18467 Coq.MSets.MSetInterface M equal_spec defax
R18407:18413 Coq.MSets.MSetInterface M equal defax
R18456:18467 Coq.MSets.MSetInterface M equal_spec defax
R18456:18467 Coq.MSets.MSetInterface M equal_spec defax
R18456:18467 Coq.MSets.MSetInterface M equal_spec defax
R18456:18467 Coq.MSets.MSetInterface M equal_spec defax
R18456:18467 Coq.MSets.MSetInterface M equal_spec defax
R18456:18467 Coq.MSets.MSetInterface M equal_spec defax
R18456:18467 Coq.MSets.MSetInterface M equal_spec defax
R18456:18467 Coq.MSets.MSetInterface M equal_spec defax
sec 18503:18506 WRaw2SetsOn Spec
var 18520:18520 WRaw2SetsOn.Spec s
var 18522:18523 WRaw2SetsOn.Spec s'
R18527:18527 Coq.MSets.MSetInterface WRaw2SetsOn t def
var 18541:18541 WRaw2SetsOn.Spec x
var 18543:18543 WRaw2SetsOn.Spec y
R18547:18549 Coq.MSets.MSetInterface WRaw2SetsOn elt def
var 18563:18563 WRaw2SetsOn.Spec f
R18570:18573 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18567:18569 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R18574:18577 Coq.Init.Datatypes <> bool ind
abbrev 18591:18597 WRaw2SetsOn compatb
R18603:18608 Coq.Classes.Morphisms <> Proper class
R18615:18617 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R18611:18614 Coq.MSets.MSetInterface E eq defax
R18618:18625 Coq.Init.Logic <> eq ind
prf 18654:18661 WRaw2SetsOn mem_spec
R18679:18683 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18672:18674 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18665:18667 Coq.MSets.MSetInterface WRaw2SetsOn mem def
R18671:18671 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18669:18669 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R18675:18678 Coq.Init.Datatypes <> true constr
R18684:18685 Coq.MSets.MSetInterface WRaw2SetsOn In def
R18689:18689 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18687:18687 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R18709:18718 Coq.MSets.MSetInterface M mem_spec defax
R18709:18718 Coq.MSets.MSetInterface M mem_spec defax
prf 18741:18750 WRaw2SetsOn equal_spec
R18771:18775 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18764:18766 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18754:18758 Coq.MSets.MSetInterface WRaw2SetsOn equal def
R18762:18763 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R18760:18760 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18767:18770 Coq.Init.Datatypes <> true constr
R18776:18780 Coq.MSets.MSetInterface WRaw2SetsOn Equal def
R18784:18785 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R18782:18782 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18805:18816 Coq.MSets.MSetInterface M equal_spec defax
R18805:18816 Coq.MSets.MSetInterface M equal_spec defax
prf 18841:18851 WRaw2SetsOn subset_spec
R18873:18877 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18866:18868 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18855:18860 Coq.MSets.MSetInterface WRaw2SetsOn subset def
R18864:18865 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R18862:18862 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18869:18872 Coq.Init.Datatypes <> true constr
R18878:18883 Coq.MSets.MSetInterface WRaw2SetsOn Subset def
R18887:18888 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R18885:18885 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R18908:18920 Coq.MSets.MSetInterface M subset_spec defax
R18908:18920 Coq.MSets.MSetInterface M subset_spec defax
prf 18945:18954 WRaw2SetsOn empty_spec
R18958:18962 Coq.MSets.MSetInterface WRaw2SetsOn Empty def
R18964:18968 Coq.MSets.MSetInterface WRaw2SetsOn empty def
R18986:18997 Coq.MSets.MSetInterface M empty_spec defax
R18986:18997 Coq.MSets.MSetInterface M empty_spec defax
prf 19013:19025 WRaw2SetsOn is_empty_spec
R19046:19050 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R19039:19041 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19029:19036 Coq.MSets.MSetInterface WRaw2SetsOn is_empty def
R19038:19038 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19042:19045 Coq.Init.Datatypes <> true constr
R19051:19055 Coq.MSets.MSetInterface WRaw2SetsOn Empty def
R19057:19057 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19077:19091 Coq.MSets.MSetInterface M is_empty_spec defax
R19077:19091 Coq.MSets.MSetInterface M is_empty_spec defax
prf 19110:19117 WRaw2SetsOn add_spec
R19135:19139 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R19121:19122 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19127:19129 Coq.MSets.MSetInterface WRaw2SetsOn add def
R19133:19133 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19131:19131 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19124:19124 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.y var
R19148:19151 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19140:19143 Coq.MSets.MSetInterface E eq defax
R19147:19147 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19145:19145 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.y var
R19152:19153 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19157:19157 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19155:19155 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.y var
R19177:19186 Coq.MSets.MSetInterface M add_spec defax
R19177:19186 Coq.MSets.MSetInterface M add_spec defax
prf 19211:19221 WRaw2SetsOn remove_spec
R19242:19246 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R19225:19226 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19231:19236 Coq.MSets.MSetInterface WRaw2SetsOn remove def
R19240:19240 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19238:19238 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19228:19228 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.y var
R19253:19256 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R19247:19248 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19252:19252 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19250:19250 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.y var
R19257:19257 Coq.Init.Logic <> ::type_scope:'~'_x not
R19258:19261 Coq.MSets.MSetInterface E eq defax
R19265:19265 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19263:19263 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.y var
R19285:19297 Coq.MSets.MSetInterface M remove_spec defax
R19285:19297 Coq.MSets.MSetInterface M remove_spec defax
prf 19322:19335 WRaw2SetsOn singleton_spec
R19357:19361 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R19339:19340 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19345:19353 Coq.MSets.MSetInterface WRaw2SetsOn singleton def
R19355:19355 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19342:19342 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.y var
R19362:19365 Coq.MSets.MSetInterface E eq defax
R19369:19369 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19367:19367 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.y var
R19389:19404 Coq.MSets.MSetInterface M singleton_spec defax
R19389:19404 Coq.MSets.MSetInterface M singleton_spec defax
prf 19425:19434 WRaw2SetsOn union_spec
R19455:19459 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R19438:19439 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19444:19448 Coq.MSets.MSetInterface WRaw2SetsOn union def
R19452:19453 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R19450:19450 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19441:19441 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19466:19469 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19460:19461 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19465:19465 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19463:19463 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19470:19471 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19475:19476 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R19473:19473 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19496:19507 Coq.MSets.MSetInterface M union_spec defax
R19496:19507 Coq.MSets.MSetInterface M union_spec defax
prf 19534:19543 WRaw2SetsOn inter_spec
R19564:19568 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R19547:19548 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19553:19557 Coq.MSets.MSetInterface WRaw2SetsOn inter def
R19561:19562 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R19559:19559 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19550:19550 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19575:19578 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R19569:19570 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19574:19574 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19572:19572 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19579:19580 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19584:19585 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R19582:19582 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19605:19616 Coq.MSets.MSetInterface M inter_spec defax
R19605:19616 Coq.MSets.MSetInterface M inter_spec defax
prf 19643:19651 WRaw2SetsOn diff_spec
R19671:19675 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R19655:19656 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19661:19664 Coq.MSets.MSetInterface WRaw2SetsOn diff def
R19668:19669 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R19666:19666 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19658:19658 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19682:19685 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R19676:19677 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19681:19681 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19679:19679 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19686:19686 Coq.Init.Logic <> ::type_scope:'~'_x not
R19687:19688 Coq.MSets.MSetInterface WRaw2SetsOn In def
R19692:19693 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s' var
R19690:19690 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R19713:19723 Coq.MSets.MSetInterface M diff_spec defax
R19713:19723 Coq.MSets.MSetInterface M diff_spec defax
prf 19750:19758 WRaw2SetsOn fold_spec
binder 19770:19770 <> A:245
R19785:19785 Coq.MSets.MSetInterface <> A:245 var
binder 19781:19781 <> i:246
R19796:19799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19793:19795 Coq.MSets.MSetInterface WRaw2SetsOn elt def
R19801:19804 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19800:19800 Coq.MSets.MSetInterface <> A:245 var
R19805:19805 Coq.MSets.MSetInterface <> A:245 var
binder 19789:19789 <> f:247
R19825:19827 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19815:19818 Coq.MSets.MSetInterface WRaw2SetsOn fold def
R19824:19824 Coq.MSets.MSetInterface <> i:246 var
R19822:19822 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19820:19820 Coq.MSets.MSetInterface <> f:247 var
R19828:19836 Coq.Lists.List <> fold_left def
R19870:19870 Coq.MSets.MSetInterface <> i:246 var
R19858:19865 Coq.MSets.MSetInterface WRaw2SetsOn elements def
R19867:19867 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
binder 19843:19843 <> a:248
binder 19845:19845 <> e:249
R19850:19850 Coq.MSets.MSetInterface <> f:247 var
R19854:19854 Coq.MSets.MSetInterface <> a:248 var
R19852:19852 Coq.MSets.MSetInterface <> e:249 var
R19890:19900 Coq.MSets.MSetInterface M fold_spec defax
R19890:19900 Coq.MSets.MSetInterface M fold_spec defax
prf 19919:19931 WRaw2SetsOn cardinal_spec
R19945:19947 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19935:19942 Coq.MSets.MSetInterface WRaw2SetsOn cardinal def
R19944:19944 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19948:19953 Coq.Init.Datatypes <> length def
R19956:19963 Coq.MSets.MSetInterface WRaw2SetsOn elements def
R19965:19965 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19986:20000 Coq.MSets.MSetInterface M cardinal_spec defax
R20002:20002 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R19986:20000 Coq.MSets.MSetInterface M cardinal_spec defax
R20002:20002 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
prf 20021:20031 WRaw2SetsOn filter_spec
R20044:20052 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20095:20095 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20035:20041 Coq.MSets.MSetInterface WRaw2SetsOn compatb abbrev
R20043:20043 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20070:20074 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20053:20054 Coq.MSets.MSetInterface WRaw2SetsOn In def
R20059:20064 Coq.MSets.MSetInterface WRaw2SetsOn filter def
R20068:20068 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20066:20066 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20056:20056 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R20081:20084 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R20075:20076 Coq.MSets.MSetInterface WRaw2SetsOn In def
R20080:20080 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20078:20078 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R20088:20090 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20085:20085 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20087:20087 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R20091:20094 Coq.Init.Datatypes <> true constr
R20115:20127 Coq.MSets.MSetInterface M filter_spec defax
R20115:20127 Coq.MSets.MSetInterface M filter_spec defax
prf 20150:20161 WRaw2SetsOn for_all_spec
R20174:20182 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20237:20237 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20165:20171 Coq.MSets.MSetInterface WRaw2SetsOn compatb abbrev
R20173:20173 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20201:20205 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20194:20196 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20183:20189 Coq.MSets.MSetInterface WRaw2SetsOn for_all def
R20193:20193 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20191:20191 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20197:20200 Coq.Init.Datatypes <> true constr
R20206:20212 Coq.MSets.MSetInterface WRaw2SetsOn For_all def
R20236:20236 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
binder 20219:20219 <> x:250
R20227:20229 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20224:20224 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20226:20226 Coq.MSets.MSetInterface <> x:250 var
R20230:20233 Coq.Init.Datatypes <> true constr
R20257:20270 Coq.MSets.MSetInterface M for_all_spec defax
R20257:20270 Coq.MSets.MSetInterface M for_all_spec defax
prf 20291:20301 WRaw2SetsOn exists_spec
R20314:20322 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20376:20376 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20305:20311 Coq.MSets.MSetInterface WRaw2SetsOn compatb abbrev
R20313:20313 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20341:20345 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20334:20336 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20323:20329 Coq.MSets.MSetInterface WRaw2SetsOn exists_ def
R20333:20333 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20331:20331 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20337:20340 Coq.Init.Datatypes <> true constr
R20346:20351 Coq.MSets.MSetInterface WRaw2SetsOn Exists def
R20375:20375 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
binder 20358:20358 <> x:251
R20366:20368 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20363:20363 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20365:20365 Coq.MSets.MSetInterface <> x:251 var
R20369:20372 Coq.Init.Datatypes <> true constr
R20396:20408 Coq.MSets.MSetInterface M exists_spec defax
R20396:20408 Coq.MSets.MSetInterface M exists_spec defax
prf 20429:20443 WRaw2SetsOn partition_spec1
R20456:20459 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20447:20453 Coq.MSets.MSetInterface WRaw2SetsOn compatb abbrev
R20455:20455 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20460:20464 Coq.MSets.MSetInterface WRaw2SetsOn Equal def
R20489:20494 Coq.MSets.MSetInterface WRaw2SetsOn filter def
R20498:20498 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20496:20496 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20467:20469 Coq.Init.Datatypes <> fst def
R20472:20480 Coq.MSets.MSetInterface WRaw2SetsOn partition def
R20484:20484 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20482:20482 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20519:20535 Coq.MSets.MSetInterface M partition_spec1 defax
R20519:20535 Coq.MSets.MSetInterface M partition_spec1 defax
prf 20556:20570 WRaw2SetsOn partition_spec2
R20583:20592 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20574:20580 Coq.MSets.MSetInterface WRaw2SetsOn compatb abbrev
R20582:20582 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20593:20597 Coq.MSets.MSetInterface WRaw2SetsOn Equal def
R20622:20627 Coq.MSets.MSetInterface WRaw2SetsOn filter def
R20651:20651 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
binder 20634:20634 <> x:252
R20639:20642 Coq.Init.Datatypes <> negb def
R20645:20645 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20647:20647 Coq.MSets.MSetInterface <> x:252 var
R20600:20602 Coq.Init.Datatypes <> snd def
R20605:20613 Coq.MSets.MSetInterface WRaw2SetsOn partition def
R20617:20617 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20615:20615 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.f var
R20672:20688 Coq.MSets.MSetInterface M partition_spec2 defax
R20672:20688 Coq.MSets.MSetInterface M partition_spec2 defax
prf 20709:20722 WRaw2SetsOn elements_spec1
R20749:20753 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20726:20728 Coq.Lists.SetoidList <> InA ind
R20738:20745 Coq.MSets.MSetInterface WRaw2SetsOn elements def
R20747:20747 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20735:20735 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R20730:20733 Coq.MSets.MSetInterface E eq defax
R20754:20755 Coq.MSets.MSetInterface WRaw2SetsOn In def
R20759:20759 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20757:20757 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R20779:20794 Coq.MSets.MSetInterface M elements_spec1 defax
R20779:20794 Coq.MSets.MSetInterface M elements_spec1 defax
prf 20815:20829 WRaw2SetsOn elements_spec2w
R20833:20838 Coq.Lists.SetoidList <> NoDupA ind
R20846:20853 Coq.MSets.MSetInterface WRaw2SetsOn elements def
R20855:20855 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20840:20843 Coq.MSets.MSetInterface E eq defax
R20876:20892 Coq.MSets.MSetInterface M elements_spec2w defax
R20876:20892 Coq.MSets.MSetInterface M elements_spec2w defax
prf 20913:20924 WRaw2SetsOn choose_spec1
R20945:20948 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20936:20938 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20928:20933 Coq.MSets.MSetInterface WRaw2SetsOn choose def
R20935:20935 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20939:20942 Coq.Init.Datatypes <> Some constr
R20944:20944 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R20949:20950 Coq.MSets.MSetInterface WRaw2SetsOn In def
R20954:20954 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R20952:20952 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.x var
R20974:20987 Coq.MSets.MSetInterface M choose_spec1 defax
R20974:20987 Coq.MSets.MSetInterface M choose_spec1 defax
prf 21008:21019 WRaw2SetsOn choose_spec2
R21038:21041 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21031:21033 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21023:21028 Coq.MSets.MSetInterface WRaw2SetsOn choose def
R21030:21030 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R21034:21037 Coq.Init.Datatypes <> None constr
R21042:21046 Coq.MSets.MSetInterface WRaw2SetsOn Empty def
R21048:21048 Coq.MSets.MSetInterface <> WRaw2SetsOn.Spec.s var
R21068:21081 Coq.MSets.MSetInterface M choose_spec2 defax
R21068:21081 Coq.MSets.MSetInterface M choose_spec2 defax
R21098:21101 Coq.MSets.MSetInterface WRaw2SetsOn.Spec <> sec
R21109:21119 Coq.MSets.MSetInterface WRaw2SetsOn <> mod
R21143:21155 Coq.Structures.Equalities DecidableType <> mod
R21160:21167 Coq.MSets.MSetInterface WRawSets <> mod
R21169:21169 Coq.MSets.MSetInterface D <> modtype
R21175:21179 Coq.MSets.MSetInterface WSets <> mod
R21198:21198 Coq.MSets.MSetInterface D <> modtype
mod 21130:21138 <> WRaw2Sets
R21215:21215 Coq.MSets.MSetInterface D <> modtype
mod 21210:21210 <> WRaw2Sets.E
R21228:21238 Coq.MSets.MSetInterface WRaw2SetsOn <> modtype
R21240:21240 Coq.MSets.MSetInterface D <> modtype
R21242:21242 Coq.MSets.MSetInterface M <> modtype
R21249:21257 Coq.MSets.MSetInterface WRaw2Sets <> mod
R21325:21335 Coq.Structures.Orders OrderedType <> mod
modtype 21312:21318 <> RawSets
R21349:21356 Coq.MSets.MSetInterface WRawSets <> mod
R21358:21358 Coq.MSets.MSetInterface E <> modtype
R21363:21371 Coq.MSets.MSetInterface HasOrdOps <> mod
R21376:21380 Coq.Structures.Orders HasLt <> mod
R21385:21394 Coq.Structures.Orders IsStrOrder <> mod
sec 21408:21411 RawSets Spec
var 21425:21425 RawSets.Spec s
var 21427:21428 RawSets.Spec s'
R21431:21431 Coq.MSets.MSetInterface RawSets t defax
var 21445:21445 RawSets.Spec x
var 21447:21447 RawSets.Spec y
R21451:21453 Coq.MSets.MSetInterface RawSets elt def
ax 21505:21516 RawSets compare_spec
R21529:21530 Coq.MSets.MSetInterface RawSets Ok class
R21532:21532 Coq.MSets.MSetInterface <> RawSets.Spec.s var
binder 21529:21532 <> H:257
R21535:21536 Coq.MSets.MSetInterface RawSets Ok class
R21538:21539 Coq.MSets.MSetInterface <> RawSets.Spec.s' var
binder 21535:21539 <> H0:258
R21543:21550 Coq.Init.Datatypes <> CompSpec def
R21564:21570 Coq.MSets.MSetInterface RawSets compare defax
R21574:21575 Coq.MSets.MSetInterface <> RawSets.Spec.s' var
R21572:21572 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21560:21561 Coq.MSets.MSetInterface <> RawSets.Spec.s' var
R21558:21558 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21555:21556 Coq.MSets.MSetInterface RawSets lt defax
R21552:21553 Coq.MSets.MSetInterface RawSets eq def
ax 21640:21653 RawSets elements_spec2
R21666:21667 Coq.MSets.MSetInterface RawSets Ok class
R21669:21669 Coq.MSets.MSetInterface <> RawSets.Spec.s var
binder 21666:21669 <> H:260
R21673:21676 Coq.Sorting.Sorted <> sort abbrev
R21684:21691 Coq.MSets.MSetInterface RawSets elements defax
R21693:21693 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21678:21681 Coq.MSets.MSetInterface E lt defax
ax 21746:21758 RawSets min_elt_spec1
R21780:21783 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21771:21773 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21762:21768 Coq.MSets.MSetInterface RawSets min_elt defax
R21770:21770 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21774:21777 Coq.Init.Datatypes <> Some constr
R21779:21779 Coq.MSets.MSetInterface <> RawSets.Spec.x var
R21784:21785 Coq.MSets.MSetInterface RawSets In defax
R21789:21789 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21787:21787 Coq.MSets.MSetInterface <> RawSets.Spec.x var
ax 21804:21816 RawSets min_elt_spec2
R21829:21830 Coq.MSets.MSetInterface RawSets Ok class
R21832:21832 Coq.MSets.MSetInterface <> RawSets.Spec.s var
binder 21829:21832 <> H:263
R21854:21857 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21845:21847 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21836:21842 Coq.MSets.MSetInterface RawSets min_elt defax
R21844:21844 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21848:21851 Coq.Init.Datatypes <> Some constr
R21853:21853 Coq.MSets.MSetInterface <> RawSets.Spec.x var
R21864:21867 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21858:21859 Coq.MSets.MSetInterface RawSets In defax
R21863:21863 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21861:21861 Coq.MSets.MSetInterface <> RawSets.Spec.y var
R21868:21869 Coq.Init.Logic <> ::type_scope:'~'_x not
R21870:21873 Coq.MSets.MSetInterface E lt defax
R21877:21877 Coq.MSets.MSetInterface <> RawSets.Spec.x var
R21875:21875 Coq.MSets.MSetInterface <> RawSets.Spec.y var
ax 21892:21904 RawSets min_elt_spec3
R21924:21927 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21917:21919 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21908:21914 Coq.MSets.MSetInterface RawSets min_elt defax
R21916:21916 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R21920:21923 Coq.Init.Datatypes <> None constr
R21928:21932 Coq.MSets.MSetInterface RawSets Empty def
R21934:21934 Coq.MSets.MSetInterface <> RawSets.Spec.s var
ax 21986:21998 RawSets max_elt_spec1
R22020:22023 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22011:22013 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22002:22008 Coq.MSets.MSetInterface RawSets max_elt defax
R22010:22010 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R22014:22017 Coq.Init.Datatypes <> Some constr
R22019:22019 Coq.MSets.MSetInterface <> RawSets.Spec.x var
R22024:22025 Coq.MSets.MSetInterface RawSets In defax
R22029:22029 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R22027:22027 Coq.MSets.MSetInterface <> RawSets.Spec.x var
ax 22044:22056 RawSets max_elt_spec2
R22069:22070 Coq.MSets.MSetInterface RawSets Ok class
R22072:22072 Coq.MSets.MSetInterface <> RawSets.Spec.s var
binder 22069:22072 <> H:267
R22094:22097 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22085:22087 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22076:22082 Coq.MSets.MSetInterface RawSets max_elt defax
R22084:22084 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R22088:22091 Coq.Init.Datatypes <> Some constr
R22093:22093 Coq.MSets.MSetInterface <> RawSets.Spec.x var
R22104:22107 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22098:22099 Coq.MSets.MSetInterface RawSets In defax
R22103:22103 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R22101:22101 Coq.MSets.MSetInterface <> RawSets.Spec.y var
R22108:22109 Coq.Init.Logic <> ::type_scope:'~'_x not
R22110:22113 Coq.MSets.MSetInterface E lt defax
R22117:22117 Coq.MSets.MSetInterface <> RawSets.Spec.y var
R22115:22115 Coq.MSets.MSetInterface <> RawSets.Spec.x var
ax 22132:22144 RawSets max_elt_spec3
R22164:22167 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22157:22159 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22148:22154 Coq.MSets.MSetInterface RawSets max_elt defax
R22156:22156 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R22160:22163 Coq.Init.Datatypes <> None constr
R22168:22172 Coq.MSets.MSetInterface RawSets Empty def
R22174:22174 Coq.MSets.MSetInterface <> RawSets.Spec.s var
ax 22236:22247 RawSets choose_spec3
R22260:22261 Coq.MSets.MSetInterface RawSets Ok class
R22263:22263 Coq.MSets.MSetInterface <> RawSets.Spec.s var
binder 22260:22263 <> H:270
R22266:22267 Coq.MSets.MSetInterface RawSets Ok class
R22269:22270 Coq.MSets.MSetInterface <> RawSets.Spec.s' var
binder 22266:22270 <> H0:271
R22295:22298 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22286:22288 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22278:22283 Coq.MSets.MSetInterface RawSets choose defax
R22285:22285 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R22289:22292 Coq.Init.Datatypes <> Some constr
R22294:22294 Coq.MSets.MSetInterface <> RawSets.Spec.x var
R22317:22320 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22308:22310 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22299:22304 Coq.MSets.MSetInterface RawSets choose defax
R22306:22307 Coq.MSets.MSetInterface <> RawSets.Spec.s' var
R22311:22314 Coq.Init.Datatypes <> Some constr
R22316:22316 Coq.MSets.MSetInterface <> RawSets.Spec.y var
R22331:22334 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22321:22325 Coq.MSets.MSetInterface RawSets Equal def
R22329:22330 Coq.MSets.MSetInterface <> RawSets.Spec.s' var
R22327:22327 Coq.MSets.MSetInterface <> RawSets.Spec.s var
R22335:22338 Coq.MSets.MSetInterface E eq defax
R22342:22342 Coq.MSets.MSetInterface <> RawSets.Spec.y var
R22340:22340 Coq.MSets.MSetInterface <> RawSets.Spec.x var
R22352:22355 Coq.MSets.MSetInterface RawSets.Spec <> sec
R22363:22369 Coq.MSets.MSetInterface RawSets <> modtype
R22425:22435 Coq.Structures.Orders OrderedType <> mod
R22440:22446 Coq.MSets.MSetInterface RawSets <> mod
R22448:22448 Coq.MSets.MSetInterface O <> modtype
R22454:22459 Coq.MSets.MSetInterface SetsOn <> mod
R22461:22461 Coq.MSets.MSetInterface O <> modtype
mod 22411:22420 <> Raw2SetsOn
R22474:22484 Coq.MSets.MSetInterface WRaw2SetsOn <> modtype
R22486:22486 Coq.MSets.MSetInterface O <> modtype
R22488:22488 Coq.MSets.MSetInterface M <> modtype
def 22505:22511 Raw2SetsOn compare
R22519:22519 Coq.MSets.MSetInterface Raw2SetsOn t def
binder 22514:22514 <> s:273
binder 22516:22517 <> s':274
R22525:22533 Coq.MSets.MSetInterface M compare defax
R22537:22538 Coq.MSets.MSetInterface <> s':274 var
R22535:22535 Coq.MSets.MSetInterface <> s:273 var
def 22554:22560 Raw2SetsOn min_elt
R22565:22565 Coq.MSets.MSetInterface Raw2SetsOn t def
binder 22563:22563 <> s:275
R22570:22575 Coq.Init.Datatypes <> option ind
R22577:22579 Coq.MSets.MSetInterface Raw2SetsOn elt def
R22584:22592 Coq.MSets.MSetInterface M min_elt defax
R22594:22594 Coq.MSets.MSetInterface <> s:275 var
def 22610:22616 Raw2SetsOn max_elt
R22621:22621 Coq.MSets.MSetInterface Raw2SetsOn t def
binder 22619:22619 <> s:276
R22626:22631 Coq.Init.Datatypes <> option ind
R22633:22635 Coq.MSets.MSetInterface Raw2SetsOn elt def
R22640:22648 Coq.MSets.MSetInterface M max_elt defax
R22650:22650 Coq.MSets.MSetInterface <> s:276 var
def 22666:22667 Raw2SetsOn lt
R22675:22675 Coq.MSets.MSetInterface Raw2SetsOn t def
binder 22670:22670 <> s:277
binder 22672:22673 <> s':278
R22681:22684 Coq.MSets.MSetInterface M lt defax
R22688:22689 Coq.MSets.MSetInterface <> s':278 var
R22686:22686 Coq.MSets.MSetInterface <> s:277 var
inst 22745:22755 Raw2SetsOn lt_strorder
R22759:22769 Coq.Classes.RelationClasses <> StrictOrder class
R22771:22772 Coq.MSets.MSetInterface Raw2SetsOn lt def
R22805:22806 Coq.MSets.MSetInterface Raw2SetsOn lt def
R22825:22834 Coq.Classes.RelationClasses <> complement def
R22857:22869 Coq.Classes.RelationClasses <> irreflexivity def
R22857:22869 Coq.Classes.RelationClasses <> irreflexivity def
inst 22938:22946 Raw2SetsOn lt_compat
R22950:22955 Coq.Classes.Morphisms <> Proper class
R22973:22974 Coq.MSets.MSetInterface Raw2SetsOn lt def
R22960:22962 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R22958:22959 Coq.MSets.MSetInterface Raw2SetsOn eq def
R22965:22967 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R22963:22964 Coq.MSets.MSetInterface Raw2SetsOn eq def
R22968:22970 Coq.Init.Logic <> iff def
R23007:23008 Coq.MSets.MSetInterface Raw2SetsOn eq def
R23011:23012 Coq.MSets.MSetInterface Raw2SetsOn lt def
R23083:23086 Coq.MSets.MSetInterface M eq def
R23083:23086 Coq.MSets.MSetInterface M eq def
R23111:23114 Coq.MSets.MSetInterface M eq def
R23111:23114 Coq.MSets.MSetInterface M eq def
sec 23177:23180 Raw2SetsOn Spec
var 23194:23194 Raw2SetsOn.Spec s
var 23196:23197 Raw2SetsOn.Spec s'
var 23199:23201 Raw2SetsOn.Spec s''
R23205:23205 Coq.MSets.MSetInterface Raw2SetsOn t def
var 23219:23219 Raw2SetsOn.Spec x
var 23221:23221 Raw2SetsOn.Spec y
R23225:23227 Coq.MSets.MSetInterface Raw2SetsOn elt def
prf 23239:23250 Raw2SetsOn compare_spec
R23254:23261 Coq.Init.Datatypes <> CompSpec def
R23275:23281 Coq.MSets.MSetInterface Raw2SetsOn compare def
R23285:23286 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s' var
R23283:23283 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23271:23272 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s' var
R23269:23269 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23266:23267 Coq.MSets.MSetInterface Raw2SetsOn lt def
R23263:23264 Coq.MSets.MSetInterface Raw2SetsOn eq def
R23306:23312 Coq.MSets.MSetInterface Raw2SetsOn compare def
R23326:23339 Coq.MSets.MSetInterface M compare_spec defax
R23341:23341 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23343:23344 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s' var
R23326:23339 Coq.MSets.MSetInterface M compare_spec defax
R23341:23341 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23343:23344 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s' var
prf 23420:23433 Raw2SetsOn elements_spec2
R23437:23440 Coq.Sorting.Sorted <> sort abbrev
R23448:23455 Coq.MSets.MSetInterface Raw2SetsOn elements def
R23457:23457 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23442:23445 Coq.MSets.MSetInterface O lt defax
R23478:23493 Coq.MSets.MSetInterface M elements_spec2 defax
R23478:23493 Coq.MSets.MSetInterface M elements_spec2 defax
prf 23551:23563 Raw2SetsOn min_elt_spec1
R23585:23588 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23576:23578 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23567:23573 Coq.MSets.MSetInterface Raw2SetsOn min_elt def
R23575:23575 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23579:23582 Coq.Init.Datatypes <> Some constr
R23584:23584 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R23589:23590 Coq.MSets.MSetInterface Raw2SetsOn In def
R23594:23594 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23592:23592 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R23614:23628 Coq.MSets.MSetInterface M min_elt_spec1 defax
R23614:23628 Coq.MSets.MSetInterface M min_elt_spec1 defax
prf 23649:23661 Raw2SetsOn min_elt_spec2
R23683:23686 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23674:23676 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23665:23671 Coq.MSets.MSetInterface Raw2SetsOn min_elt def
R23673:23673 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23677:23680 Coq.Init.Datatypes <> Some constr
R23682:23682 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R23693:23696 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23687:23688 Coq.MSets.MSetInterface Raw2SetsOn In def
R23692:23692 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23690:23690 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.y var
R23697:23698 Coq.Init.Logic <> ::type_scope:'~'_x not
R23699:23702 Coq.MSets.MSetInterface O lt defax
R23706:23706 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R23704:23704 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.y var
R23726:23740 Coq.MSets.MSetInterface M min_elt_spec2 defax
R23726:23740 Coq.MSets.MSetInterface M min_elt_spec2 defax
prf 23765:23777 Raw2SetsOn min_elt_spec3
R23797:23800 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23790:23792 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23781:23787 Coq.MSets.MSetInterface Raw2SetsOn min_elt def
R23789:23789 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23793:23796 Coq.Init.Datatypes <> None constr
R23801:23805 Coq.MSets.MSetInterface Raw2SetsOn Empty def
R23807:23807 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23827:23841 Coq.MSets.MSetInterface M min_elt_spec3 defax
R23827:23841 Coq.MSets.MSetInterface M min_elt_spec3 defax
prf 23897:23909 Raw2SetsOn max_elt_spec1
R23931:23934 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23922:23924 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23913:23919 Coq.MSets.MSetInterface Raw2SetsOn max_elt def
R23921:23921 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23925:23928 Coq.Init.Datatypes <> Some constr
R23930:23930 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R23935:23936 Coq.MSets.MSetInterface Raw2SetsOn In def
R23940:23940 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R23938:23938 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R23960:23974 Coq.MSets.MSetInterface M max_elt_spec1 defax
R23960:23974 Coq.MSets.MSetInterface M max_elt_spec1 defax
prf 23995:24007 Raw2SetsOn max_elt_spec2
R24029:24032 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24020:24022 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24011:24017 Coq.MSets.MSetInterface Raw2SetsOn max_elt def
R24019:24019 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R24023:24026 Coq.Init.Datatypes <> Some constr
R24028:24028 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R24039:24042 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24033:24034 Coq.MSets.MSetInterface Raw2SetsOn In def
R24038:24038 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R24036:24036 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.y var
R24043:24044 Coq.Init.Logic <> ::type_scope:'~'_x not
R24045:24048 Coq.MSets.MSetInterface O lt defax
R24052:24052 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.y var
R24050:24050 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R24072:24086 Coq.MSets.MSetInterface M max_elt_spec2 defax
R24072:24086 Coq.MSets.MSetInterface M max_elt_spec2 defax
prf 24111:24123 Raw2SetsOn max_elt_spec3
R24143:24146 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24136:24138 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24127:24133 Coq.MSets.MSetInterface Raw2SetsOn max_elt def
R24135:24135 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R24139:24142 Coq.Init.Datatypes <> None constr
R24147:24151 Coq.MSets.MSetInterface Raw2SetsOn Empty def
R24153:24153 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R24173:24187 Coq.MSets.MSetInterface M max_elt_spec3 defax
R24173:24187 Coq.MSets.MSetInterface M max_elt_spec3 defax
prf 24253:24264 Raw2SetsOn choose_spec3
R24289:24292 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24280:24282 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24272:24277 Coq.MSets.MSetInterface Raw2SetsOn choose def
R24279:24279 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R24283:24286 Coq.Init.Datatypes <> Some constr
R24288:24288 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R24311:24314 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24302:24304 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24293:24298 Coq.MSets.MSetInterface Raw2SetsOn choose def
R24300:24301 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s' var
R24305:24308 Coq.Init.Datatypes <> Some constr
R24310:24310 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.y var
R24325:24328 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24315:24319 Coq.MSets.MSetInterface Raw2SetsOn Equal def
R24323:24324 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s' var
R24321:24321 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.s var
R24329:24332 Coq.MSets.MSetInterface O eq defax
R24336:24336 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.y var
R24334:24334 Coq.MSets.MSetInterface <> Raw2SetsOn.Spec.x var
R24356:24369 Coq.MSets.MSetInterface M choose_spec3 defax
R24356:24369 Coq.MSets.MSetInterface M choose_spec3 defax
R24397:24400 Coq.MSets.MSetInterface Raw2SetsOn.Spec <> sec
R24408:24417 Coq.MSets.MSetInterface Raw2SetsOn <> mod
R24440:24450 Coq.Structures.Orders OrderedType <> mod
R24455:24461 Coq.MSets.MSetInterface RawSets <> mod
R24463:24463 Coq.MSets.MSetInterface O <> modtype
R24469:24472 Coq.MSets.MSetInterface Sets <> mod
R24491:24491 Coq.MSets.MSetInterface O <> modtype
mod 24428:24435 <> Raw2Sets
R24508:24508 Coq.MSets.MSetInterface O <> modtype
mod 24503:24503 <> Raw2Sets.E
R24521:24530 Coq.MSets.MSetInterface Raw2SetsOn <> modtype
R24532:24532 Coq.MSets.MSetInterface O <> modtype
R24534:24534 Coq.MSets.MSetInterface M <> modtype
R24541:24548 Coq.MSets.MSetInterface Raw2Sets <> mod
R24884:24894 Coq.Structures.Orders OrderedType <> mod
modtype 24878:24879 <> IN
ax 24916:24916 IN t
ax 24944:24945 IN In
R24952:24955 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24949:24951 Coq.MSets.MSetInterface O t defax
R24957:24960 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24956:24956 Coq.MSets.MSetInterface IN t defax
inst 24995:25003 IN In_compat
R25007:25012 Coq.Classes.Morphisms <> Proper class
R25032:25033 Coq.MSets.MSetInterface IN In defax
R25019:25021 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R25015:25018 Coq.MSets.MSetInterface O eq defax
R25024:25026 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R25022:25023 Coq.Init.Logic <> eq ind
R25027:25029 Coq.Init.Logic <> iff def
def 25048:25052 IN Equal
binder 25054:25054 <> s:286
binder 25056:25057 <> s':287
binder 25069:25069 <> x:288
R25078:25082 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R25072:25073 Coq.MSets.MSetInterface IN In defax
R25077:25077 Coq.MSets.MSetInterface <> s:286 var
R25075:25075 Coq.MSets.MSetInterface <> x:288 var
R25083:25084 Coq.MSets.MSetInterface IN In defax
R25088:25089 Coq.MSets.MSetInterface <> s':287 var
R25086:25086 Coq.MSets.MSetInterface <> x:288 var
def 25104:25108 IN Empty
binder 25110:25110 <> s:289
binder 25122:25122 <> x:290
R25125:25125 Coq.Init.Logic <> ::type_scope:'~'_x not
R25126:25127 Coq.MSets.MSetInterface IN In defax
R25131:25131 Coq.MSets.MSetInterface <> s:289 var
R25129:25129 Coq.MSets.MSetInterface <> x:290 var
R25138:25139 Coq.MSets.MSetInterface IN <> modtype
R25169:25179 Coq.Structures.Orders OrderedType <> mod
R25191:25192 Coq.MSets.MSetInterface IN <> mod
R25194:25194 Coq.MSets.MSetInterface O <> modtype
mod 25150:25164 <> MakeSetOrdering
R25219:25234 Coq.Structures.OrdersFacts OrderedTypeFacts <> modtype
R25236:25236 Coq.MSets.MSetInterface O <> modtype
mod 25213:25214 <> MakeSetOrdering.MO
def 25252:25253 MakeSetOrdering eq
R25258:25261 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25257:25257 Coq.MSets.MSetInterface M t defax
R25263:25266 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25262:25262 Coq.MSets.MSetInterface M t defax
R25275:25279 Coq.MSets.MSetInterface M Equal def
inst 25303:25310 MakeSetOrdering eq_equiv
R25314:25324 Coq.Classes.RelationClasses <> Equivalence class
R25326:25327 Coq.MSets.MSetInterface MakeSetOrdering eq def
R25378:25383 Coq.Classes.Morphisms <> Proper class
R25403:25404 Coq.MSets.MSetInterface M In defax
R25390:25392 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R25386:25389 Coq.MSets.MSetInterface O eq defax
R25395:25397 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R25393:25394 Coq.MSets.MSetInterface MakeSetOrdering eq def
R25398:25400 Coq.Init.Logic <> iff def
def 25481:25485 MakeSetOrdering Below
binder 25487:25487 <> x:291
binder 25489:25489 <> s:292
binder 25501:25501 <> y:293
R25510:25513 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25504:25505 Coq.MSets.MSetInterface M In defax
R25509:25509 Coq.MSets.MSetInterface <> s:292 var
R25507:25507 Coq.MSets.MSetInterface <> y:293 var
R25514:25517 Coq.MSets.MSetInterface O lt defax
R25521:25521 Coq.MSets.MSetInterface <> x:291 var
R25519:25519 Coq.MSets.MSetInterface <> y:293 var
def 25536:25540 MakeSetOrdering Above
binder 25542:25542 <> x:294
binder 25544:25544 <> s:295
binder 25556:25556 <> y:296
R25565:25568 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25559:25560 Coq.MSets.MSetInterface M In defax
R25564:25564 Coq.MSets.MSetInterface <> s:295 var
R25562:25562 Coq.MSets.MSetInterface <> y:296 var
R25569:25572 Coq.MSets.MSetInterface O lt defax
R25576:25576 Coq.MSets.MSetInterface <> y:296 var
R25574:25574 Coq.MSets.MSetInterface <> x:294 var
def 25592:25602 MakeSetOrdering EquivBefore
binder 25604:25604 <> x:297
binder 25606:25606 <> s:298
binder 25608:25609 <> s':299
binder 25624:25624 <> y:300
R25635:25639 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25658:25658 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25627:25630 Coq.MSets.MSetInterface O lt defax
R25634:25634 Coq.MSets.MSetInterface <> x:297 var
R25632:25632 Coq.MSets.MSetInterface <> y:300 var
R25646:25650 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R25640:25641 Coq.MSets.MSetInterface M In defax
R25645:25645 Coq.MSets.MSetInterface <> s:298 var
R25643:25643 Coq.MSets.MSetInterface <> y:300 var
R25651:25652 Coq.MSets.MSetInterface M In defax
R25656:25657 Coq.MSets.MSetInterface <> s':299 var
R25654:25654 Coq.MSets.MSetInterface <> y:300 var
def 25674:25685 MakeSetOrdering EmptyBetween
binder 25687:25687 <> x:301
binder 25689:25689 <> y:302
binder 25691:25691 <> s:303
binder 25706:25706 <> z:304
R25715:25718 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25709:25710 Coq.MSets.MSetInterface M In defax
R25714:25714 Coq.MSets.MSetInterface <> s:303 var
R25712:25712 Coq.MSets.MSetInterface <> z:304 var
R25727:25730 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25719:25722 Coq.MSets.MSetInterface O lt defax
R25726:25726 Coq.MSets.MSetInterface <> y:302 var
R25724:25724 Coq.MSets.MSetInterface <> z:304 var
R25731:25734 Coq.MSets.MSetInterface O lt defax
R25738:25738 Coq.MSets.MSetInterface <> x:301 var
R25736:25736 Coq.MSets.MSetInterface <> z:304 var
def 25754:25755 MakeSetOrdering lt
binder 25757:25757 <> s:305
binder 25759:25760 <> s':306
R25765:25771 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25773:25774 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 25772:25772 <> x:307
R25793:25800 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25896:25896 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25775:25785 Coq.MSets.MSetInterface MakeSetOrdering EquivBefore def
R25791:25792 Coq.MSets.MSetInterface <> s':306 var
R25789:25789 Coq.MSets.MSetInterface <> s:305 var
R25787:25787 Coq.MSets.MSetInterface <> x:307 var
R25801:25801 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R25822:25831 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R25895:25895 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R25809:25812 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25802:25803 Coq.MSets.MSetInterface M In defax
R25807:25808 Coq.MSets.MSetInterface <> s':306 var
R25805:25805 Coq.MSets.MSetInterface <> x:307 var
R25813:25817 Coq.MSets.MSetInterface MakeSetOrdering Below def
R25821:25821 Coq.MSets.MSetInterface <> s:305 var
R25819:25819 Coq.MSets.MSetInterface <> x:307 var
R25838:25842 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25832:25833 Coq.MSets.MSetInterface M In defax
R25837:25837 Coq.MSets.MSetInterface <> s:305 var
R25835:25835 Coq.MSets.MSetInterface <> x:307 var
R25843:25849 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25851:25852 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 25850:25850 <> y:308
R25860:25863 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25853:25854 Coq.MSets.MSetInterface M In defax
R25858:25859 Coq.MSets.MSetInterface <> s':306 var
R25856:25856 Coq.MSets.MSetInterface <> y:308 var
R25872:25875 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25864:25867 Coq.MSets.MSetInterface O lt defax
R25871:25871 Coq.MSets.MSetInterface <> y:308 var
R25869:25869 Coq.MSets.MSetInterface <> x:307 var
R25876:25887 Coq.MSets.MSetInterface MakeSetOrdering EmptyBetween def
R25893:25894 Coq.MSets.MSetInterface <> s':306 var
R25891:25891 Coq.MSets.MSetInterface <> y:308 var
R25889:25889 Coq.MSets.MSetInterface <> x:307 var
R25922:25927 Coq.Classes.Morphisms <> Proper class
R25952:25962 Coq.MSets.MSetInterface MakeSetOrdering EquivBefore def
R25934:25936 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R25930:25933 Coq.MSets.MSetInterface O eq defax
R25939:25941 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R25937:25938 Coq.MSets.MSetInterface MakeSetOrdering eq def
R25944:25946 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R25942:25943 Coq.MSets.MSetInterface MakeSetOrdering eq def
R25947:25949 Coq.Init.Logic <> iff def
R25982:25992 Coq.MSets.MSetInterface MakeSetOrdering EquivBefore def
R26128:26133 Coq.Classes.Morphisms <> Proper class
R26153:26157 Coq.MSets.MSetInterface MakeSetOrdering Below def
R26140:26142 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R26136:26139 Coq.MSets.MSetInterface O eq defax
R26145:26147 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R26143:26144 Coq.MSets.MSetInterface MakeSetOrdering eq def
R26148:26150 Coq.Init.Logic <> iff def
R26177:26181 Coq.MSets.MSetInterface MakeSetOrdering Below def
R26288:26293 Coq.Classes.Morphisms <> Proper class
R26313:26317 Coq.MSets.MSetInterface MakeSetOrdering Above def
R26300:26302 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R26296:26299 Coq.MSets.MSetInterface O eq defax
R26305:26307 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R26303:26304 Coq.MSets.MSetInterface MakeSetOrdering eq def
R26308:26310 Coq.Init.Logic <> iff def
R26337:26341 Coq.MSets.MSetInterface MakeSetOrdering Above def
R26448:26453 Coq.Classes.Morphisms <> Proper class
R26480:26491 Coq.MSets.MSetInterface MakeSetOrdering EmptyBetween def
R26460:26462 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R26456:26459 Coq.MSets.MSetInterface O eq defax
R26467:26469 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R26463:26466 Coq.MSets.MSetInterface O eq defax
R26472:26474 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R26470:26471 Coq.MSets.MSetInterface MakeSetOrdering eq def
R26475:26477 Coq.Init.Logic <> iff def
R26511:26522 Coq.MSets.MSetInterface MakeSetOrdering EmptyBetween def
inst 26654:26662 MakeSetOrdering lt_compat
R26666:26671 Coq.Classes.Morphisms <> Proper class
R26689:26690 Coq.MSets.MSetInterface MakeSetOrdering lt def
R26676:26678 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R26674:26675 Coq.MSets.MSetInterface MakeSetOrdering eq def
R26681:26683 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R26679:26680 Coq.MSets.MSetInterface MakeSetOrdering eq def
R26684:26686 Coq.Init.Logic <> iff def
R26710:26711 Coq.MSets.MSetInterface MakeSetOrdering lt def
inst 26820:26830 MakeSetOrdering lt_strorder
R26834:26844 Coq.Classes.RelationClasses <> StrictOrder class
R26846:26847 Coq.MSets.MSetInterface MakeSetOrdering lt def
R27172:27175 Coq.MSets.MSetInterface O lt defax
R27172:27175 Coq.MSets.MSetInterface O lt defax
R29030:29033 Coq.MSets.MSetInterface O lt defax
R29030:29033 Coq.MSets.MSetInterface O lt defax
prf 29209:29218 MakeSetOrdering lt_empty_r
binder 29229:29229 <> s:309
binder 29231:29232 <> s':310
R29243:29246 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29235:29239 Coq.MSets.MSetInterface M Empty def
R29241:29242 Coq.MSets.MSetInterface <> s':310 var
R29247:29248 Coq.Init.Logic <> ::type_scope:'~'_x not
R29249:29250 Coq.MSets.MSetInterface MakeSetOrdering lt def
R29254:29255 Coq.MSets.MSetInterface <> s':310 var
R29252:29252 Coq.MSets.MSetInterface <> s:309 var
def 29378:29380 MakeSetOrdering Add
binder 29382:29382 <> x:311
binder 29384:29384 <> s:312
binder 29386:29387 <> s':313
binder 29399:29399 <> y:314
R29409:29413 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R29402:29403 Coq.MSets.MSetInterface M In defax
R29407:29408 Coq.MSets.MSetInterface <> s':313 var
R29405:29405 Coq.MSets.MSetInterface <> y:314 var
R29422:29425 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R29414:29417 Coq.MSets.MSetInterface O eq defax
R29421:29421 Coq.MSets.MSetInterface <> y:314 var
R29419:29419 Coq.MSets.MSetInterface <> x:311 var
R29426:29427 Coq.MSets.MSetInterface M In defax
R29431:29431 Coq.MSets.MSetInterface <> s:312 var
R29429:29429 Coq.MSets.MSetInterface <> y:314 var
prf 29442:29451 MakeSetOrdering lt_empty_l
binder 29462:29462 <> x:315
binder 29464:29465 <> s1:316
binder 29467:29468 <> s2:317
binder 29470:29472 <> s2':318
R29485:29488 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29477:29481 Coq.MSets.MSetInterface M Empty def
R29483:29484 Coq.MSets.MSetInterface <> s1:316 var
R29499:29502 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29489:29493 Coq.MSets.MSetInterface MakeSetOrdering Above def
R29497:29498 Coq.MSets.MSetInterface <> s2:317 var
R29495:29495 Coq.MSets.MSetInterface <> x:315 var
R29515:29518 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29503:29505 Coq.MSets.MSetInterface MakeSetOrdering Add def
R29512:29514 Coq.MSets.MSetInterface <> s2':318 var
R29509:29510 Coq.MSets.MSetInterface <> s2:317 var
R29507:29507 Coq.MSets.MSetInterface <> x:315 var
R29519:29520 Coq.MSets.MSetInterface MakeSetOrdering lt def
R29525:29527 Coq.MSets.MSetInterface <> s2':318 var
R29522:29523 Coq.MSets.MSetInterface <> s1:316 var
prf 29813:29821 MakeSetOrdering lt_add_lt
binder 29832:29833 <> x1:319
binder 29835:29836 <> x2:320
binder 29838:29839 <> s1:321
binder 29841:29843 <> s1':322
binder 29845:29846 <> s2:323
binder 29848:29850 <> s2':324
R29867:29870 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29856:29860 Coq.MSets.MSetInterface MakeSetOrdering Above def
R29865:29866 Coq.MSets.MSetInterface <> s1:321 var
R29862:29863 Coq.MSets.MSetInterface <> x1:319 var
R29882:29885 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29871:29875 Coq.MSets.MSetInterface MakeSetOrdering Above def
R29880:29881 Coq.MSets.MSetInterface <> s2:323 var
R29877:29878 Coq.MSets.MSetInterface <> x2:320 var
R29899:29902 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29886:29888 Coq.MSets.MSetInterface MakeSetOrdering Add def
R29896:29898 Coq.MSets.MSetInterface <> s1':322 var
R29893:29894 Coq.MSets.MSetInterface <> s1:321 var
R29890:29891 Coq.MSets.MSetInterface <> x1:319 var
R29916:29922 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29903:29905 Coq.MSets.MSetInterface MakeSetOrdering Add def
R29913:29915 Coq.MSets.MSetInterface <> s2':324 var
R29910:29911 Coq.MSets.MSetInterface <> s2:323 var
R29907:29908 Coq.MSets.MSetInterface <> x2:320 var
R29933:29936 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29923:29926 Coq.MSets.MSetInterface O lt defax
R29931:29932 Coq.MSets.MSetInterface <> x2:320 var
R29928:29929 Coq.MSets.MSetInterface <> x1:319 var
R29937:29938 Coq.MSets.MSetInterface MakeSetOrdering lt def
R29944:29946 Coq.MSets.MSetInterface <> s2':324 var
R29940:29942 Coq.MSets.MSetInterface <> s1':322 var
prf 30382:30390 MakeSetOrdering lt_add_eq
binder 30401:30402 <> x1:325
binder 30404:30405 <> x2:326
binder 30407:30408 <> s1:327
binder 30410:30412 <> s1':328
binder 30414:30415 <> s2:329
binder 30417:30419 <> s2':330
R30436:30439 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30425:30429 Coq.MSets.MSetInterface MakeSetOrdering Above def
R30434:30435 Coq.MSets.MSetInterface <> s1:327 var
R30431:30432 Coq.MSets.MSetInterface <> x1:325 var
R30451:30454 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30440:30444 Coq.MSets.MSetInterface MakeSetOrdering Above def
R30449:30450 Coq.MSets.MSetInterface <> s2:329 var
R30446:30447 Coq.MSets.MSetInterface <> x2:326 var
R30468:30471 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30455:30457 Coq.MSets.MSetInterface MakeSetOrdering Add def
R30465:30467 Coq.MSets.MSetInterface <> s1':328 var
R30462:30463 Coq.MSets.MSetInterface <> s1:327 var
R30459:30460 Coq.MSets.MSetInterface <> x1:325 var
R30485:30491 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30472:30474 Coq.MSets.MSetInterface MakeSetOrdering Add def
R30482:30484 Coq.MSets.MSetInterface <> s2':330 var
R30479:30480 Coq.MSets.MSetInterface <> s2:329 var
R30476:30477 Coq.MSets.MSetInterface <> x2:326 var
R30502:30505 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30492:30495 Coq.MSets.MSetInterface O eq defax
R30500:30501 Coq.MSets.MSetInterface <> x2:326 var
R30497:30498 Coq.MSets.MSetInterface <> x1:325 var
R30514:30517 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30506:30507 Coq.MSets.MSetInterface MakeSetOrdering lt def
R30512:30513 Coq.MSets.MSetInterface <> s2:329 var
R30509:30510 Coq.MSets.MSetInterface <> s1:327 var
R30518:30519 Coq.MSets.MSetInterface MakeSetOrdering lt def
R30525:30527 Coq.MSets.MSetInterface <> s2':330 var
R30521:30523 Coq.MSets.MSetInterface <> s1':328 var
R30614:30617 Coq.MSets.MSetInterface O lt defax
R30614:30617 Coq.MSets.MSetInterface O lt defax
R31229:31243 Coq.MSets.MSetInterface MakeSetOrdering <> mod
R31275:31285 Coq.Structures.Orders OrderedType <> mod
mod 31255:31270 <> MakeListOrdering
R31301:31316 Coq.Structures.OrdersFacts OrderedTypeFacts <> modtype
R31318:31318 Coq.MSets.MSetInterface O <> modtype
mod 31297:31298 <> MakeListOrdering.MO
abbrev 31338:31338 MakeListOrdering t
R31344:31347 Coq.Init.Datatypes <> list ind
R31349:31351 Coq.MSets.MSetInterface O t defax
abbrev 31371:31372 MakeListOrdering In
R31378:31380 Coq.Lists.SetoidList <> InA ind
R31382:31385 Coq.MSets.MSetInterface O eq defax
def 31402:31403 MakeListOrdering eq
binder 31405:31405 <> s:331
binder 31407:31408 <> s':332
binder 31420:31420 <> x:333
R31429:31433 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R31423:31424 Coq.MSets.MSetInterface MakeListOrdering In abbrev
R31428:31428 Coq.MSets.MSetInterface <> s:331 var
R31426:31426 Coq.MSets.MSetInterface <> x:333 var
R31434:31435 Coq.MSets.MSetInterface MakeListOrdering In abbrev
R31439:31440 Coq.MSets.MSetInterface <> s':332 var
R31437:31437 Coq.MSets.MSetInterface <> x:333 var
inst 31464:31471 MakeListOrdering eq_equiv
R31475:31485 Coq.Classes.RelationClasses <> Equivalence class
R31487:31488 Coq.MSets.MSetInterface MakeListOrdering eq def
ind 31508:31514 MakeListOrdering lt_list
constr 31542:31547 MakeListOrdering lt_nil
constr 31590:31599 MakeListOrdering lt_cons_lt
constr 31673:31682 MakeListOrdering lt_cons_eq
R31519:31522 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31518:31518 Coq.MSets.MSetInterface MakeListOrdering t abbrev
R31524:31527 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31523:31523 Coq.MSets.MSetInterface MakeListOrdering t abbrev
binder 31558:31558 <> x:336
binder 31560:31560 <> s:337
R31563:31569 Coq.MSets.MSetInterface <> lt_list:334 ind
R31577:31580 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R31576:31576 Coq.MSets.MSetInterface <> x:336 var
R31581:31581 Coq.MSets.MSetInterface <> s:337 var
R31571:31573 Coq.Init.Datatypes <> nil constr
binder 31610:31610 <> x:338
binder 31612:31612 <> y:339
binder 31614:31614 <> s:340
binder 31616:31617 <> s':341
R31636:31639 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31628:31631 Coq.MSets.MSetInterface O lt defax
R31635:31635 Coq.MSets.MSetInterface <> y:339 var
R31633:31633 Coq.MSets.MSetInterface <> x:338 var
R31640:31646 Coq.MSets.MSetInterface <> lt_list:334 ind
R31659:31662 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R31658:31658 Coq.MSets.MSetInterface <> y:339 var
R31663:31664 Coq.MSets.MSetInterface <> s':341 var
R31650:31653 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R31649:31649 Coq.MSets.MSetInterface <> x:338 var
R31654:31654 Coq.MSets.MSetInterface <> s:340 var
binder 31693:31693 <> x:342
binder 31695:31695 <> y:343
binder 31697:31697 <> s:344
binder 31699:31700 <> s':345
R31719:31722 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31711:31714 Coq.MSets.MSetInterface O eq defax
R31718:31718 Coq.MSets.MSetInterface <> y:343 var
R31716:31716 Coq.MSets.MSetInterface <> x:342 var
R31735:31738 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31723:31729 Coq.MSets.MSetInterface <> lt_list:334 ind
R31733:31734 Coq.MSets.MSetInterface <> s':345 var
R31731:31731 Coq.MSets.MSetInterface <> s:344 var
R31739:31745 Coq.MSets.MSetInterface <> lt_list:334 ind
R31758:31761 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R31757:31757 Coq.MSets.MSetInterface <> y:343 var
R31762:31763 Coq.MSets.MSetInterface <> s':345 var
R31749:31752 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R31748:31748 Coq.MSets.MSetInterface <> x:342 var
R31753:31753 Coq.MSets.MSetInterface <> s:344 var
R31797:31803 Coq.MSets.MSetInterface <> lt_list ind
def 31826:31827 MakeListOrdering lt
R31832:31838 Coq.MSets.MSetInterface MakeListOrdering lt_list ind
R31865:31866 Coq.MSets.MSetInterface MakeListOrdering lt def
inst 31898:31908 MakeListOrdering lt_strorder
R31912:31922 Coq.Classes.RelationClasses <> StrictOrder class
R31924:31925 Coq.MSets.MSetInterface MakeListOrdering lt def
binder 31979:31979 <> s:346
binder 31981:31982 <> s':347
R31989:31992 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31986:31986 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31985:31985 Coq.MSets.MSetInterface <> s:346 var
R31987:31988 Coq.MSets.MSetInterface <> s':347 var
R31993:31993 Coq.Init.Logic <> ::type_scope:'~'_x not
R31994:31995 Coq.MSets.MSetInterface MakeListOrdering lt def
R31999:32000 Coq.MSets.MSetInterface <> s':347 var
R31997:31997 Coq.MSets.MSetInterface <> s:346 var
binder 31979:31979 <> s:348
binder 31981:31982 <> s':349
R31989:31992 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31986:31986 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31985:31985 Coq.MSets.MSetInterface <> s:348 var
R31987:31988 Coq.MSets.MSetInterface <> s':349 var
R31993:31993 Coq.Init.Logic <> ::type_scope:'~'_x not
R31994:31995 Coq.MSets.MSetInterface MakeListOrdering lt def
R31999:32000 Coq.MSets.MSetInterface <> s':349 var
R31997:31997 Coq.MSets.MSetInterface <> s:348 var
R32071:32093 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R32071:32093 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R32161:32167 Coq.Init.Logic <> eq_refl constr
R32161:32167 Coq.Init.Logic <> eq_refl constr
R32541:32542 Coq.MSets.MSetInterface MakeListOrdering lt def
inst 32583:32592 MakeListOrdering lt_compat'
R32598:32603 Coq.Classes.Morphisms <> Proper class
R32641:32642 Coq.MSets.MSetInterface MakeListOrdering lt def
R32618:32620 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R32606:32612 Coq.Lists.SetoidList <> eqlistA ind
R32614:32617 Coq.MSets.MSetInterface O eq defax
R32633:32635 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R32621:32627 Coq.Lists.SetoidList <> eqlistA ind
R32629:32632 Coq.MSets.MSetInterface O eq defax
R32636:32638 Coq.Init.Logic <> iff def
R32660:32680 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R32660:32680 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R32887:32888 Coq.MSets.MSetInterface MakeListOrdering lt def
prf 32916:32922 MakeListOrdering eq_cons
binder 32935:32936 <> l1:350
binder 32938:32939 <> l2:351
binder 32941:32941 <> x:352
binder 32943:32943 <> y:353
R32956:32959 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32948:32951 Coq.MSets.MSetInterface O eq defax
R32955:32955 Coq.MSets.MSetInterface <> y:353 var
R32953:32953 Coq.MSets.MSetInterface <> x:352 var
R32968:32971 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32960:32961 Coq.MSets.MSetInterface MakeListOrdering eq def
R32966:32967 Coq.MSets.MSetInterface <> l2:351 var
R32963:32964 Coq.MSets.MSetInterface <> l1:350 var
R32972:32973 Coq.MSets.MSetInterface MakeListOrdering eq def
R32987:32990 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R32986:32986 Coq.MSets.MSetInterface <> y:353 var
R32991:32992 Coq.MSets.MSetInterface <> l2:351 var
R32977:32980 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R32976:32976 Coq.MSets.MSetInterface <> x:352 var
R32981:32982 Coq.MSets.MSetInterface <> l1:350 var
R33013:33014 Coq.MSets.MSetInterface MakeListOrdering eq def
prf 33219:33231 MakeListOrdering cons_CompSpec
binder 33242:33242 <> c:354
binder 33244:33245 <> x1:355
binder 33247:33248 <> x2:356
binder 33250:33251 <> l1:357
binder 33253:33254 <> l2:358
R33267:33272 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33257:33260 Coq.MSets.MSetInterface O eq defax
R33265:33266 Coq.MSets.MSetInterface <> x2:356 var
R33262:33263 Coq.MSets.MSetInterface <> x1:355 var
R33295:33298 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33273:33280 Coq.Init.Datatypes <> CompSpec def
R33294:33294 Coq.MSets.MSetInterface <> c:354 var
R33291:33292 Coq.MSets.MSetInterface <> l2:358 var
R33288:33289 Coq.MSets.MSetInterface <> l1:357 var
R33285:33286 Coq.MSets.MSetInterface MakeListOrdering lt def
R33282:33283 Coq.MSets.MSetInterface MakeListOrdering eq def
R33299:33306 Coq.Init.Datatypes <> CompSpec def
R33332:33332 Coq.MSets.MSetInterface <> c:354 var
R33326:33327 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R33324:33325 Coq.MSets.MSetInterface <> x2:356 var
R33328:33329 Coq.MSets.MSetInterface <> l2:358 var
R33317:33318 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R33315:33316 Coq.MSets.MSetInterface <> x1:355 var
R33319:33320 Coq.MSets.MSetInterface <> l1:357 var
R33311:33312 Coq.MSets.MSetInterface MakeListOrdering lt def
R33308:33309 Coq.MSets.MSetInterface MakeListOrdering eq def
R33462:33477 Coq.MSets.MSetInterface MakeListOrdering <> mod
