DIGEST e32cb378bfd4abf3e2e010446b17df17
FCoq.MSets.MSetRBT
R1573:1583 Coq.MSets.MSetGenTree <> <> lib
R1601:1604 Coq.Bool.Bool <> <> lib
R1606:1609 Coq.Lists.List <> <> lib
R1611:1616 Coq.PArith.BinPos <> <> lib
R1618:1621 Coq.PArith.Pnat <> <> lib
R1623:1628 Coq.Setoids.Setoid <> <> lib
R1630:1639 Coq.Lists.SetoidList <> <> lib
R1641:1648 Coq.Arith.PeanoNat <> <> lib
R1886:1900 Coq.MSets.MSetInterface S <> mod
modtype 1862:1874 <> MSetRemoveMin
R1862:1874 Coq.MSets.MSetRBT M <> mod
ax 1916:1925 MSetRemoveMin remove_min
R1930:1933 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1929:1929 Coq.MSets.MSetRBT M t defax
R1934:1939 Coq.Init.Datatypes <> option ind
R1945:1947 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R1942:1944 Coq.MSets.MSetRBT M elt def
R1948:1948 Coq.MSets.MSetRBT M t defax
ax 1960:1975 MSetRemoveMin remove_min_spec1
binder 1986:1986 <> s:2
binder 1988:1988 <> k:3
binder 1990:1991 <> s':4
R2022:2028 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2008:2010 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1996:2005 Coq.MSets.MSetRBT MSetRemoveMin remove_min defax
R2007:2007 Coq.MSets.MSetRBT <> s:2 var
R2011:2014 Coq.Init.Datatypes <> Some constr
R2016:2016 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2018:2018 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2021:2021 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2017:2017 Coq.MSets.MSetRBT <> k:3 var
R2019:2020 Coq.MSets.MSetRBT <> s':4 var
R2047:2050 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R2038:2040 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2029:2035 Coq.MSets.MSetRBT M min_elt defax
R2037:2037 Coq.MSets.MSetRBT <> s:2 var
R2041:2044 Coq.Init.Datatypes <> Some constr
R2046:2046 Coq.MSets.MSetRBT <> k:3 var
R2061:2065 Coq.MSets.MSetInterface WSetsOn :::x_'[=]'_x not
R2051:2056 Coq.MSets.MSetRBT M remove defax
R2060:2060 Coq.MSets.MSetRBT <> s:2 var
R2058:2058 Coq.MSets.MSetRBT <> k:3 var
R2066:2067 Coq.MSets.MSetRBT <> s':4 var
ax 2078:2093 MSetRemoveMin remove_min_spec2
binder 2104:2104 <> s:6
R2126:2129 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2119:2121 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2107:2116 Coq.MSets.MSetRBT MSetRemoveMin remove_min defax
R2118:2118 Coq.MSets.MSetRBT <> s:6 var
R2122:2125 Coq.Init.Datatypes <> None constr
R2130:2134 Coq.MSets.MSetRBT M Empty def
R2136:2136 Coq.MSets.MSetRBT <> s:6 var
R2144:2156 Coq.MSets.MSetRBT MSetRemoveMin <> modtype
ind 2208:2212 <> color
constr 2217:2219 <> Red
constr 2223:2227 <> Black
mod 2238:2242 <> Color
def 2257:2257 Color t
R2262:2266 Coq.MSets.MSetRBT <> color ind
R2273:2277 Coq.MSets.MSetRBT Color <> mod
R2330:2347 Coq.Structures.Orders OrderedType <> mod
R2353:2369 Coq.MSets.MSetInterface Ops <> mod
R2371:2371 Coq.MSets.MSetRBT X <> modtype
mod 2323:2325 <> Ops
R2601:2615 Coq.MSets.MSetGenTree Ops <> mod
R2617:2617 Coq.MSets.MSetRBT X <> modtype
R2619:2623 Coq.MSets.MSetRBT Color <> modtype
def 2638:2638 Ops t
R2643:2646 Coq.MSets.MSetRBT Ops tree ind
abbrev 2664:2665 Ops Rd
R2671:2674 Coq.MSets.MSetRBT Ops Node constr
R2676:2678 Coq.MSets.MSetRBT <> Red constr
abbrev 2697:2698 Ops Bk
R2704:2707 Coq.MSets.MSetRBT Ops Node constr
R2709:2713 Coq.MSets.MSetRBT <> Black constr
def 2751:2759 Ops singleton
R2765:2767 Coq.MSets.MSetRBT Ops elt def
binder 2762:2762 <> k:10
R2772:2775 Coq.MSets.MSetRBT Ops tree ind
R2780:2781 Coq.MSets.MSetRBT Ops Bk abbrev
R2783:2786 Coq.MSets.MSetRBT Ops Leaf constr
R2788:2788 Coq.MSets.MSetRBT <> k:10 var
R2790:2793 Coq.MSets.MSetRBT Ops Leaf constr
def 2839:2847 Ops makeBlack
binder 2849:2849 <> t:11
R2861:2861 Coq.MSets.MSetRBT <> t:11 var
R2871:2874 Coq.MSets.MSetRBT Ops Leaf constr
R2879:2882 Coq.MSets.MSetRBT Ops Leaf constr
R2887:2890 Coq.MSets.MSetRBT Ops Node constr
R2903:2904 Coq.MSets.MSetRBT Ops Bk abbrev
def 2930:2936 Ops makeRed
binder 2938:2938 <> t:13
R2950:2950 Coq.MSets.MSetRBT <> t:13 var
R2960:2963 Coq.MSets.MSetRBT Ops Leaf constr
R2968:2971 Coq.MSets.MSetRBT Ops Leaf constr
R2976:2979 Coq.MSets.MSetRBT Ops Node constr
R2992:2993 Coq.MSets.MSetRBT Ops Rd abbrev
def 3143:3146 Ops lbal
binder 3148:3148 <> l:15
binder 3150:3150 <> k:16
binder 3152:3152 <> r:17
R3164:3164 Coq.MSets.MSetRBT <> l:15 var
R3174:3175 Coq.MSets.MSetRBT Ops Rd abbrev
R3178:3179 Coq.MSets.MSetRBT Ops Rd abbrev
R3195:3196 Coq.MSets.MSetRBT Ops Rd abbrev
R3199:3200 Coq.MSets.MSetRBT Ops Bk abbrev
R3212:3213 Coq.MSets.MSetRBT Ops Bk abbrev
R3217:3217 Coq.MSets.MSetRBT <> k:16 var
R3219:3219 Coq.MSets.MSetRBT <> r:17 var
R3225:3226 Coq.MSets.MSetRBT Ops Rd abbrev
R3233:3234 Coq.MSets.MSetRBT Ops Rd abbrev
R3246:3247 Coq.MSets.MSetRBT Ops Rd abbrev
R3250:3251 Coq.MSets.MSetRBT Ops Bk abbrev
R3263:3264 Coq.MSets.MSetRBT Ops Bk abbrev
R3268:3268 Coq.MSets.MSetRBT <> k:16 var
R3270:3270 Coq.MSets.MSetRBT <> r:17 var
R3281:3282 Coq.MSets.MSetRBT Ops Bk abbrev
R3284:3284 Coq.MSets.MSetRBT <> l:15 var
R3286:3286 Coq.MSets.MSetRBT <> k:16 var
R3288:3288 Coq.MSets.MSetRBT <> r:17 var
def 3308:3311 Ops rbal
binder 3313:3313 <> l:19
binder 3315:3315 <> k:20
binder 3317:3317 <> r:21
R3329:3329 Coq.MSets.MSetRBT <> r:21 var
R3339:3340 Coq.MSets.MSetRBT Ops Rd abbrev
R3343:3344 Coq.MSets.MSetRBT Ops Rd abbrev
R3360:3361 Coq.MSets.MSetRBT Ops Rd abbrev
R3364:3365 Coq.MSets.MSetRBT Ops Bk abbrev
R3367:3367 Coq.MSets.MSetRBT <> l:19 var
R3369:3369 Coq.MSets.MSetRBT <> k:20 var
R3377:3378 Coq.MSets.MSetRBT Ops Bk abbrev
R3390:3391 Coq.MSets.MSetRBT Ops Rd abbrev
R3398:3399 Coq.MSets.MSetRBT Ops Rd abbrev
R3411:3412 Coq.MSets.MSetRBT Ops Rd abbrev
R3415:3416 Coq.MSets.MSetRBT Ops Bk abbrev
R3418:3418 Coq.MSets.MSetRBT <> l:19 var
R3420:3420 Coq.MSets.MSetRBT <> k:20 var
R3428:3429 Coq.MSets.MSetRBT Ops Bk abbrev
R3446:3447 Coq.MSets.MSetRBT Ops Bk abbrev
R3449:3449 Coq.MSets.MSetRBT <> l:19 var
R3451:3451 Coq.MSets.MSetRBT <> k:20 var
R3453:3453 Coq.MSets.MSetRBT <> r:21 var
def 3582:3586 Ops rbal'
binder 3588:3588 <> l:23
binder 3590:3590 <> k:24
binder 3592:3592 <> r:25
R3604:3604 Coq.MSets.MSetRBT <> r:25 var
R3614:3615 Coq.MSets.MSetRBT Ops Rd abbrev
R3622:3623 Coq.MSets.MSetRBT Ops Rd abbrev
R3635:3636 Coq.MSets.MSetRBT Ops Rd abbrev
R3639:3640 Coq.MSets.MSetRBT Ops Bk abbrev
R3642:3642 Coq.MSets.MSetRBT <> l:23 var
R3644:3644 Coq.MSets.MSetRBT <> k:24 var
R3652:3653 Coq.MSets.MSetRBT Ops Bk abbrev
R3665:3666 Coq.MSets.MSetRBT Ops Rd abbrev
R3669:3670 Coq.MSets.MSetRBT Ops Rd abbrev
R3686:3687 Coq.MSets.MSetRBT Ops Rd abbrev
R3690:3691 Coq.MSets.MSetRBT Ops Bk abbrev
R3693:3693 Coq.MSets.MSetRBT <> l:23 var
R3695:3695 Coq.MSets.MSetRBT <> k:24 var
R3703:3704 Coq.MSets.MSetRBT Ops Bk abbrev
R3721:3722 Coq.MSets.MSetRBT Ops Bk abbrev
R3724:3724 Coq.MSets.MSetRBT <> l:23 var
R3726:3726 Coq.MSets.MSetRBT <> k:24 var
R3728:3728 Coq.MSets.MSetRBT <> r:25 var
def 3929:3933 Ops lbalS
binder 3935:3935 <> l:27
binder 3937:3937 <> k:28
binder 3939:3939 <> r:29
R3951:3951 Coq.MSets.MSetRBT <> l:27 var
R3961:3962 Coq.MSets.MSetRBT Ops Rd abbrev
R3973:3974 Coq.MSets.MSetRBT Ops Rd abbrev
R3977:3978 Coq.MSets.MSetRBT Ops Bk abbrev
R3987:3987 Coq.MSets.MSetRBT <> k:28 var
R3989:3989 Coq.MSets.MSetRBT <> r:29 var
R4008:4008 Coq.MSets.MSetRBT <> r:29 var
R4020:4021 Coq.MSets.MSetRBT Ops Bk abbrev
R4032:4036 Coq.MSets.MSetRBT Ops rbal' def
R4038:4038 Coq.MSets.MSetRBT <> l:27 var
R4040:4040 Coq.MSets.MSetRBT <> k:28 var
R4043:4044 Coq.MSets.MSetRBT Ops Rd abbrev
R4058:4059 Coq.MSets.MSetRBT Ops Rd abbrev
R4062:4063 Coq.MSets.MSetRBT Ops Bk abbrev
R4079:4080 Coq.MSets.MSetRBT Ops Rd abbrev
R4083:4084 Coq.MSets.MSetRBT Ops Bk abbrev
R4086:4086 Coq.MSets.MSetRBT <> l:27 var
R4088:4088 Coq.MSets.MSetRBT <> k:28 var
R4096:4100 Coq.MSets.MSetRBT Ops rbal' def
R4107:4113 Coq.MSets.MSetRBT Ops makeRed def
R4129:4130 Coq.MSets.MSetRBT Ops Rd abbrev
R4132:4132 Coq.MSets.MSetRBT <> l:27 var
R4134:4134 Coq.MSets.MSetRBT <> k:28 var
R4136:4136 Coq.MSets.MSetRBT <> r:29 var
def 4180:4184 Ops rbalS
binder 4186:4186 <> l:32
binder 4188:4188 <> k:33
binder 4190:4190 <> r:34
R4202:4202 Coq.MSets.MSetRBT <> r:34 var
R4212:4213 Coq.MSets.MSetRBT Ops Rd abbrev
R4224:4225 Coq.MSets.MSetRBT Ops Rd abbrev
R4227:4227 Coq.MSets.MSetRBT <> l:32 var
R4229:4229 Coq.MSets.MSetRBT <> k:33 var
R4232:4233 Coq.MSets.MSetRBT Ops Bk abbrev
R4259:4259 Coq.MSets.MSetRBT <> l:32 var
R4271:4272 Coq.MSets.MSetRBT Ops Bk abbrev
R4283:4286 Coq.MSets.MSetRBT Ops lbal def
R4289:4290 Coq.MSets.MSetRBT Ops Rd abbrev
R4299:4299 Coq.MSets.MSetRBT <> k:33 var
R4301:4301 Coq.MSets.MSetRBT <> r:34 var
R4308:4309 Coq.MSets.MSetRBT Ops Rd abbrev
R4316:4317 Coq.MSets.MSetRBT Ops Bk abbrev
R4329:4330 Coq.MSets.MSetRBT Ops Rd abbrev
R4333:4336 Coq.MSets.MSetRBT Ops lbal def
R4339:4345 Coq.MSets.MSetRBT Ops makeRed def
R4358:4359 Coq.MSets.MSetRBT Ops Bk abbrev
R4363:4363 Coq.MSets.MSetRBT <> k:33 var
R4365:4365 Coq.MSets.MSetRBT <> r:34 var
R4378:4379 Coq.MSets.MSetRBT Ops Rd abbrev
R4381:4381 Coq.MSets.MSetRBT <> l:32 var
R4383:4383 Coq.MSets.MSetRBT <> k:33 var
R4385:4385 Coq.MSets.MSetRBT <> r:34 var
def 4448:4450 Ops ins
binder 4452:4452 <> x:37
binder 4454:4454 <> s:38
R4466:4466 Coq.MSets.MSetRBT <> s:38 var
R4476:4479 Coq.MSets.MSetRBT Ops Leaf constr
R4484:4485 Coq.MSets.MSetRBT Ops Rd abbrev
R4487:4490 Coq.MSets.MSetRBT Ops Leaf constr
R4492:4492 Coq.MSets.MSetRBT <> x:37 var
R4494:4497 Coq.MSets.MSetRBT Ops Leaf constr
R4502:4505 Coq.MSets.MSetRBT Ops Node constr
R4527:4535 Coq.MSets.MSetRBT X compare defax
R4537:4537 Coq.MSets.MSetRBT <> x:37 var
R4551:4552 Coq.Init.Datatypes <> Eq constr
R4557:4557 Coq.MSets.MSetRBT <> s:38 var
R4564:4565 Coq.Init.Datatypes <> Lt constr
R4595:4597 Coq.MSets.MSetRBT <> Red constr
R4602:4603 Coq.MSets.MSetRBT Ops Rd abbrev
R4606:4608 Coq.MSets.MSetRBT <> ins:39 def
R4610:4610 Coq.MSets.MSetRBT <> x:37 var
R4626:4630 Coq.MSets.MSetRBT <> Black constr
R4635:4638 Coq.MSets.MSetRBT Ops lbal def
R4641:4643 Coq.MSets.MSetRBT <> ins:39 def
R4645:4645 Coq.MSets.MSetRBT <> x:37 var
R4668:4669 Coq.Init.Datatypes <> Gt constr
R4699:4701 Coq.MSets.MSetRBT <> Red constr
R4706:4707 Coq.MSets.MSetRBT Ops Rd abbrev
R4714:4716 Coq.MSets.MSetRBT <> ins:39 def
R4718:4718 Coq.MSets.MSetRBT <> x:37 var
R4730:4734 Coq.MSets.MSetRBT <> Black constr
R4739:4742 Coq.MSets.MSetRBT Ops rbal def
R4749:4751 Coq.MSets.MSetRBT <> ins:39 def
R4753:4753 Coq.MSets.MSetRBT <> x:37 var
def 4792:4794 Ops add
binder 4796:4796 <> x:43
binder 4798:4798 <> s:44
R4803:4811 Coq.MSets.MSetRBT Ops makeBlack def
R4814:4816 Coq.MSets.MSetRBT Ops ins def
R4818:4818 Coq.MSets.MSetRBT <> x:43 var
R4820:4820 Coq.MSets.MSetRBT <> s:44 var
def 4854:4859 Ops append
R4864:4867 Coq.MSets.MSetRBT Ops tree ind
binder 4862:4862 <> l:45
R4876:4879 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4872:4875 Coq.MSets.MSetRBT Ops tree ind
R4880:4883 Coq.MSets.MSetRBT Ops tree ind
R4895:4895 Coq.MSets.MSetRBT <> l:45 var
R4905:4908 Coq.MSets.MSetRBT Ops Leaf constr
binder 4917:4917 <> r:48
R4922:4922 Coq.MSets.MSetRBT <> r:48 var
R4927:4930 Coq.MSets.MSetRBT Ops Node constr
R4966:4969 Coq.MSets.MSetRBT Ops tree ind
binder 4964:4964 <> r:49
R4974:4977 Coq.MSets.MSetRBT Ops tree ind
R4991:4991 Coq.MSets.MSetRBT <> r:49 var
R5003:5006 Coq.MSets.MSetRBT Ops Leaf constr
R5011:5011 Coq.MSets.MSetRBT <> l:45 var
R5018:5021 Coq.MSets.MSetRBT Ops Node constr
R5068:5070 Coq.MSets.MSetRBT <> Red constr
R5073:5075 Coq.MSets.MSetRBT <> Red constr
R5098:5103 Coq.MSets.MSetRBT <> append:46 def
binder 5091:5093 <> lrl:54
R5127:5129 Coq.MSets.MSetRBT <> lrl:54 var
R5145:5146 Coq.MSets.MSetRBT Ops Rd abbrev
R5161:5162 Coq.MSets.MSetRBT Ops Rd abbrev
R5165:5166 Coq.MSets.MSetRBT Ops Rd abbrev
R5182:5183 Coq.MSets.MSetRBT Ops Rd abbrev
R5210:5211 Coq.MSets.MSetRBT Ops Rd abbrev
R5220:5221 Coq.MSets.MSetRBT Ops Rd abbrev
R5223:5225 Coq.MSets.MSetRBT <> lrl:54 var
R5252:5256 Coq.MSets.MSetRBT <> Black constr
R5259:5263 Coq.MSets.MSetRBT <> Black constr
R5286:5291 Coq.MSets.MSetRBT <> append:46 def
binder 5279:5281 <> lrl:56
R5315:5317 Coq.MSets.MSetRBT <> lrl:56 var
R5333:5334 Coq.MSets.MSetRBT Ops Rd abbrev
R5349:5350 Coq.MSets.MSetRBT Ops Rd abbrev
R5353:5354 Coq.MSets.MSetRBT Ops Bk abbrev
R5370:5371 Coq.MSets.MSetRBT Ops Bk abbrev
R5398:5402 Coq.MSets.MSetRBT Ops lbalS def
R5411:5412 Coq.MSets.MSetRBT Ops Bk abbrev
R5414:5416 Coq.MSets.MSetRBT <> lrl:56 var
R5443:5447 Coq.MSets.MSetRBT <> Black constr
R5450:5452 Coq.MSets.MSetRBT <> Red constr
R5457:5458 Coq.MSets.MSetRBT Ops Rd abbrev
R5461:5468 Coq.MSets.MSetRBT <> append_l:50 var
R5487:5489 Coq.MSets.MSetRBT <> Red constr
R5492:5496 Coq.MSets.MSetRBT <> Black constr
R5501:5502 Coq.MSets.MSetRBT Ops Rd abbrev
R5511:5516 Coq.MSets.MSetRBT <> append:46 def
R5521:5521 Coq.MSets.MSetRBT <> r:49 var
def 5556:5558 Ops del
binder 5560:5560 <> x:58
binder 5562:5562 <> t:59
R5574:5574 Coq.MSets.MSetRBT <> t:59 var
R5584:5587 Coq.MSets.MSetRBT Ops Leaf constr
R5592:5595 Coq.MSets.MSetRBT Ops Leaf constr
R5600:5603 Coq.MSets.MSetRBT Ops Node constr
R5625:5633 Coq.MSets.MSetRBT X compare defax
R5635:5635 Coq.MSets.MSetRBT <> x:58 var
R5649:5650 Coq.Init.Datatypes <> Eq constr
R5655:5660 Coq.MSets.MSetRBT Ops append def
R5671:5672 Coq.Init.Datatypes <> Lt constr
R5702:5703 Coq.MSets.MSetRBT Ops Bk abbrev
R5714:5718 Coq.MSets.MSetRBT Ops lbalS def
R5721:5723 Coq.MSets.MSetRBT <> del:60 def
R5725:5725 Coq.MSets.MSetRBT <> x:58 var
R5746:5747 Coq.MSets.MSetRBT Ops Rd abbrev
R5750:5752 Coq.MSets.MSetRBT <> del:60 def
R5754:5754 Coq.MSets.MSetRBT <> x:58 var
R5777:5778 Coq.Init.Datatypes <> Gt constr
R5808:5809 Coq.MSets.MSetRBT Ops Bk abbrev
R5820:5824 Coq.MSets.MSetRBT Ops rbalS def
R5831:5833 Coq.MSets.MSetRBT <> del:60 def
R5835:5835 Coq.MSets.MSetRBT <> x:58 var
R5852:5853 Coq.MSets.MSetRBT Ops Rd abbrev
R5860:5862 Coq.MSets.MSetRBT <> del:60 def
R5864:5864 Coq.MSets.MSetRBT <> x:58 var
def 5903:5908 Ops remove
binder 5910:5910 <> x:64
binder 5912:5912 <> t:65
R5917:5925 Coq.MSets.MSetRBT Ops makeBlack def
R5928:5930 Coq.MSets.MSetRBT Ops del def
R5932:5932 Coq.MSets.MSetRBT <> x:64 var
R5934:5934 Coq.MSets.MSetRBT <> t:65 var
def 5984:5989 Ops delmin
binder 5991:5991 <> l:66
binder 5993:5993 <> x:67
binder 5995:5995 <> r:68
R6003:6005 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6000:6002 Coq.MSets.MSetRBT Ops elt def
R6006:6009 Coq.MSets.MSetRBT Ops tree ind
R6022:6022 Coq.MSets.MSetRBT <> l:66 var
R6032:6035 Coq.MSets.MSetRBT Ops Leaf constr
R6040:6040 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6042:6042 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6044:6044 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6041:6041 Coq.MSets.MSetRBT <> x:67 var
R6043:6043 Coq.MSets.MSetRBT <> r:68 var
R6049:6052 Coq.MSets.MSetRBT Ops Node constr
R6086:6091 Coq.MSets.MSetRBT <> delmin:69 def
binder 6077:6077 <> k:71
binder 6079:6080 <> l':72
R6127:6131 Coq.MSets.MSetRBT <> Black constr
R6136:6136 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6138:6139 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6152:6152 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6137:6137 Coq.MSets.MSetRBT <> k:71 var
R6140:6144 Coq.MSets.MSetRBT Ops lbalS def
R6146:6147 Coq.MSets.MSetRBT <> l':72 var
R6149:6149 Coq.MSets.MSetRBT <> x:67 var
R6151:6151 Coq.MSets.MSetRBT <> r:68 var
R6159:6161 Coq.MSets.MSetRBT <> Red constr
R6166:6166 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6168:6169 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6179:6179 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6167:6167 Coq.MSets.MSetRBT <> k:71 var
R6170:6171 Coq.MSets.MSetRBT Ops Rd abbrev
R6173:6174 Coq.MSets.MSetRBT <> l':72 var
R6176:6176 Coq.MSets.MSetRBT <> x:67 var
R6178:6178 Coq.MSets.MSetRBT <> r:68 var
def 6206:6215 Ops remove_min
binder 6217:6217 <> t:74
R6221:6226 Coq.Init.Datatypes <> option ind
R6232:6234 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6229:6231 Coq.MSets.MSetRBT Ops elt def
R6235:6238 Coq.MSets.MSetRBT Ops tree ind
R6251:6251 Coq.MSets.MSetRBT <> t:74 var
R6261:6264 Coq.MSets.MSetRBT Ops Leaf constr
R6269:6272 Coq.Init.Datatypes <> None constr
R6277:6280 Coq.MSets.MSetRBT Ops Node constr
R6309:6314 Coq.MSets.MSetRBT Ops delmin def
binder 6301:6301 <> k:76
binder 6303:6303 <> t:77
R6328:6331 Coq.Init.Datatypes <> Some constr
R6333:6333 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6335:6336 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6348:6348 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6334:6334 Coq.MSets.MSetRBT <> k:76 var
R6337:6345 Coq.MSets.MSetRBT Ops makeBlack def
R6347:6347 Coq.MSets.MSetRBT <> t:77 var
def 6499:6503 Ops bogus
R6511:6513 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6507:6510 Coq.MSets.MSetRBT Ops tree ind
R6514:6517 Coq.Init.Datatypes <> list ind
R6519:6521 Coq.MSets.MSetRBT Ops elt def
R6526:6526 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6531:6532 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6536:6536 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6527:6530 Coq.MSets.MSetRBT Ops Leaf constr
R6533:6535 Coq.Init.Datatypes <> nil constr
abbrev 6549:6557 Ops treeify_t
R6571:6574 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6563:6566 Coq.Init.Datatypes <> list ind
R6568:6570 Coq.MSets.MSetRBT Ops elt def
R6579:6581 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6575:6578 Coq.MSets.MSetRBT Ops tree ind
R6582:6585 Coq.Init.Datatypes <> list ind
R6587:6589 Coq.MSets.MSetRBT Ops elt def
def 6605:6616 Ops treeify_zero
R6620:6628 Coq.MSets.MSetRBT Ops treeify_t abbrev
binder 6638:6640 <> acc:78
R6645:6645 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6650:6650 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6654:6654 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6646:6649 Coq.MSets.MSetRBT Ops Leaf constr
R6651:6653 Coq.MSets.MSetRBT <> acc:78 var
def 6669:6679 Ops treeify_one
R6683:6691 Coq.MSets.MSetRBT Ops treeify_t abbrev
binder 6701:6703 <> acc:79
R6714:6716 Coq.MSets.MSetRBT <> acc:79 var
R6727:6728 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6736:6736 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6751:6752 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6756:6756 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6737:6738 Coq.MSets.MSetRBT Ops Rd abbrev
R6740:6743 Coq.MSets.MSetRBT Ops Leaf constr
R6747:6750 Coq.MSets.MSetRBT Ops Leaf constr
R6753:6755 Coq.MSets.MSetRBT <> acc:79 var
R6766:6770 Coq.MSets.MSetRBT Ops bogus def
def 6790:6801 Ops treeify_cont
R6810:6818 Coq.MSets.MSetRBT Ops treeify_t abbrev
binder 6804:6804 <> f:81
binder 6806:6806 <> g:82
R6823:6831 Coq.MSets.MSetRBT Ops treeify_t abbrev
binder 6841:6843 <> acc:83
R6855:6855 Coq.MSets.MSetRBT <> f:81 var
R6857:6859 Coq.MSets.MSetRBT <> acc:83 var
R6869:6869 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6871:6872 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6879:6879 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6874:6875 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6893:6893 Coq.MSets.MSetRBT <> g:82 var
R6895:6897 Coq.MSets.MSetRBT <> acc:83 var
R6909:6909 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6911:6912 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6916:6916 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6921:6921 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6930:6931 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6935:6935 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6922:6923 Coq.MSets.MSetRBT Ops Bk abbrev
R6932:6934 Coq.MSets.MSetRBT <> acc:83 var
R6952:6956 Coq.MSets.MSetRBT Ops bogus def
def 6974:6984 Ops treeify_aux
R6992:6995 Coq.Init.Datatypes <> bool ind
binder 6987:6990 <> pred:84
R7001:7008 Coq.Numbers.BinNums <> positive ind
binder 6998:6998 <> n:85
R7013:7021 Coq.MSets.MSetRBT Ops treeify_t abbrev
R7033:7033 Coq.MSets.MSetRBT <> n:85 var
R7043:7044 Coq.Numbers.BinNums <> xH constr
R7052:7055 Coq.MSets.MSetRBT <> pred:84 var
R7080:7090 Coq.MSets.MSetRBT Ops treeify_one def
R7062:7073 Coq.MSets.MSetRBT Ops treeify_zero def
R7095:7096 Coq.Numbers.BinNums <> xO constr
R7103:7114 Coq.MSets.MSetRBT Ops treeify_cont def
R7117:7127 Coq.MSets.MSetRBT <> treeify_aux:86 def
R7134:7134 Coq.MSets.MSetRBT <> n:85 var
R7129:7132 Coq.MSets.MSetRBT <> pred:84 var
R7138:7148 Coq.MSets.MSetRBT <> treeify_aux:86 def
R7155:7155 Coq.MSets.MSetRBT <> n:85 var
R7150:7153 Coq.Init.Datatypes <> true constr
R7161:7162 Coq.Numbers.BinNums <> xI constr
R7169:7180 Coq.MSets.MSetRBT Ops treeify_cont def
R7183:7193 Coq.MSets.MSetRBT <> treeify_aux:86 def
R7201:7201 Coq.MSets.MSetRBT <> n:85 var
R7195:7199 Coq.Init.Datatypes <> false constr
R7205:7215 Coq.MSets.MSetRBT <> treeify_aux:86 def
R7222:7222 Coq.MSets.MSetRBT <> n:85 var
R7217:7220 Coq.MSets.MSetRBT <> pred:84 var
def 7241:7251 Ops plength_aux
R7256:7259 Coq.Init.Datatypes <> list ind
R7261:7263 Coq.MSets.MSetRBT Ops elt def
binder 7254:7254 <> l:88
R7268:7275 Coq.Numbers.BinNums <> positive ind
binder 7266:7266 <> p:89
R7287:7287 Coq.MSets.MSetRBT <> l:88 var
R7297:7299 Coq.Init.Datatypes <> nil constr
R7304:7304 Coq.MSets.MSetRBT <> p:89 var
R7310:7311 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7317:7327 Coq.MSets.MSetRBT <> plength_aux:90 def
R7332:7339 Coq.PArith.BinPos Pos succ def
R7341:7341 Coq.MSets.MSetRBT <> p:89 var
R7329:7329 Coq.MSets.MSetRBT <> l:88 var
def 7361:7367 Ops plength
binder 7369:7369 <> l:92
R7374:7384 Coq.MSets.MSetRBT Ops plength_aux def
R7386:7386 Coq.MSets.MSetRBT <> l:92 var
def 7403:7409 Ops treeify
R7414:7417 Coq.Init.Datatypes <> list ind
R7419:7421 Coq.MSets.MSetRBT Ops elt def
binder 7412:7412 <> l:93
R7428:7430 Coq.Init.Datatypes <> fst def
R7433:7443 Coq.MSets.MSetRBT Ops treeify_aux def
R7445:7448 Coq.Init.Datatypes <> true constr
R7451:7457 Coq.MSets.MSetRBT Ops plength def
R7459:7459 Coq.MSets.MSetRBT <> l:93 var
R7462:7462 Coq.MSets.MSetRBT <> l:93 var
def 7497:7506 Ops filter_aux
R7515:7518 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7512:7514 Coq.MSets.MSetRBT Ops elt def
R7519:7522 Coq.Init.Datatypes <> bool ind
binder 7509:7509 <> f:94
binder 7525:7525 <> s:95
binder 7527:7529 <> acc:96
R7541:7541 Coq.MSets.MSetRBT <> s:95 var
R7551:7554 Coq.MSets.MSetRBT Ops Leaf constr
R7559:7561 Coq.MSets.MSetRBT <> acc:96 var
R7566:7569 Coq.MSets.MSetRBT Ops Node constr
R7596:7605 Coq.MSets.MSetRBT <> filter_aux:97 def
R7611:7613 Coq.MSets.MSetRBT <> acc:96 var
R7607:7607 Coq.MSets.MSetRBT <> f:94 var
binder 7589:7591 <> acc:99
R7624:7624 Coq.MSets.MSetRBT <> f:94 var
R7665:7674 Coq.MSets.MSetRBT <> filter_aux:97 def
R7680:7682 Coq.MSets.MSetRBT <> acc:99 var
R7676:7676 Coq.MSets.MSetRBT <> f:94 var
R7633:7642 Coq.MSets.MSetRBT <> filter_aux:97 def
R7650:7651 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7652:7654 Coq.MSets.MSetRBT <> acc:99 var
R7644:7644 Coq.MSets.MSetRBT <> f:94 var
def 7702:7707 Ops filter
R7716:7719 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7713:7715 Coq.MSets.MSetRBT Ops elt def
R7720:7723 Coq.Init.Datatypes <> bool ind
binder 7710:7710 <> f:100
R7730:7730 Coq.MSets.MSetRBT Ops t def
binder 7727:7727 <> s:101
R7735:7735 Coq.MSets.MSetRBT Ops t def
R7741:7747 Coq.MSets.MSetRBT Ops treeify def
R7750:7759 Coq.MSets.MSetRBT Ops filter_aux def
R7761:7761 Coq.MSets.MSetRBT <> f:100 var
R7763:7763 Coq.MSets.MSetRBT <> s:101 var
R7765:7767 Coq.Init.Datatypes <> nil constr
def 7781:7793 Ops partition_aux
R7802:7805 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7799:7801 Coq.MSets.MSetRBT Ops elt def
R7806:7809 Coq.Init.Datatypes <> bool ind
binder 7796:7796 <> f:102
binder 7812:7812 <> s:103
binder 7814:7817 <> acc1:104
binder 7819:7822 <> acc2:105
R7834:7834 Coq.MSets.MSetRBT <> s:103 var
R7844:7847 Coq.MSets.MSetRBT Ops Leaf constr
R7852:7852 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7857:7857 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7862:7862 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7853:7856 Coq.MSets.MSetRBT <> acc1:104 var
R7858:7861 Coq.MSets.MSetRBT <> acc2:105 var
R7867:7870 Coq.MSets.MSetRBT Ops Node constr
R7908:7920 Coq.MSets.MSetRBT <> partition_aux:106 def
R7932:7935 Coq.MSets.MSetRBT <> acc2:105 var
R7927:7930 Coq.MSets.MSetRBT <> acc1:104 var
R7922:7922 Coq.MSets.MSetRBT <> f:102 var
binder 7893:7896 <> acc1:108
binder 7899:7902 <> acc2:109
R7946:7946 Coq.MSets.MSetRBT <> f:102 var
R7997:8009 Coq.MSets.MSetRBT <> partition_aux:106 def
R8023:8024 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8025:8028 Coq.MSets.MSetRBT <> acc2:109 var
R8016:8019 Coq.MSets.MSetRBT <> acc1:108 var
R8011:8011 Coq.MSets.MSetRBT <> f:102 var
R7955:7967 Coq.MSets.MSetRBT <> partition_aux:106 def
R7984:7987 Coq.MSets.MSetRBT <> acc2:109 var
R7976:7977 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7978:7981 Coq.MSets.MSetRBT <> acc1:108 var
R7969:7969 Coq.MSets.MSetRBT <> f:102 var
def 8049:8057 Ops partition
R8066:8069 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8063:8065 Coq.MSets.MSetRBT Ops elt def
R8070:8073 Coq.Init.Datatypes <> bool ind
binder 8060:8060 <> f:110
R8079:8079 Coq.MSets.MSetRBT Ops t def
binder 8077:8077 <> s:111
R8085:8085 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R8084:8084 Coq.MSets.MSetRBT Ops t def
R8086:8086 Coq.MSets.MSetRBT Ops t def
R8108:8120 Coq.MSets.MSetRBT Ops partition_aux def
R8122:8122 Coq.MSets.MSetRBT <> f:110 var
R8124:8124 Coq.MSets.MSetRBT <> s:111 var
R8126:8128 Coq.Init.Datatypes <> nil constr
R8130:8132 Coq.Init.Datatypes <> nil constr
binder 8098:8099 <> ok:112
binder 8101:8102 <> ko:113
R8139:8139 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8150:8151 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8162:8162 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8140:8146 Coq.MSets.MSetRBT Ops treeify def
R8148:8149 Coq.MSets.MSetRBT <> ok:112 var
R8152:8158 Coq.MSets.MSetRBT Ops treeify def
R8160:8161 Coq.MSets.MSetRBT <> ko:113 var
def 8290:8299 Ops union_list
binder 8301:8302 <> l1:114
R8314:8317 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8306:8309 Coq.Init.Datatypes <> list ind
R8311:8313 Coq.MSets.MSetRBT Ops elt def
R8326:8329 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8318:8321 Coq.Init.Datatypes <> list ind
R8323:8325 Coq.MSets.MSetRBT Ops elt def
R8330:8333 Coq.Init.Datatypes <> list ind
R8335:8337 Coq.MSets.MSetRBT Ops elt def
R8349:8350 Coq.MSets.MSetRBT <> l1:114 var
R8360:8362 Coq.Init.Datatypes <> nil constr
R8368:8377 Coq.Lists.List <> rev_append def
R8385:8386 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
binder 8411:8412 <> l2:117
binder 8414:8416 <> acc:118
R8431:8432 Coq.MSets.MSetRBT <> l2:117 var
R8445:8447 Coq.Init.Datatypes <> nil constr
R8452:8461 Coq.Lists.List <> rev_append def
R8466:8468 Coq.MSets.MSetRBT <> acc:118 var
R8463:8464 Coq.MSets.MSetRBT <> l1:114 var
R8477:8478 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8499:8507 Coq.MSets.MSetRBT X compare defax
R8527:8528 Coq.Init.Datatypes <> Eq constr
R8533:8542 Coq.MSets.MSetRBT <> union_list:115 def
R8554:8555 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8556:8558 Coq.MSets.MSetRBT <> acc:118 var
R8570:8571 Coq.Init.Datatypes <> Lt constr
R8576:8583 Coq.MSets.MSetRBT <> union_l1:119 var
R8591:8592 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8593:8595 Coq.MSets.MSetRBT <> acc:118 var
R8607:8608 Coq.Init.Datatypes <> Gt constr
R8613:8622 Coq.MSets.MSetRBT <> union_list:115 def
R8633:8634 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8635:8637 Coq.MSets.MSetRBT <> acc:118 var
R8628:8629 Coq.MSets.MSetRBT <> l2:117 var
def 8677:8688 Ops linear_union
binder 8690:8691 <> s1:121
binder 8693:8694 <> s2:122
R8701:8707 Coq.MSets.MSetRBT Ops treeify def
R8710:8719 Coq.MSets.MSetRBT Ops union_list def
R8722:8733 Coq.MSets.MSetRBT Ops rev_elements def
R8735:8736 Coq.MSets.MSetRBT <> s1:121 var
R8740:8751 Coq.MSets.MSetRBT Ops rev_elements def
R8753:8754 Coq.MSets.MSetRBT <> s2:122 var
R8757:8759 Coq.Init.Datatypes <> nil constr
def 8773:8782 Ops inter_list
binder 8784:8785 <> l1:123
R8797:8800 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8789:8792 Coq.Init.Datatypes <> list ind
R8794:8796 Coq.MSets.MSetRBT Ops elt def
R8809:8812 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8801:8804 Coq.Init.Datatypes <> list ind
R8806:8808 Coq.MSets.MSetRBT Ops elt def
R8813:8816 Coq.Init.Datatypes <> list ind
R8818:8820 Coq.MSets.MSetRBT Ops elt def
R8832:8833 Coq.MSets.MSetRBT <> l1:123 var
R8843:8845 Coq.Init.Datatypes <> nil constr
binder 8856:8858 <> acc:126
R8863:8865 Coq.MSets.MSetRBT <> acc:126 var
R8871:8872 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
binder 8897:8898 <> l2:127
binder 8900:8902 <> acc:128
R8917:8918 Coq.MSets.MSetRBT <> l2:127 var
R8931:8933 Coq.Init.Datatypes <> nil constr
R8938:8940 Coq.MSets.MSetRBT <> acc:128 var
R8949:8950 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8971:8979 Coq.MSets.MSetRBT X compare defax
R8999:9000 Coq.Init.Datatypes <> Eq constr
R9005:9014 Coq.MSets.MSetRBT <> inter_list:124 def
R9026:9027 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9028:9030 Coq.MSets.MSetRBT <> acc:128 var
R9042:9043 Coq.Init.Datatypes <> Lt constr
R9048:9055 Coq.MSets.MSetRBT <> inter_l1:129 var
R9061:9063 Coq.MSets.MSetRBT <> acc:128 var
R9074:9075 Coq.Init.Datatypes <> Gt constr
R9080:9089 Coq.MSets.MSetRBT <> inter_list:124 def
R9098:9100 Coq.MSets.MSetRBT <> acc:128 var
R9095:9096 Coq.MSets.MSetRBT <> l2:127 var
def 9139:9150 Ops linear_inter
binder 9152:9153 <> s1:131
binder 9155:9156 <> s2:132
R9163:9169 Coq.MSets.MSetRBT Ops treeify def
R9172:9181 Coq.MSets.MSetRBT Ops inter_list def
R9184:9195 Coq.MSets.MSetRBT Ops rev_elements def
R9197:9198 Coq.MSets.MSetRBT <> s1:131 var
R9202:9213 Coq.MSets.MSetRBT Ops rev_elements def
R9215:9216 Coq.MSets.MSetRBT <> s2:132 var
R9219:9221 Coq.Init.Datatypes <> nil constr
def 9235:9243 Ops diff_list
binder 9245:9246 <> l1:133
R9258:9261 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9250:9253 Coq.Init.Datatypes <> list ind
R9255:9257 Coq.MSets.MSetRBT Ops elt def
R9270:9273 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9262:9265 Coq.Init.Datatypes <> list ind
R9267:9269 Coq.MSets.MSetRBT Ops elt def
R9274:9277 Coq.Init.Datatypes <> list ind
R9279:9281 Coq.MSets.MSetRBT Ops elt def
R9293:9294 Coq.MSets.MSetRBT <> l1:133 var
R9304:9306 Coq.Init.Datatypes <> nil constr
binder 9317:9319 <> acc:136
R9324:9326 Coq.MSets.MSetRBT <> acc:136 var
R9332:9333 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
binder 9357:9358 <> l2:137
binder 9360:9362 <> acc:138
R9377:9378 Coq.MSets.MSetRBT <> l2:137 var
R9391:9393 Coq.Init.Datatypes <> nil constr
R9398:9407 Coq.Lists.List <> rev_append def
R9412:9414 Coq.MSets.MSetRBT <> acc:138 var
R9409:9410 Coq.MSets.MSetRBT <> l1:133 var
R9423:9424 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9445:9453 Coq.MSets.MSetRBT X compare defax
R9473:9474 Coq.Init.Datatypes <> Eq constr
R9479:9487 Coq.MSets.MSetRBT <> diff_list:134 def
R9497:9499 Coq.MSets.MSetRBT <> acc:138 var
R9510:9511 Coq.Init.Datatypes <> Lt constr
R9516:9522 Coq.MSets.MSetRBT <> diff_l1:139 var
R9528:9530 Coq.MSets.MSetRBT <> acc:138 var
R9541:9542 Coq.Init.Datatypes <> Gt constr
R9547:9555 Coq.MSets.MSetRBT <> diff_list:134 def
R9566:9567 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9568:9570 Coq.MSets.MSetRBT <> acc:138 var
R9561:9562 Coq.MSets.MSetRBT <> l2:137 var
def 9610:9620 Ops linear_diff
binder 9622:9623 <> s1:141
binder 9625:9626 <> s2:142
R9633:9639 Coq.MSets.MSetRBT Ops treeify def
R9642:9650 Coq.MSets.MSetRBT Ops diff_list def
R9653:9664 Coq.MSets.MSetRBT Ops rev_elements def
R9666:9667 Coq.MSets.MSetRBT <> s1:141 var
R9671:9682 Coq.MSets.MSetRBT Ops rev_elements def
R9684:9685 Coq.MSets.MSetRBT <> s2:142 var
R9688:9690 Coq.Init.Datatypes <> nil constr
def 9961:9968 Ops skip_red
binder 9970:9970 <> t:143
R9982:9982 Coq.MSets.MSetRBT <> t:143 var
R9992:9993 Coq.MSets.MSetRBT Ops Rd abbrev
R10016:10016 Coq.MSets.MSetRBT <> t:143 var
def 10036:10045 Ops skip_black
binder 10047:10047 <> t:145
R10059:10066 Coq.MSets.MSetRBT Ops skip_red def
R10068:10068 Coq.MSets.MSetRBT <> t:145 var
R10078:10079 Coq.MSets.MSetRBT Ops Bk abbrev
def 10122:10135 Ops compare_height
R10153:10156 Coq.MSets.MSetRBT Ops tree ind
binder 10138:10140 <> s1x:146
binder 10142:10143 <> s1:147
binder 10145:10146 <> s2:148
binder 10148:10150 <> s2x:149
R10161:10170 Coq.Init.Datatypes <> comparison ind
R10222:10229 Coq.MSets.MSetRBT Ops skip_red def
R10231:10233 Coq.MSets.MSetRBT <> s2x:149 var
R10209:10216 Coq.MSets.MSetRBT Ops skip_red def
R10218:10219 Coq.MSets.MSetRBT <> s2:148 var
R10196:10203 Coq.MSets.MSetRBT Ops skip_red def
R10205:10206 Coq.MSets.MSetRBT <> s1:147 var
R10182:10189 Coq.MSets.MSetRBT Ops skip_red def
R10191:10193 Coq.MSets.MSetRBT <> s1x:146 var
R10243:10246 Coq.MSets.MSetRBT Ops Node constr
R10260:10263 Coq.MSets.MSetRBT Ops Node constr
R10276:10279 Coq.MSets.MSetRBT Ops Node constr
R10292:10295 Coq.MSets.MSetRBT Ops Node constr
R10314:10327 Coq.MSets.MSetRBT <> compare_height:150 def
R10356:10365 Coq.MSets.MSetRBT Ops skip_black def
R10330:10339 Coq.MSets.MSetRBT Ops skip_black def
R10379:10382 Coq.MSets.MSetRBT Ops Leaf constr
R10388:10391 Coq.MSets.MSetRBT Ops Node constr
R10404:10405 Coq.Init.Datatypes <> Lt constr
R10410:10413 Coq.MSets.MSetRBT Ops Node constr
R10427:10430 Coq.MSets.MSetRBT Ops Leaf constr
R10438:10439 Coq.Init.Datatypes <> Gt constr
R10444:10447 Coq.MSets.MSetRBT Ops Node constr
R10461:10464 Coq.MSets.MSetRBT Ops Node constr
R10477:10480 Coq.MSets.MSetRBT Ops Node constr
R10493:10496 Coq.MSets.MSetRBT Ops Leaf constr
R10504:10517 Coq.MSets.MSetRBT <> compare_height:150 def
R10545:10548 Coq.MSets.MSetRBT Ops Leaf constr
R10520:10529 Coq.MSets.MSetRBT Ops skip_black def
R10553:10556 Coq.MSets.MSetRBT Ops Leaf constr
R10559:10562 Coq.MSets.MSetRBT Ops Node constr
R10575:10578 Coq.MSets.MSetRBT Ops Node constr
R10591:10594 Coq.MSets.MSetRBT Ops Node constr
R10613:10626 Coq.MSets.MSetRBT <> compare_height:150 def
R10644:10653 Coq.MSets.MSetRBT Ops skip_black def
R10628:10631 Coq.MSets.MSetRBT Ops Leaf constr
R10678:10679 Coq.Init.Datatypes <> Eq constr
def 10884:10888 Ops union
R10898:10898 Coq.MSets.MSetRBT Ops t def
binder 10891:10892 <> t1:151
binder 10894:10895 <> t2:152
R10903:10903 Coq.MSets.MSetRBT Ops t def
R10915:10928 Coq.MSets.MSetRBT Ops compare_height def
R10930:10931 Coq.MSets.MSetRBT <> t1:151 var
R10933:10934 Coq.MSets.MSetRBT <> t1:151 var
R10936:10937 Coq.MSets.MSetRBT <> t2:152 var
R10939:10940 Coq.MSets.MSetRBT <> t2:152 var
R10950:10951 Coq.Init.Datatypes <> Lt constr
R10956:10959 Coq.MSets.MSetRBT Ops fold def
R10968:10969 Coq.MSets.MSetRBT <> t2:152 var
R10965:10966 Coq.MSets.MSetRBT <> t1:151 var
R10961:10963 Coq.MSets.MSetRBT Ops add def
R10974:10975 Coq.Init.Datatypes <> Gt constr
R10980:10983 Coq.MSets.MSetRBT Ops fold def
R10992:10993 Coq.MSets.MSetRBT <> t1:151 var
R10989:10990 Coq.MSets.MSetRBT <> t2:152 var
R10985:10987 Coq.MSets.MSetRBT Ops add def
R10998:10999 Coq.Init.Datatypes <> Eq constr
R11004:11015 Coq.MSets.MSetRBT Ops linear_union def
R11017:11018 Coq.MSets.MSetRBT <> t1:151 var
R11020:11021 Coq.MSets.MSetRBT <> t2:152 var
def 11041:11044 Ops diff
R11054:11054 Coq.MSets.MSetRBT Ops t def
binder 11047:11048 <> t1:153
binder 11050:11051 <> t2:154
R11059:11059 Coq.MSets.MSetRBT Ops t def
R11071:11084 Coq.MSets.MSetRBT Ops compare_height def
R11086:11087 Coq.MSets.MSetRBT <> t1:153 var
R11089:11090 Coq.MSets.MSetRBT <> t1:153 var
R11092:11093 Coq.MSets.MSetRBT <> t2:154 var
R11095:11096 Coq.MSets.MSetRBT <> t2:154 var
R11106:11107 Coq.Init.Datatypes <> Lt constr
R11112:11117 Coq.MSets.MSetRBT Ops filter def
binder 11124:11124 <> k:155
R11129:11132 Coq.Init.Datatypes <> negb def
R11135:11137 Coq.MSets.MSetRBT Ops mem def
R11139:11139 Coq.MSets.MSetRBT <> k:155 var
R11141:11142 Coq.MSets.MSetRBT <> t2:154 var
R11146:11147 Coq.MSets.MSetRBT <> t1:153 var
R11152:11153 Coq.Init.Datatypes <> Gt constr
R11158:11161 Coq.MSets.MSetRBT Ops fold def
R11173:11174 Coq.MSets.MSetRBT <> t1:153 var
R11170:11171 Coq.MSets.MSetRBT <> t2:154 var
R11163:11168 Coq.MSets.MSetRBT Ops remove def
R11179:11180 Coq.Init.Datatypes <> Eq constr
R11185:11195 Coq.MSets.MSetRBT Ops linear_diff def
R11197:11198 Coq.MSets.MSetRBT <> t1:153 var
R11200:11201 Coq.MSets.MSetRBT <> t2:154 var
def 11221:11225 Ops inter
R11235:11235 Coq.MSets.MSetRBT Ops t def
binder 11228:11229 <> t1:156
binder 11231:11232 <> t2:157
R11240:11240 Coq.MSets.MSetRBT Ops t def
R11252:11265 Coq.MSets.MSetRBT Ops compare_height def
R11267:11268 Coq.MSets.MSetRBT <> t1:156 var
R11270:11271 Coq.MSets.MSetRBT <> t1:156 var
R11273:11274 Coq.MSets.MSetRBT <> t2:157 var
R11276:11277 Coq.MSets.MSetRBT <> t2:157 var
R11287:11288 Coq.Init.Datatypes <> Lt constr
R11293:11298 Coq.MSets.MSetRBT Ops filter def
binder 11305:11305 <> k:158
R11310:11312 Coq.MSets.MSetRBT Ops mem def
R11314:11314 Coq.MSets.MSetRBT <> k:158 var
R11316:11317 Coq.MSets.MSetRBT <> t2:157 var
R11320:11321 Coq.MSets.MSetRBT <> t1:156 var
R11326:11327 Coq.Init.Datatypes <> Gt constr
R11332:11337 Coq.MSets.MSetRBT Ops filter def
binder 11344:11344 <> k:159
R11349:11351 Coq.MSets.MSetRBT Ops mem def
R11353:11353 Coq.MSets.MSetRBT <> k:159 var
R11355:11356 Coq.MSets.MSetRBT <> t1:156 var
R11359:11360 Coq.MSets.MSetRBT <> t2:157 var
R11365:11366 Coq.Init.Datatypes <> Eq constr
R11371:11382 Coq.MSets.MSetRBT Ops linear_inter def
R11384:11385 Coq.MSets.MSetRBT <> t1:156 var
R11387:11388 Coq.MSets.MSetRBT <> t2:157 var
R11401:11403 Coq.MSets.MSetRBT Ops <> mod
R11494:11511 Coq.Structures.Orders OrderedType <> mod
R11517:11537 Coq.MSets.MSetInterface RawSets <> mod
R11539:11539 Coq.MSets.MSetRBT X <> modtype
modtype 11483:11489 <> MakeRaw
R11550:11552 Coq.MSets.MSetRBT Ops <> modtype
R11554:11554 Coq.MSets.MSetRBT X <> modtype
R11692:11708 Coq.MSets.MSetGenTree Props <> mod
R11710:11710 Coq.MSets.MSetRBT X <> modtype
R11712:11716 Coq.MSets.MSetRBT Color <> modtype
abbrev 11735:11736 MakeRaw Rd
R11742:11745 Coq.MSets.MSetRBT MakeRaw Node constr
R11747:11749 Coq.MSets.MSetRBT <> Red constr
abbrev 11768:11769 MakeRaw Bk
R11775:11778 Coq.MSets.MSetRBT MakeRaw Node constr
R11780:11784 Coq.MSets.MSetRBT <> Black constr
R11846:11847 Coq.MSets.MSetRBT MakeRaw In def
R11849:11855 Coq.MSets.MSetRBT MakeRaw lt_tree def
R11857:11863 Coq.MSets.MSetRBT MakeRaw gt_tree def
R11865:11866 Coq.MSets.MSetRBT MakeRaw Ok class
R11900:11902 Coq.MSets.MSetRBT <> InT ind
R11904:11906 Coq.MSets.MSetRBT <> bst ind
prf 12209:12222 MakeRaw singleton_spec
binder 12224:12224 <> x:160
binder 12226:12226 <> y:161
R12249:12253 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12230:12232 Coq.MSets.MSetRBT MakeRaw InT ind
R12234:12234 Coq.MSets.MSetRBT <> y:161 var
R12237:12245 Coq.MSets.MSetRBT MakeRaw singleton def
R12247:12247 Coq.MSets.MSetRBT <> x:160 var
R12254:12257 Coq.MSets.MSetRBT X eq defax
R12261:12261 Coq.MSets.MSetRBT <> x:160 var
R12259:12259 Coq.MSets.MSetRBT <> y:161 var
R12279:12287 Coq.MSets.MSetRBT MakeRaw singleton def
inst 12329:12340 MakeRaw singleton_ok
binder 12342:12342 <> x:162
R12346:12347 Coq.MSets.MSetRBT MakeRaw Ok class
R12350:12358 Coq.MSets.MSetRBT MakeRaw singleton def
R12360:12360 Coq.MSets.MSetRBT <> x:162 var
R12379:12387 Coq.MSets.MSetRBT MakeRaw singleton def
prf 12438:12451 MakeRaw makeBlack_spec
binder 12453:12453 <> s:163
binder 12455:12455 <> x:164
R12478:12482 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12459:12461 Coq.MSets.MSetRBT MakeRaw InT ind
R12463:12463 Coq.MSets.MSetRBT <> x:164 var
R12466:12474 Coq.MSets.MSetRBT MakeRaw makeBlack def
R12476:12476 Coq.MSets.MSetRBT <> s:163 var
R12483:12485 Coq.MSets.MSetRBT MakeRaw InT ind
R12487:12487 Coq.MSets.MSetRBT <> x:164 var
R12489:12489 Coq.MSets.MSetRBT <> s:163 var
prf 12545:12556 MakeRaw makeRed_spec
binder 12558:12558 <> s:165
binder 12560:12560 <> x:166
R12581:12585 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12564:12566 Coq.MSets.MSetRBT MakeRaw InT ind
R12568:12568 Coq.MSets.MSetRBT <> x:166 var
R12571:12577 Coq.MSets.MSetRBT MakeRaw makeRed def
R12579:12579 Coq.MSets.MSetRBT <> s:165 var
R12586:12588 Coq.MSets.MSetRBT MakeRaw InT ind
R12590:12590 Coq.MSets.MSetRBT <> x:166 var
R12592:12592 Coq.MSets.MSetRBT <> s:165 var
inst 12661:12672 MakeRaw makeBlack_ok
binder 12674:12674 <> s:167
R12678:12679 Coq.MSets.MSetRBT MakeRaw Ok class
R12681:12681 Coq.MSets.MSetRBT <> s:167 var
binder 12678:12681 <> H:168
R12686:12687 Coq.MSets.MSetRBT MakeRaw Ok class
R12690:12698 Coq.MSets.MSetRBT MakeRaw makeBlack def
R12700:12700 Coq.MSets.MSetRBT <> s:167 var
inst 12760:12769 MakeRaw makeRed_ok
binder 12771:12771 <> s:169
R12775:12776 Coq.MSets.MSetRBT MakeRaw Ok class
R12778:12778 Coq.MSets.MSetRBT <> s:169 var
binder 12775:12778 <> H:170
R12783:12784 Coq.MSets.MSetRBT MakeRaw Ok class
R12787:12793 Coq.MSets.MSetRBT MakeRaw makeRed def
R12795:12795 Coq.MSets.MSetRBT <> s:169 var
def 12913:12919 MakeRaw isblack
binder 12921:12921 <> t:171
R12933:12933 Coq.MSets.MSetRBT <> t:171 var
R12940:12941 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R12952:12955 Coq.Init.Logic <> True ind
R12964:12968 Coq.Init.Logic <> False ind
def 12987:12994 MakeRaw notblack
binder 12996:12996 <> t:173
R13008:13008 Coq.MSets.MSetRBT <> t:173 var
R13015:13016 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R13027:13031 Coq.Init.Logic <> False ind
R13040:13043 Coq.Init.Logic <> True ind
def 13062:13067 MakeRaw notred
binder 13069:13069 <> t:175
R13081:13081 Coq.MSets.MSetRBT <> t:175 var
R13088:13089 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R13100:13104 Coq.Init.Logic <> False ind
R13113:13116 Coq.Init.Logic <> True ind
def 13135:13139 MakeRaw rcase
binder 13142:13142 <> A:177
binder 13145:13145 <> f:178
binder 13147:13147 <> g:179
binder 13149:13149 <> t:180
R13153:13153 Coq.MSets.MSetRBT <> A:177 var
R13165:13165 Coq.MSets.MSetRBT <> t:180 var
R13175:13176 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R13187:13187 Coq.MSets.MSetRBT <> f:178 var
R13203:13203 Coq.MSets.MSetRBT <> g:179 var
R13205:13205 Coq.MSets.MSetRBT <> t:180 var
ind 13224:13228 MakeRaw rspec
constr 13264:13267 MakeRaw rred
constr 13311:13315 MakeRaw relse
binder 13231:13231 <> A:182
binder 13234:13234 <> f:183
binder 13236:13236 <> g:184
R13244:13247 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13240:13243 Coq.MSets.MSetRBT MakeRaw tree ind
R13249:13252 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 13269:13269 <> a:187
binder 13271:13271 <> x:188
binder 13273:13273 <> b:189
R13277:13281 Coq.MSets.MSetRBT <> rspec:185 ind
R13299:13299 Coq.MSets.MSetRBT <> f:183 var
R13301:13301 Coq.MSets.MSetRBT <> a:187 var
R13303:13303 Coq.MSets.MSetRBT <> x:188 var
R13305:13305 Coq.MSets.MSetRBT <> b:189 var
R13288:13289 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R13291:13291 Coq.MSets.MSetRBT <> a:187 var
R13293:13293 Coq.MSets.MSetRBT <> x:188 var
R13295:13295 Coq.MSets.MSetRBT <> b:189 var
R13285:13285 Coq.MSets.MSetRBT <> g:184 var
R13283:13283 Coq.MSets.MSetRBT <> f:183 var
binder 13317:13317 <> t:190
R13329:13332 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13321:13326 Coq.MSets.MSetRBT MakeRaw notred def
R13328:13328 Coq.MSets.MSetRBT <> t:190 var
R13333:13337 Coq.MSets.MSetRBT <> rspec:185 ind
R13346:13346 Coq.MSets.MSetRBT <> g:184 var
R13348:13348 Coq.MSets.MSetRBT <> t:190 var
R13343:13343 Coq.MSets.MSetRBT <> t:190 var
R13341:13341 Coq.MSets.MSetRBT <> g:184 var
R13339:13339 Coq.MSets.MSetRBT <> f:183 var
prf 13358:13363 MakeRaw rmatch
binder 13366:13366 <> A:191
binder 13369:13369 <> f:192
binder 13371:13371 <> g:193
binder 13373:13373 <> t:194
R13377:13381 Coq.MSets.MSetRBT MakeRaw rspec ind
R13397:13401 Coq.MSets.MSetRBT MakeRaw rcase def
R13407:13407 Coq.MSets.MSetRBT <> t:194 var
R13405:13405 Coq.MSets.MSetRBT <> g:193 var
R13403:13403 Coq.MSets.MSetRBT <> f:192 var
R13394:13394 Coq.MSets.MSetRBT <> t:194 var
R13392:13392 Coq.MSets.MSetRBT <> g:193 var
R13390:13390 Coq.MSets.MSetRBT <> f:192 var
R13387:13387 Coq.MSets.MSetRBT <> A:191 var
def 13487:13492 MakeRaw rrcase
binder 13495:13495 <> A:195
binder 13498:13498 <> f:196
binder 13500:13500 <> g:197
binder 13502:13502 <> t:198
R13506:13506 Coq.MSets.MSetRBT <> A:195 var
R13518:13518 Coq.MSets.MSetRBT <> t:198 var
R13528:13529 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R13532:13533 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R13549:13549 Coq.MSets.MSetRBT <> f:196 var
R13564:13565 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R13572:13573 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R13585:13585 Coq.MSets.MSetRBT <> f:196 var
R13605:13605 Coq.MSets.MSetRBT <> g:197 var
R13607:13607 Coq.MSets.MSetRBT <> t:198 var
abbrev 13625:13633 MakeRaw notredred
R13639:13644 Coq.MSets.MSetRBT MakeRaw rrcase def
R13681:13684 Coq.Init.Logic <> True ind
R13664:13668 Coq.Init.Logic <> False ind
ind 13700:13705 MakeRaw rrspec
constr 13741:13746 MakeRaw rrleft
constr 13808:13814 MakeRaw rrright
constr 13876:13881 MakeRaw rrelse
binder 13708:13708 <> A:200
binder 13711:13711 <> f:201
binder 13713:13713 <> g:202
R13721:13724 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13717:13720 Coq.MSets.MSetRBT MakeRaw tree ind
R13726:13729 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 13748:13748 <> a:205
binder 13750:13750 <> x:206
binder 13752:13752 <> b:207
binder 13754:13754 <> y:208
binder 13756:13756 <> c:209
R13760:13765 Coq.MSets.MSetRBT <> rrspec:203 ind
R13792:13792 Coq.MSets.MSetRBT <> f:201 var
R13794:13794 Coq.MSets.MSetRBT <> a:205 var
R13796:13796 Coq.MSets.MSetRBT <> x:206 var
R13798:13798 Coq.MSets.MSetRBT <> b:207 var
R13800:13800 Coq.MSets.MSetRBT <> y:208 var
R13802:13802 Coq.MSets.MSetRBT <> c:209 var
R13772:13773 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R13776:13777 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R13779:13779 Coq.MSets.MSetRBT <> a:205 var
R13781:13781 Coq.MSets.MSetRBT <> x:206 var
R13783:13783 Coq.MSets.MSetRBT <> b:207 var
R13786:13786 Coq.MSets.MSetRBT <> y:208 var
R13788:13788 Coq.MSets.MSetRBT <> c:209 var
R13769:13769 Coq.MSets.MSetRBT <> g:202 var
R13767:13767 Coq.MSets.MSetRBT <> f:201 var
binder 13816:13816 <> a:210
binder 13818:13818 <> x:211
binder 13820:13820 <> b:212
binder 13822:13822 <> y:213
binder 13824:13824 <> c:214
R13828:13833 Coq.MSets.MSetRBT <> rrspec:203 ind
R13860:13860 Coq.MSets.MSetRBT <> f:201 var
R13862:13862 Coq.MSets.MSetRBT <> a:210 var
R13864:13864 Coq.MSets.MSetRBT <> x:211 var
R13866:13866 Coq.MSets.MSetRBT <> b:212 var
R13868:13868 Coq.MSets.MSetRBT <> y:213 var
R13870:13870 Coq.MSets.MSetRBT <> c:214 var
R13840:13841 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R13843:13843 Coq.MSets.MSetRBT <> a:210 var
R13845:13845 Coq.MSets.MSetRBT <> x:211 var
R13848:13849 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R13851:13851 Coq.MSets.MSetRBT <> b:212 var
R13853:13853 Coq.MSets.MSetRBT <> y:213 var
R13855:13855 Coq.MSets.MSetRBT <> c:214 var
R13837:13837 Coq.MSets.MSetRBT <> g:202 var
R13835:13835 Coq.MSets.MSetRBT <> f:201 var
binder 13883:13883 <> t:215
R13898:13901 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13887:13895 Coq.MSets.MSetRBT MakeRaw notredred abbrev
R13897:13897 Coq.MSets.MSetRBT <> t:215 var
R13902:13907 Coq.MSets.MSetRBT <> rrspec:203 ind
R13916:13916 Coq.MSets.MSetRBT <> g:202 var
R13918:13918 Coq.MSets.MSetRBT <> t:215 var
R13913:13913 Coq.MSets.MSetRBT <> t:215 var
R13911:13911 Coq.MSets.MSetRBT <> g:202 var
R13909:13909 Coq.MSets.MSetRBT <> f:201 var
prf 13928:13934 MakeRaw rrmatch
binder 13937:13937 <> A:216
binder 13940:13940 <> f:217
binder 13942:13942 <> g:218
binder 13944:13944 <> t:219
R13948:13953 Coq.MSets.MSetRBT MakeRaw rrspec ind
R13969:13974 Coq.MSets.MSetRBT MakeRaw rrcase def
R13980:13980 Coq.MSets.MSetRBT <> t:219 var
R13978:13978 Coq.MSets.MSetRBT <> g:218 var
R13976:13976 Coq.MSets.MSetRBT <> f:217 var
R13966:13966 Coq.MSets.MSetRBT <> t:219 var
R13964:13964 Coq.MSets.MSetRBT <> g:218 var
R13962:13962 Coq.MSets.MSetRBT <> f:217 var
R13959:13959 Coq.MSets.MSetRBT <> A:216 var
def 14134:14140 MakeRaw rrcase'
binder 14143:14143 <> A:220
binder 14146:14146 <> f:221
binder 14148:14148 <> g:222
binder 14150:14150 <> t:223
R14154:14154 Coq.MSets.MSetRBT <> A:220 var
R14166:14166 Coq.MSets.MSetRBT <> t:223 var
R14176:14177 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R14184:14185 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R14197:14197 Coq.MSets.MSetRBT <> f:221 var
R14212:14213 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R14216:14217 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R14233:14233 Coq.MSets.MSetRBT <> f:221 var
R14253:14253 Coq.MSets.MSetRBT <> g:222 var
R14255:14255 Coq.MSets.MSetRBT <> t:223 var
prf 14269:14276 MakeRaw rrmatch'
binder 14279:14279 <> A:225
binder 14282:14282 <> f:226
binder 14284:14284 <> g:227
binder 14286:14286 <> t:228
R14290:14295 Coq.MSets.MSetRBT MakeRaw rrspec ind
R14311:14317 Coq.MSets.MSetRBT MakeRaw rrcase' def
R14323:14323 Coq.MSets.MSetRBT <> t:228 var
R14321:14321 Coq.MSets.MSetRBT <> g:227 var
R14319:14319 Coq.MSets.MSetRBT <> f:226 var
R14308:14308 Coq.MSets.MSetRBT <> t:228 var
R14306:14306 Coq.MSets.MSetRBT <> g:227 var
R14304:14304 Coq.MSets.MSetRBT <> f:226 var
R14301:14301 Coq.MSets.MSetRBT <> A:225 var
prf 14531:14540 MakeRaw lbal_match
binder 14542:14542 <> l:229
binder 14544:14544 <> k:230
binder 14546:14546 <> r:231
R14551:14556 Coq.MSets.MSetRBT MakeRaw rrspec ind
R14639:14642 Coq.MSets.MSetRBT MakeRaw lbal def
R14644:14644 Coq.MSets.MSetRBT <> l:229 var
R14646:14646 Coq.MSets.MSetRBT <> k:230 var
R14648:14648 Coq.MSets.MSetRBT <> r:231 var
R14633:14633 Coq.MSets.MSetRBT <> l:229 var
binder 14615:14615 <> l:232
R14620:14621 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R14623:14623 Coq.MSets.MSetRBT <> l:232 var
R14625:14625 Coq.MSets.MSetRBT <> k:230 var
R14627:14627 Coq.MSets.MSetRBT <> r:231 var
binder 14566:14566 <> a:233
binder 14568:14568 <> x:234
binder 14570:14570 <> b:235
binder 14572:14572 <> y:236
binder 14574:14574 <> c:237
R14579:14580 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R14583:14584 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R14586:14586 Coq.MSets.MSetRBT <> a:233 var
R14588:14588 Coq.MSets.MSetRBT <> x:234 var
R14590:14590 Coq.MSets.MSetRBT <> b:235 var
R14593:14593 Coq.MSets.MSetRBT <> y:236 var
R14596:14597 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R14599:14599 Coq.MSets.MSetRBT <> c:237 var
R14601:14601 Coq.MSets.MSetRBT <> k:230 var
R14603:14603 Coq.MSets.MSetRBT <> r:231 var
R14667:14673 Coq.MSets.MSetRBT MakeRaw rrmatch thm
R14667:14673 Coq.MSets.MSetRBT MakeRaw rrmatch thm
prf 14694:14703 MakeRaw rbal_match
binder 14705:14705 <> l:238
binder 14707:14707 <> k:239
binder 14709:14709 <> r:240
R14714:14719 Coq.MSets.MSetRBT MakeRaw rrspec ind
R14802:14805 Coq.MSets.MSetRBT MakeRaw rbal def
R14807:14807 Coq.MSets.MSetRBT <> l:238 var
R14809:14809 Coq.MSets.MSetRBT <> k:239 var
R14811:14811 Coq.MSets.MSetRBT <> r:240 var
R14796:14796 Coq.MSets.MSetRBT <> r:240 var
binder 14778:14778 <> r:241
R14783:14784 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R14786:14786 Coq.MSets.MSetRBT <> l:238 var
R14788:14788 Coq.MSets.MSetRBT <> k:239 var
R14790:14790 Coq.MSets.MSetRBT <> r:241 var
binder 14729:14729 <> a:242
binder 14731:14731 <> x:243
binder 14733:14733 <> b:244
binder 14735:14735 <> y:245
binder 14737:14737 <> c:246
R14742:14743 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R14746:14747 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R14749:14749 Coq.MSets.MSetRBT <> l:238 var
R14751:14751 Coq.MSets.MSetRBT <> k:239 var
R14753:14753 Coq.MSets.MSetRBT <> a:242 var
R14756:14756 Coq.MSets.MSetRBT <> x:243 var
R14759:14760 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R14762:14762 Coq.MSets.MSetRBT <> b:244 var
R14764:14764 Coq.MSets.MSetRBT <> y:245 var
R14766:14766 Coq.MSets.MSetRBT <> c:246 var
R14830:14836 Coq.MSets.MSetRBT MakeRaw rrmatch thm
R14830:14836 Coq.MSets.MSetRBT MakeRaw rrmatch thm
prf 14857:14867 MakeRaw rbal'_match
binder 14869:14869 <> l:247
binder 14871:14871 <> k:248
binder 14873:14873 <> r:249
R14878:14883 Coq.MSets.MSetRBT MakeRaw rrspec ind
R14966:14970 Coq.MSets.MSetRBT MakeRaw rbal' def
R14972:14972 Coq.MSets.MSetRBT <> l:247 var
R14974:14974 Coq.MSets.MSetRBT <> k:248 var
R14976:14976 Coq.MSets.MSetRBT <> r:249 var
R14960:14960 Coq.MSets.MSetRBT <> r:249 var
binder 14942:14942 <> r:250
R14947:14948 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R14950:14950 Coq.MSets.MSetRBT <> l:247 var
R14952:14952 Coq.MSets.MSetRBT <> k:248 var
R14954:14954 Coq.MSets.MSetRBT <> r:250 var
binder 14893:14893 <> a:251
binder 14895:14895 <> x:252
binder 14897:14897 <> b:253
binder 14899:14899 <> y:254
binder 14901:14901 <> c:255
R14906:14907 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R14910:14911 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R14913:14913 Coq.MSets.MSetRBT <> l:247 var
R14915:14915 Coq.MSets.MSetRBT <> k:248 var
R14917:14917 Coq.MSets.MSetRBT <> a:251 var
R14920:14920 Coq.MSets.MSetRBT <> x:252 var
R14923:14924 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R14926:14926 Coq.MSets.MSetRBT <> b:253 var
R14928:14928 Coq.MSets.MSetRBT <> y:254 var
R14930:14930 Coq.MSets.MSetRBT <> c:255 var
R14995:15002 Coq.MSets.MSetRBT MakeRaw rrmatch' thm
R14995:15002 Coq.MSets.MSetRBT MakeRaw rrmatch' thm
prf 15023:15033 MakeRaw lbalS_match
binder 15035:15035 <> l:256
binder 15037:15037 <> x:257
binder 15039:15039 <> r:258
R15044:15048 Coq.MSets.MSetRBT MakeRaw rspec ind
R15256:15260 Coq.MSets.MSetRBT MakeRaw lbalS def
R15262:15262 Coq.MSets.MSetRBT <> l:256 var
R15264:15264 Coq.MSets.MSetRBT <> x:257 var
R15266:15266 Coq.MSets.MSetRBT <> r:258 var
R15251:15251 Coq.MSets.MSetRBT <> l:256 var
binder 15092:15092 <> l:259
R15107:15107 Coq.MSets.MSetRBT <> r:258 var
R15120:15121 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R15132:15136 Coq.MSets.MSetRBT MakeRaw rbal' def
R15138:15138 Coq.MSets.MSetRBT <> l:259 var
R15140:15140 Coq.MSets.MSetRBT <> x:257 var
R15143:15144 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R15159:15160 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R15163:15164 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R15180:15181 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R15184:15185 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R15187:15187 Coq.MSets.MSetRBT <> l:259 var
R15189:15189 Coq.MSets.MSetRBT <> x:257 var
R15197:15201 Coq.MSets.MSetRBT MakeRaw rbal' def
R15208:15214 Coq.MSets.MSetRBT MakeRaw makeRed def
R15231:15232 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R15234:15234 Coq.MSets.MSetRBT <> l:259 var
R15236:15236 Coq.MSets.MSetRBT <> x:257 var
R15238:15238 Coq.MSets.MSetRBT <> r:258 var
binder 15057:15057 <> a:261
binder 15059:15059 <> y:262
binder 15061:15061 <> b:263
R15066:15067 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R15070:15071 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R15073:15073 Coq.MSets.MSetRBT <> a:261 var
R15075:15075 Coq.MSets.MSetRBT <> y:262 var
R15077:15077 Coq.MSets.MSetRBT <> b:263 var
R15080:15080 Coq.MSets.MSetRBT <> x:257 var
R15082:15082 Coq.MSets.MSetRBT <> r:258 var
R15285:15290 Coq.MSets.MSetRBT MakeRaw rmatch thm
R15285:15290 Coq.MSets.MSetRBT MakeRaw rmatch thm
prf 15311:15321 MakeRaw rbalS_match
binder 15323:15323 <> l:264
binder 15325:15325 <> x:265
binder 15327:15327 <> r:266
R15332:15336 Coq.MSets.MSetRBT MakeRaw rspec ind
R15542:15546 Coq.MSets.MSetRBT MakeRaw rbalS def
R15548:15548 Coq.MSets.MSetRBT <> l:264 var
R15550:15550 Coq.MSets.MSetRBT <> x:265 var
R15552:15552 Coq.MSets.MSetRBT <> r:266 var
R15537:15537 Coq.MSets.MSetRBT <> r:266 var
binder 15380:15380 <> r:267
R15395:15395 Coq.MSets.MSetRBT <> l:264 var
R15408:15409 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R15420:15423 Coq.MSets.MSetRBT MakeRaw lbal def
R15426:15427 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R15436:15436 Coq.MSets.MSetRBT <> x:265 var
R15438:15438 Coq.MSets.MSetRBT <> r:267 var
R15446:15447 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R15454:15455 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R15467:15468 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R15471:15474 Coq.MSets.MSetRBT MakeRaw lbal def
R15477:15483 Coq.MSets.MSetRBT MakeRaw makeRed def
R15496:15497 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R15501:15501 Coq.MSets.MSetRBT <> x:265 var
R15503:15503 Coq.MSets.MSetRBT <> r:267 var
R15517:15518 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R15520:15520 Coq.MSets.MSetRBT <> l:264 var
R15522:15522 Coq.MSets.MSetRBT <> x:265 var
R15524:15524 Coq.MSets.MSetRBT <> r:267 var
binder 15345:15345 <> a:269
binder 15347:15347 <> y:270
binder 15349:15349 <> b:271
R15354:15355 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R15357:15357 Coq.MSets.MSetRBT <> l:264 var
R15359:15359 Coq.MSets.MSetRBT <> x:265 var
R15362:15363 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R15365:15365 Coq.MSets.MSetRBT <> a:269 var
R15367:15367 Coq.MSets.MSetRBT <> y:270 var
R15369:15369 Coq.MSets.MSetRBT <> b:271 var
R15571:15576 Coq.MSets.MSetRBT MakeRaw rmatch thm
R15571:15576 Coq.MSets.MSetRBT MakeRaw rmatch thm
prf 15633:15641 MakeRaw lbal_spec
binder 15643:15643 <> l:272
binder 15645:15645 <> x:273
binder 15647:15647 <> r:274
binder 15649:15649 <> y:275
R15674:15678 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15656:15658 Coq.MSets.MSetRBT MakeRaw InT ind
R15660:15660 Coq.MSets.MSetRBT <> y:275 var
R15663:15666 Coq.MSets.MSetRBT MakeRaw lbal def
R15668:15668 Coq.MSets.MSetRBT <> l:272 var
R15670:15670 Coq.MSets.MSetRBT <> x:273 var
R15672:15672 Coq.MSets.MSetRBT <> r:274 var
R15687:15690 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R15679:15682 Coq.MSets.MSetRBT X eq defax
R15686:15686 Coq.MSets.MSetRBT <> x:273 var
R15684:15684 Coq.MSets.MSetRBT <> y:275 var
R15698:15701 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R15691:15693 Coq.MSets.MSetRBT MakeRaw InT ind
R15695:15695 Coq.MSets.MSetRBT <> y:275 var
R15697:15697 Coq.MSets.MSetRBT <> l:272 var
R15702:15704 Coq.MSets.MSetRBT MakeRaw InT ind
R15706:15706 Coq.MSets.MSetRBT <> y:275 var
R15708:15708 Coq.MSets.MSetRBT <> r:274 var
R15724:15733 Coq.MSets.MSetRBT MakeRaw lbal_match thm
R15724:15733 Coq.MSets.MSetRBT MakeRaw lbal_match thm
inst 15775:15781 MakeRaw lbal_ok
binder 15783:15783 <> l:276
binder 15785:15785 <> x:277
binder 15787:15787 <> r:278
R15791:15792 Coq.MSets.MSetRBT MakeRaw Ok class
R15794:15794 Coq.MSets.MSetRBT <> l:276 var
binder 15791:15794 <> H:279
R15797:15798 Coq.MSets.MSetRBT MakeRaw Ok class
R15800:15800 Coq.MSets.MSetRBT <> r:278 var
binder 15797:15800 <> H0:280
R15803:15809 Coq.MSets.MSetRBT MakeRaw lt_tree def
R15811:15811 Coq.MSets.MSetRBT <> x:277 var
R15813:15813 Coq.MSets.MSetRBT <> l:276 var
binder 15803:15813 <> lt_tree0:281
R15816:15822 Coq.MSets.MSetRBT MakeRaw gt_tree def
R15824:15824 Coq.MSets.MSetRBT <> x:277 var
R15826:15826 Coq.MSets.MSetRBT <> r:278 var
binder 15816:15826 <> gt_tree0:282
R15832:15833 Coq.MSets.MSetRBT MakeRaw Ok class
R15836:15839 Coq.MSets.MSetRBT MakeRaw lbal def
R15841:15841 Coq.MSets.MSetRBT <> l:276 var
R15843:15843 Coq.MSets.MSetRBT <> x:277 var
R15845:15845 Coq.MSets.MSetRBT <> r:278 var
R15867:15876 Coq.MSets.MSetRBT MakeRaw lbal_match thm
R15867:15876 Coq.MSets.MSetRBT MakeRaw lbal_match thm
prf 15902:15910 MakeRaw rbal_spec
binder 15912:15912 <> l:283
binder 15914:15914 <> x:284
binder 15916:15916 <> r:285
binder 15918:15918 <> y:286
R15943:15947 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15925:15927 Coq.MSets.MSetRBT MakeRaw InT ind
R15929:15929 Coq.MSets.MSetRBT <> y:286 var
R15932:15935 Coq.MSets.MSetRBT MakeRaw rbal def
R15937:15937 Coq.MSets.MSetRBT <> l:283 var
R15939:15939 Coq.MSets.MSetRBT <> x:284 var
R15941:15941 Coq.MSets.MSetRBT <> r:285 var
R15956:15959 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R15948:15951 Coq.MSets.MSetRBT X eq defax
R15955:15955 Coq.MSets.MSetRBT <> x:284 var
R15953:15953 Coq.MSets.MSetRBT <> y:286 var
R15967:15970 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R15960:15962 Coq.MSets.MSetRBT MakeRaw InT ind
R15964:15964 Coq.MSets.MSetRBT <> y:286 var
R15966:15966 Coq.MSets.MSetRBT <> l:283 var
R15971:15973 Coq.MSets.MSetRBT MakeRaw InT ind
R15975:15975 Coq.MSets.MSetRBT <> y:286 var
R15977:15977 Coq.MSets.MSetRBT <> r:285 var
R15993:16002 Coq.MSets.MSetRBT MakeRaw rbal_match thm
R15993:16002 Coq.MSets.MSetRBT MakeRaw rbal_match thm
inst 16044:16050 MakeRaw rbal_ok
binder 16052:16052 <> l:287
binder 16054:16054 <> x:288
binder 16056:16056 <> r:289
R16060:16061 Coq.MSets.MSetRBT MakeRaw Ok class
R16063:16063 Coq.MSets.MSetRBT <> l:287 var
binder 16060:16063 <> H:290
R16066:16067 Coq.MSets.MSetRBT MakeRaw Ok class
R16069:16069 Coq.MSets.MSetRBT <> r:289 var
binder 16066:16069 <> H0:291
R16072:16078 Coq.MSets.MSetRBT MakeRaw lt_tree def
R16080:16080 Coq.MSets.MSetRBT <> x:288 var
R16082:16082 Coq.MSets.MSetRBT <> l:287 var
binder 16072:16082 <> lt_tree0:292
R16085:16091 Coq.MSets.MSetRBT MakeRaw gt_tree def
R16093:16093 Coq.MSets.MSetRBT <> x:288 var
R16095:16095 Coq.MSets.MSetRBT <> r:289 var
binder 16085:16095 <> gt_tree0:293
R16101:16102 Coq.MSets.MSetRBT MakeRaw Ok class
R16105:16108 Coq.MSets.MSetRBT MakeRaw rbal def
R16110:16110 Coq.MSets.MSetRBT <> l:287 var
R16112:16112 Coq.MSets.MSetRBT <> x:288 var
R16114:16114 Coq.MSets.MSetRBT <> r:289 var
R16136:16145 Coq.MSets.MSetRBT MakeRaw rbal_match thm
R16136:16145 Coq.MSets.MSetRBT MakeRaw rbal_match thm
prf 16171:16180 MakeRaw rbal'_spec
binder 16182:16182 <> l:294
binder 16184:16184 <> x:295
binder 16186:16186 <> r:296
binder 16188:16188 <> y:297
R16214:16218 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R16195:16197 Coq.MSets.MSetRBT MakeRaw InT ind
R16199:16199 Coq.MSets.MSetRBT <> y:297 var
R16202:16206 Coq.MSets.MSetRBT MakeRaw rbal' def
R16208:16208 Coq.MSets.MSetRBT <> l:294 var
R16210:16210 Coq.MSets.MSetRBT <> x:295 var
R16212:16212 Coq.MSets.MSetRBT <> r:296 var
R16227:16230 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R16219:16222 Coq.MSets.MSetRBT X eq defax
R16226:16226 Coq.MSets.MSetRBT <> x:295 var
R16224:16224 Coq.MSets.MSetRBT <> y:297 var
R16238:16241 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R16231:16233 Coq.MSets.MSetRBT MakeRaw InT ind
R16235:16235 Coq.MSets.MSetRBT <> y:297 var
R16237:16237 Coq.MSets.MSetRBT <> l:294 var
R16242:16244 Coq.MSets.MSetRBT MakeRaw InT ind
R16246:16246 Coq.MSets.MSetRBT <> y:297 var
R16248:16248 Coq.MSets.MSetRBT <> r:296 var
R16264:16274 Coq.MSets.MSetRBT MakeRaw rbal'_match thm
R16264:16274 Coq.MSets.MSetRBT MakeRaw rbal'_match thm
inst 16316:16323 MakeRaw rbal'_ok
binder 16325:16325 <> l:298
binder 16327:16327 <> x:299
binder 16329:16329 <> r:300
R16333:16334 Coq.MSets.MSetRBT MakeRaw Ok class
R16336:16336 Coq.MSets.MSetRBT <> l:298 var
binder 16333:16336 <> H:301
R16339:16340 Coq.MSets.MSetRBT MakeRaw Ok class
R16342:16342 Coq.MSets.MSetRBT <> r:300 var
binder 16339:16342 <> H0:302
R16345:16351 Coq.MSets.MSetRBT MakeRaw lt_tree def
R16353:16353 Coq.MSets.MSetRBT <> x:299 var
R16355:16355 Coq.MSets.MSetRBT <> l:298 var
binder 16345:16355 <> lt_tree0:303
R16358:16364 Coq.MSets.MSetRBT MakeRaw gt_tree def
R16366:16366 Coq.MSets.MSetRBT <> x:299 var
R16368:16368 Coq.MSets.MSetRBT <> r:300 var
binder 16358:16368 <> gt_tree0:304
R16374:16375 Coq.MSets.MSetRBT MakeRaw Ok class
R16378:16382 Coq.MSets.MSetRBT MakeRaw rbal' def
R16384:16384 Coq.MSets.MSetRBT <> l:298 var
R16386:16386 Coq.MSets.MSetRBT <> x:299 var
R16388:16388 Coq.MSets.MSetRBT <> r:300 var
R16410:16420 Coq.MSets.MSetRBT MakeRaw rbal'_match thm
R16410:16420 Coq.MSets.MSetRBT MakeRaw rbal'_match thm
R16460:16470 Coq.MSets.MSetRBT MakeRaw In_node_iff thm
R16472:16482 Coq.MSets.MSetRBT MakeRaw In_leaf_iff thm
R16485:16496 Coq.MSets.MSetRBT MakeRaw makeRed_spec thm
R16498:16511 Coq.MSets.MSetRBT MakeRaw makeBlack_spec thm
R16513:16521 Coq.MSets.MSetRBT MakeRaw lbal_spec thm
R16523:16531 Coq.MSets.MSetRBT MakeRaw rbal_spec thm
R16533:16542 Coq.MSets.MSetRBT MakeRaw rbal'_spec thm
prf 16770:16777 MakeRaw ins_spec
binder 16788:16788 <> s:305
binder 16790:16790 <> x:306
binder 16792:16792 <> y:307
R16811:16815 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R16796:16798 Coq.MSets.MSetRBT MakeRaw InT ind
R16800:16800 Coq.MSets.MSetRBT <> y:307 var
R16803:16805 Coq.MSets.MSetRBT MakeRaw ins def
R16807:16807 Coq.MSets.MSetRBT <> x:306 var
R16809:16809 Coq.MSets.MSetRBT <> s:305 var
R16824:16827 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R16816:16819 Coq.MSets.MSetRBT X eq defax
R16823:16823 Coq.MSets.MSetRBT <> x:306 var
R16821:16821 Coq.MSets.MSetRBT <> y:307 var
R16828:16830 Coq.MSets.MSetRBT MakeRaw InT ind
R16832:16832 Coq.MSets.MSetRBT <> y:307 var
R16834:16834 Coq.MSets.MSetRBT <> s:305 var
R17046:17053 Coq.MSets.MSetRBT MakeRaw ins_spec thm
inst 17081:17086 MakeRaw ins_ok
binder 17088:17088 <> s:308
binder 17090:17090 <> x:309
R17094:17095 Coq.MSets.MSetRBT MakeRaw Ok class
R17097:17097 Coq.MSets.MSetRBT <> s:308 var
binder 17094:17097 <> H:310
R17102:17103 Coq.MSets.MSetRBT MakeRaw Ok class
R17106:17108 Coq.MSets.MSetRBT MakeRaw ins def
R17110:17110 Coq.MSets.MSetRBT <> x:309 var
R17112:17112 Coq.MSets.MSetRBT <> s:308 var
R17177:17183 Coq.MSets.MSetRBT MakeRaw rbal_ok inst
R17160:17166 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R17160:17166 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R17177:17183 Coq.MSets.MSetRBT MakeRaw rbal_ok inst
R17160:17166 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R17160:17166 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R17177:17183 Coq.MSets.MSetRBT MakeRaw rbal_ok inst
R17160:17166 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R17177:17183 Coq.MSets.MSetRBT MakeRaw rbal_ok inst
prf 17249:17257 MakeRaw add_spec'
binder 17259:17259 <> s:311
binder 17261:17261 <> x:312
binder 17263:17263 <> y:313
R17283:17287 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17268:17270 Coq.MSets.MSetRBT MakeRaw InT ind
R17272:17272 Coq.MSets.MSetRBT <> y:313 var
R17275:17277 Coq.MSets.MSetRBT MakeRaw add def
R17279:17279 Coq.MSets.MSetRBT <> x:312 var
R17281:17281 Coq.MSets.MSetRBT <> s:311 var
R17296:17299 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17288:17291 Coq.MSets.MSetRBT X eq defax
R17295:17295 Coq.MSets.MSetRBT <> x:312 var
R17293:17293 Coq.MSets.MSetRBT <> y:313 var
R17300:17302 Coq.MSets.MSetRBT MakeRaw InT ind
R17304:17304 Coq.MSets.MSetRBT <> y:313 var
R17306:17306 Coq.MSets.MSetRBT <> s:311 var
R17324:17326 Coq.MSets.MSetRBT MakeRaw add def
R17368:17376 Coq.MSets.MSetRBT MakeRaw add_spec' thm
prf 17391:17398 MakeRaw add_spec
binder 17400:17400 <> s:314
binder 17402:17402 <> x:315
binder 17404:17404 <> y:316
R17408:17409 Coq.MSets.MSetRBT MakeRaw Ok class
R17411:17411 Coq.MSets.MSetRBT <> s:314 var
binder 17408:17411 <> H:317
R17432:17436 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17417:17419 Coq.MSets.MSetRBT MakeRaw InT ind
R17421:17421 Coq.MSets.MSetRBT <> y:316 var
R17424:17426 Coq.MSets.MSetRBT MakeRaw add def
R17428:17428 Coq.MSets.MSetRBT <> x:315 var
R17430:17430 Coq.MSets.MSetRBT <> s:314 var
R17445:17448 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17437:17440 Coq.MSets.MSetRBT X eq defax
R17444:17444 Coq.MSets.MSetRBT <> x:315 var
R17442:17442 Coq.MSets.MSetRBT <> y:316 var
R17449:17451 Coq.MSets.MSetRBT MakeRaw InT ind
R17453:17453 Coq.MSets.MSetRBT <> y:316 var
R17455:17455 Coq.MSets.MSetRBT <> s:314 var
R17472:17480 Coq.MSets.MSetRBT MakeRaw add_spec' thm
R17472:17480 Coq.MSets.MSetRBT MakeRaw add_spec' thm
inst 17508:17513 MakeRaw add_ok
binder 17515:17515 <> s:318
binder 17517:17517 <> x:319
R17521:17522 Coq.MSets.MSetRBT MakeRaw Ok class
R17524:17524 Coq.MSets.MSetRBT <> s:318 var
binder 17521:17524 <> H:320
R17529:17530 Coq.MSets.MSetRBT MakeRaw Ok class
R17533:17535 Coq.MSets.MSetRBT MakeRaw add def
R17537:17537 Coq.MSets.MSetRBT <> x:319 var
R17539:17539 Coq.MSets.MSetRBT <> s:318 var
R17558:17560 Coq.MSets.MSetRBT MakeRaw add def
prf 17618:17627 MakeRaw lbalS_spec
binder 17629:17629 <> l:321
binder 17631:17631 <> x:322
binder 17633:17633 <> r:323
binder 17635:17635 <> y:324
R17660:17664 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17641:17643 Coq.MSets.MSetRBT MakeRaw InT ind
R17645:17645 Coq.MSets.MSetRBT <> y:324 var
R17648:17652 Coq.MSets.MSetRBT MakeRaw lbalS def
R17654:17654 Coq.MSets.MSetRBT <> l:321 var
R17656:17656 Coq.MSets.MSetRBT <> x:322 var
R17658:17658 Coq.MSets.MSetRBT <> r:323 var
R17673:17676 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17665:17668 Coq.MSets.MSetRBT X eq defax
R17672:17672 Coq.MSets.MSetRBT <> x:322 var
R17670:17670 Coq.MSets.MSetRBT <> y:324 var
R17684:17687 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17677:17679 Coq.MSets.MSetRBT MakeRaw InT ind
R17681:17681 Coq.MSets.MSetRBT <> y:324 var
R17683:17683 Coq.MSets.MSetRBT <> l:321 var
R17688:17690 Coq.MSets.MSetRBT MakeRaw InT ind
R17692:17692 Coq.MSets.MSetRBT <> y:324 var
R17694:17694 Coq.MSets.MSetRBT <> r:323 var
R17710:17720 Coq.MSets.MSetRBT MakeRaw lbalS_match thm
R17710:17720 Coq.MSets.MSetRBT MakeRaw lbalS_match thm
inst 17936:17943 MakeRaw lbalS_ok
binder 17945:17945 <> l:325
binder 17947:17947 <> x:326
binder 17949:17949 <> r:327
R17963:17964 Coq.MSets.MSetRBT MakeRaw Ok class
R17966:17966 Coq.MSets.MSetRBT <> l:325 var
binder 17963:17966 <> H:328
R17969:17970 Coq.MSets.MSetRBT MakeRaw Ok class
R17972:17972 Coq.MSets.MSetRBT <> r:327 var
binder 17969:17972 <> H0:329
R17975:17981 Coq.MSets.MSetRBT MakeRaw lt_tree def
R17983:17983 Coq.MSets.MSetRBT <> x:326 var
R17985:17985 Coq.MSets.MSetRBT <> l:325 var
binder 17975:17985 <> lt_tree0:330
R17988:17994 Coq.MSets.MSetRBT MakeRaw gt_tree def
R17996:17996 Coq.MSets.MSetRBT <> x:326 var
R17998:17998 Coq.MSets.MSetRBT <> r:327 var
binder 17988:17998 <> gt_tree0:331
R18002:18003 Coq.MSets.MSetRBT MakeRaw Ok class
R18006:18010 Coq.MSets.MSetRBT MakeRaw lbalS def
R18012:18012 Coq.MSets.MSetRBT <> l:325 var
R18014:18014 Coq.MSets.MSetRBT <> x:326 var
R18016:18016 Coq.MSets.MSetRBT <> r:327 var
R18033:18043 Coq.MSets.MSetRBT MakeRaw lbalS_match thm
R18033:18043 Coq.MSets.MSetRBT MakeRaw lbalS_match thm
R18169:18176 Coq.MSets.MSetRBT MakeRaw rbal'_ok inst
R18169:18176 Coq.MSets.MSetRBT MakeRaw rbal'_ok inst
R18323:18330 Coq.MSets.MSetRBT MakeRaw rbal'_ok inst
R18323:18330 Coq.MSets.MSetRBT MakeRaw rbal'_ok inst
prf 18349:18358 MakeRaw rbalS_spec
binder 18360:18360 <> l:332
binder 18362:18362 <> x:333
binder 18364:18364 <> r:334
binder 18366:18366 <> y:335
R18391:18395 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18372:18374 Coq.MSets.MSetRBT MakeRaw InT ind
R18376:18376 Coq.MSets.MSetRBT <> y:335 var
R18379:18383 Coq.MSets.MSetRBT MakeRaw rbalS def
R18385:18385 Coq.MSets.MSetRBT <> l:332 var
R18387:18387 Coq.MSets.MSetRBT <> x:333 var
R18389:18389 Coq.MSets.MSetRBT <> r:334 var
R18404:18407 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R18396:18399 Coq.MSets.MSetRBT X eq defax
R18403:18403 Coq.MSets.MSetRBT <> x:333 var
R18401:18401 Coq.MSets.MSetRBT <> y:335 var
R18415:18418 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R18408:18410 Coq.MSets.MSetRBT MakeRaw InT ind
R18412:18412 Coq.MSets.MSetRBT <> y:335 var
R18414:18414 Coq.MSets.MSetRBT <> l:332 var
R18419:18421 Coq.MSets.MSetRBT MakeRaw InT ind
R18423:18423 Coq.MSets.MSetRBT <> y:335 var
R18425:18425 Coq.MSets.MSetRBT <> r:334 var
R18441:18451 Coq.MSets.MSetRBT MakeRaw rbalS_match thm
R18441:18451 Coq.MSets.MSetRBT MakeRaw rbalS_match thm
inst 18681:18688 MakeRaw rbalS_ok
binder 18690:18690 <> l:336
binder 18692:18692 <> x:337
binder 18694:18694 <> r:338
R18708:18709 Coq.MSets.MSetRBT MakeRaw Ok class
R18711:18711 Coq.MSets.MSetRBT <> l:336 var
binder 18708:18711 <> H:339
R18714:18715 Coq.MSets.MSetRBT MakeRaw Ok class
R18717:18717 Coq.MSets.MSetRBT <> r:338 var
binder 18714:18717 <> H0:340
R18720:18726 Coq.MSets.MSetRBT MakeRaw lt_tree def
R18728:18728 Coq.MSets.MSetRBT <> x:337 var
R18730:18730 Coq.MSets.MSetRBT <> l:336 var
binder 18720:18730 <> lt_tree0:341
R18733:18739 Coq.MSets.MSetRBT MakeRaw gt_tree def
R18741:18741 Coq.MSets.MSetRBT <> x:337 var
R18743:18743 Coq.MSets.MSetRBT <> r:338 var
binder 18733:18743 <> gt_tree0:342
R18747:18748 Coq.MSets.MSetRBT MakeRaw Ok class
R18751:18755 Coq.MSets.MSetRBT MakeRaw rbalS def
R18757:18757 Coq.MSets.MSetRBT <> l:336 var
R18759:18759 Coq.MSets.MSetRBT <> x:337 var
R18761:18761 Coq.MSets.MSetRBT <> r:338 var
R18778:18788 Coq.MSets.MSetRBT MakeRaw rbalS_match thm
R18778:18788 Coq.MSets.MSetRBT MakeRaw rbalS_match thm
R18914:18920 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R18914:18920 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R19058:19064 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R19058:19064 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R19097:19106 Coq.MSets.MSetRBT MakeRaw lbalS_spec thm
R19108:19117 Coq.MSets.MSetRBT MakeRaw rbalS_spec thm
R19378:19383 Coq.MSets.MSetRBT MakeRaw notred def
R19386:19387 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R19435:19436 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R19528:19533 Coq.MSets.MSetRBT MakeRaw append def
R19528:19533 Coq.MSets.MSetRBT MakeRaw append def
R19546:19547 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R19550:19555 Coq.MSets.MSetRBT MakeRaw append def
R19558:19559 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R19600:19605 Coq.MSets.MSetRBT MakeRaw notred def
R19608:19609 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R19657:19658 Coq.MSets.MSetRBT MakeRaw Bk abbrev
prf 19758:19772 MakeRaw append_rr_match
binder 19774:19775 <> ll:343
binder 19777:19778 <> lx:344
binder 19780:19781 <> lr:345
binder 19783:19784 <> rl:346
binder 19786:19787 <> rx:347
binder 19789:19790 <> rr:348
R19795:19799 Coq.MSets.MSetRBT MakeRaw rspec ind
R19904:19909 Coq.MSets.MSetRBT MakeRaw append def
R19912:19913 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R19915:19916 Coq.MSets.MSetRBT <> ll:343 var
R19918:19919 Coq.MSets.MSetRBT <> lx:344 var
R19921:19922 Coq.MSets.MSetRBT <> lr:345 var
R19926:19927 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R19929:19930 Coq.MSets.MSetRBT <> rl:346 var
R19932:19933 Coq.MSets.MSetRBT <> rx:347 var
R19935:19936 Coq.MSets.MSetRBT <> rr:348 var
R19887:19892 Coq.MSets.MSetRBT MakeRaw append def
R19894:19895 Coq.MSets.MSetRBT <> lr:345 var
R19897:19898 Coq.MSets.MSetRBT <> rl:346 var
binder 19856:19856 <> t:349
R19861:19862 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R19864:19865 Coq.MSets.MSetRBT <> ll:343 var
R19867:19868 Coq.MSets.MSetRBT <> lx:344 var
R19871:19872 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R19874:19874 Coq.MSets.MSetRBT <> t:349 var
R19876:19877 Coq.MSets.MSetRBT <> rx:347 var
R19879:19880 Coq.MSets.MSetRBT <> rr:348 var
binder 19808:19808 <> a:350
binder 19810:19810 <> x:351
binder 19812:19812 <> b:352
R19817:19818 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R19821:19822 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R19824:19825 Coq.MSets.MSetRBT <> ll:343 var
R19827:19828 Coq.MSets.MSetRBT <> lx:344 var
R19830:19830 Coq.MSets.MSetRBT <> a:350 var
R19833:19833 Coq.MSets.MSetRBT <> x:351 var
R19836:19837 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R19839:19839 Coq.MSets.MSetRBT <> b:352 var
R19841:19842 Coq.MSets.MSetRBT <> rx:347 var
R19844:19845 Coq.MSets.MSetRBT <> rr:348 var
R19956:19961 Coq.MSets.MSetRBT MakeRaw rmatch thm
R19956:19961 Coq.MSets.MSetRBT MakeRaw rmatch thm
prf 19982:19996 MakeRaw append_bb_match
binder 19998:19999 <> ll:353
binder 20001:20002 <> lx:354
binder 20004:20005 <> lr:355
binder 20007:20008 <> rl:356
binder 20010:20011 <> rx:357
binder 20013:20014 <> rr:358
R20019:20023 Coq.MSets.MSetRBT MakeRaw rspec ind
R20131:20136 Coq.MSets.MSetRBT MakeRaw append def
R20139:20140 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R20142:20143 Coq.MSets.MSetRBT <> ll:353 var
R20145:20146 Coq.MSets.MSetRBT <> lx:354 var
R20148:20149 Coq.MSets.MSetRBT <> lr:355 var
R20153:20154 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R20156:20157 Coq.MSets.MSetRBT <> rl:356 var
R20159:20160 Coq.MSets.MSetRBT <> rx:357 var
R20162:20163 Coq.MSets.MSetRBT <> rr:358 var
R20114:20119 Coq.MSets.MSetRBT MakeRaw append def
R20121:20122 Coq.MSets.MSetRBT <> lr:355 var
R20124:20125 Coq.MSets.MSetRBT <> rl:356 var
binder 20080:20080 <> t:359
R20085:20089 Coq.MSets.MSetRBT MakeRaw lbalS def
R20091:20092 Coq.MSets.MSetRBT <> ll:353 var
R20094:20095 Coq.MSets.MSetRBT <> lx:354 var
R20098:20099 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R20101:20101 Coq.MSets.MSetRBT <> t:359 var
R20103:20104 Coq.MSets.MSetRBT <> rx:357 var
R20106:20107 Coq.MSets.MSetRBT <> rr:358 var
binder 20032:20032 <> a:360
binder 20034:20034 <> x:361
binder 20036:20036 <> b:362
R20041:20042 Coq.MSets.MSetRBT MakeRaw Rd abbrev
R20045:20046 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R20048:20049 Coq.MSets.MSetRBT <> ll:353 var
R20051:20052 Coq.MSets.MSetRBT <> lx:354 var
R20054:20054 Coq.MSets.MSetRBT <> a:360 var
R20057:20057 Coq.MSets.MSetRBT <> x:361 var
R20060:20061 Coq.MSets.MSetRBT MakeRaw Bk abbrev
R20063:20063 Coq.MSets.MSetRBT <> b:362 var
R20065:20066 Coq.MSets.MSetRBT <> rx:357 var
R20068:20069 Coq.MSets.MSetRBT <> rr:358 var
R20183:20188 Coq.MSets.MSetRBT MakeRaw rmatch thm
R20183:20188 Coq.MSets.MSetRBT MakeRaw rmatch thm
prf 20210:20220 MakeRaw append_spec
binder 20222:20222 <> l:363
binder 20224:20224 <> r:364
binder 20226:20226 <> x:365
R20249:20253 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20231:20233 Coq.MSets.MSetRBT MakeRaw InT ind
R20235:20235 Coq.MSets.MSetRBT <> x:365 var
R20238:20243 Coq.MSets.MSetRBT MakeRaw append def
R20245:20245 Coq.MSets.MSetRBT <> l:363 var
R20247:20247 Coq.MSets.MSetRBT <> r:364 var
R20261:20264 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R20254:20256 Coq.MSets.MSetRBT MakeRaw InT ind
R20258:20258 Coq.MSets.MSetRBT <> x:365 var
R20260:20260 Coq.MSets.MSetRBT <> l:363 var
R20265:20267 Coq.MSets.MSetRBT MakeRaw InT ind
R20269:20269 Coq.MSets.MSetRBT <> x:365 var
R20271:20271 Coq.MSets.MSetRBT <> r:364 var
R20369:20383 Coq.MSets.MSetRBT MakeRaw append_rr_match thm
R20369:20383 Coq.MSets.MSetRBT MakeRaw append_rr_match thm
R20480:20494 Coq.MSets.MSetRBT MakeRaw append_bb_match thm
R20480:20494 Coq.MSets.MSetRBT MakeRaw append_bb_match thm
R20573:20583 Coq.MSets.MSetRBT MakeRaw append_spec thm
prf 20598:20606 MakeRaw append_ok
binder 20617:20617 <> x:366
binder 20619:20619 <> l:367
binder 20621:20621 <> r:368
R20625:20626 Coq.MSets.MSetRBT MakeRaw Ok class
R20628:20628 Coq.MSets.MSetRBT <> l:367 var
binder 20625:20628 <> H:369
R20631:20632 Coq.MSets.MSetRBT MakeRaw Ok class
R20634:20634 Coq.MSets.MSetRBT <> r:368 var
binder 20631:20634 <> H0:370
R20650:20653 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20639:20645 Coq.MSets.MSetRBT MakeRaw lt_tree def
R20647:20647 Coq.MSets.MSetRBT <> x:366 var
R20649:20649 Coq.MSets.MSetRBT <> l:367 var
R20665:20668 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20654:20660 Coq.MSets.MSetRBT MakeRaw gt_tree def
R20662:20662 Coq.MSets.MSetRBT <> x:366 var
R20664:20664 Coq.MSets.MSetRBT <> r:368 var
R20669:20670 Coq.MSets.MSetRBT MakeRaw Ok class
R20673:20678 Coq.MSets.MSetRBT MakeRaw append def
R20680:20680 Coq.MSets.MSetRBT <> l:367 var
R20682:20682 Coq.MSets.MSetRBT <> r:368 var
R20821:20822 Coq.MSets.MSetRBT MakeRaw Ok class
R20825:20830 Coq.MSets.MSetRBT MakeRaw append def
R20821:20822 Coq.MSets.MSetRBT MakeRaw Ok class
R20825:20830 Coq.MSets.MSetRBT MakeRaw append def
R20887:20890 Coq.MSets.MSetRBT X lt defax
R20887:20890 Coq.MSets.MSetRBT X lt defax
R20942:20948 Coq.MSets.MSetRBT MakeRaw gt_tree def
R20954:20959 Coq.MSets.MSetRBT MakeRaw append def
R20942:20948 Coq.MSets.MSetRBT MakeRaw gt_tree def
R20954:20959 Coq.MSets.MSetRBT MakeRaw append def
R21050:21056 Coq.MSets.MSetRBT MakeRaw lt_tree def
R21062:21067 Coq.MSets.MSetRBT MakeRaw append def
R21050:21056 Coq.MSets.MSetRBT MakeRaw lt_tree def
R21062:21067 Coq.MSets.MSetRBT MakeRaw append def
R21166:21180 Coq.MSets.MSetRBT MakeRaw append_rr_match thm
R21166:21180 Coq.MSets.MSetRBT MakeRaw append_rr_match thm
R21404:21405 Coq.MSets.MSetRBT MakeRaw Ok class
R21408:21413 Coq.MSets.MSetRBT MakeRaw append def
R21404:21405 Coq.MSets.MSetRBT MakeRaw Ok class
R21408:21413 Coq.MSets.MSetRBT MakeRaw append def
R21470:21473 Coq.MSets.MSetRBT X lt defax
R21470:21473 Coq.MSets.MSetRBT X lt defax
R21525:21531 Coq.MSets.MSetRBT MakeRaw gt_tree def
R21537:21542 Coq.MSets.MSetRBT MakeRaw append def
R21525:21531 Coq.MSets.MSetRBT MakeRaw gt_tree def
R21537:21542 Coq.MSets.MSetRBT MakeRaw append def
R21633:21639 Coq.MSets.MSetRBT MakeRaw lt_tree def
R21645:21650 Coq.MSets.MSetRBT MakeRaw append def
R21633:21639 Coq.MSets.MSetRBT MakeRaw lt_tree def
R21645:21650 Coq.MSets.MSetRBT MakeRaw append def
R21749:21763 Coq.MSets.MSetRBT MakeRaw append_bb_match thm
R21749:21763 Coq.MSets.MSetRBT MakeRaw append_bb_match thm
R21788:21795 Coq.MSets.MSetRBT MakeRaw lbalS_ok inst
R21788:21795 Coq.MSets.MSetRBT MakeRaw lbalS_ok inst
prf 21834:21841 MakeRaw del_spec
binder 21852:21852 <> s:371
binder 21854:21854 <> x:372
binder 21856:21856 <> y:373
R21860:21861 Coq.MSets.MSetRBT MakeRaw Ok class
R21863:21863 Coq.MSets.MSetRBT <> s:371 var
binder 21860:21863 <> H:374
R21883:21887 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21868:21870 Coq.MSets.MSetRBT MakeRaw InT ind
R21872:21872 Coq.MSets.MSetRBT <> y:373 var
R21875:21877 Coq.MSets.MSetRBT MakeRaw del def
R21879:21879 Coq.MSets.MSetRBT <> x:372 var
R21881:21881 Coq.MSets.MSetRBT <> s:371 var
R21895:21898 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21888:21890 Coq.MSets.MSetRBT MakeRaw InT ind
R21892:21892 Coq.MSets.MSetRBT <> y:373 var
R21894:21894 Coq.MSets.MSetRBT <> s:371 var
R21899:21899 Coq.Init.Logic <> ::type_scope:'~'_x not
R21900:21903 Coq.MSets.MSetRBT X eq defax
R21907:21907 Coq.MSets.MSetRBT <> x:372 var
R21905:21905 Coq.MSets.MSetRBT <> y:373 var
R21980:21983 Coq.MSets.MSetRBT X lt defax
R21980:21983 Coq.MSets.MSetRBT X lt defax
R22018:22021 Coq.MSets.MSetRBT X lt defax
R22018:22021 Coq.MSets.MSetRBT X lt defax
R22261:22268 Coq.MSets.MSetRBT MakeRaw del_spec thm
inst 22296:22301 MakeRaw del_ok
binder 22303:22303 <> s:375
binder 22305:22305 <> x:376
R22309:22310 Coq.MSets.MSetRBT MakeRaw Ok class
R22312:22312 Coq.MSets.MSetRBT <> s:375 var
binder 22309:22312 <> H:377
R22317:22318 Coq.MSets.MSetRBT MakeRaw Ok class
R22321:22323 Coq.MSets.MSetRBT MakeRaw del def
R22325:22325 Coq.MSets.MSetRBT <> x:376 var
R22327:22327 Coq.MSets.MSetRBT <> s:375 var
R22370:22378 Coq.MSets.MSetRBT MakeRaw append_ok thm
R22370:22378 Coq.MSets.MSetRBT MakeRaw append_ok thm
R22398:22404 Coq.MSets.MSetRBT MakeRaw lt_tree def
R22410:22412 Coq.MSets.MSetRBT MakeRaw del def
R22398:22404 Coq.MSets.MSetRBT MakeRaw lt_tree def
R22410:22412 Coq.MSets.MSetRBT MakeRaw del def
R22525:22531 Coq.MSets.MSetRBT MakeRaw gt_tree def
R22537:22539 Coq.MSets.MSetRBT MakeRaw del def
R22525:22531 Coq.MSets.MSetRBT MakeRaw gt_tree def
R22537:22539 Coq.MSets.MSetRBT MakeRaw del def
prf 22654:22664 MakeRaw remove_spec
binder 22666:22666 <> s:378
binder 22668:22668 <> x:379
binder 22670:22670 <> y:380
R22674:22675 Coq.MSets.MSetRBT MakeRaw Ok class
R22677:22677 Coq.MSets.MSetRBT <> s:378 var
binder 22674:22677 <> H:381
R22701:22705 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R22683:22685 Coq.MSets.MSetRBT MakeRaw InT ind
R22687:22687 Coq.MSets.MSetRBT <> y:380 var
R22690:22695 Coq.MSets.MSetRBT MakeRaw remove def
R22697:22697 Coq.MSets.MSetRBT <> x:379 var
R22699:22699 Coq.MSets.MSetRBT <> s:378 var
R22713:22716 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R22706:22708 Coq.MSets.MSetRBT MakeRaw InT ind
R22710:22710 Coq.MSets.MSetRBT <> y:380 var
R22712:22712 Coq.MSets.MSetRBT <> s:378 var
R22717:22717 Coq.Init.Logic <> ::type_scope:'~'_x not
R22718:22721 Coq.MSets.MSetRBT X eq defax
R22725:22725 Coq.MSets.MSetRBT <> x:379 var
R22723:22723 Coq.MSets.MSetRBT <> y:380 var
R22742:22747 Coq.MSets.MSetRBT MakeRaw remove def
R22789:22799 Coq.MSets.MSetRBT MakeRaw remove_spec thm
inst 22827:22835 MakeRaw remove_ok
binder 22837:22837 <> s:382
binder 22839:22839 <> x:383
R22843:22844 Coq.MSets.MSetRBT MakeRaw Ok class
R22846:22846 Coq.MSets.MSetRBT <> s:382 var
binder 22843:22846 <> H:384
R22851:22852 Coq.MSets.MSetRBT MakeRaw Ok class
R22855:22860 Coq.MSets.MSetRBT MakeRaw remove def
R22862:22862 Coq.MSets.MSetRBT <> x:383 var
R22864:22864 Coq.MSets.MSetRBT <> s:382 var
R22882:22887 Coq.MSets.MSetRBT MakeRaw remove def
prf 22951:22961 MakeRaw delmin_spec
binder 22963:22963 <> l:385
binder 22965:22965 <> y:386
binder 22967:22967 <> r:387
binder 22969:22969 <> c:388
binder 22971:22971 <> x:389
binder 22973:22974 <> s':390
R22982:22983 Coq.MSets.MSetRBT MakeRaw Ok class
R22986:22989 Coq.MSets.MSetRBT MakeRaw Node constr
R22991:22991 Coq.MSets.MSetRBT <> c:388 var
R22993:22993 Coq.MSets.MSetRBT <> l:385 var
R22995:22995 Coq.MSets.MSetRBT <> y:386 var
R22997:22997 Coq.MSets.MSetRBT <> r:387 var
binder 22978:22978 <> O:391
R23025:23030 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23016:23018 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23004:23009 Coq.MSets.MSetRBT MakeRaw delmin def
R23011:23011 Coq.MSets.MSetRBT <> l:385 var
R23013:23013 Coq.MSets.MSetRBT <> y:386 var
R23015:23015 Coq.MSets.MSetRBT <> r:387 var
R23019:23019 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23021:23021 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23024:23024 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23020:23020 Coq.MSets.MSetRBT <> x:389 var
R23022:23023 Coq.MSets.MSetRBT <> s':390 var
R23062:23065 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R23053:23055 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23031:23037 Coq.MSets.MSetRBT MakeRaw min_elt def
R23040:23043 Coq.MSets.MSetRBT MakeRaw Node constr
R23045:23045 Coq.MSets.MSetRBT <> c:388 var
R23047:23047 Coq.MSets.MSetRBT <> l:385 var
R23049:23049 Coq.MSets.MSetRBT <> y:386 var
R23051:23051 Coq.MSets.MSetRBT <> r:387 var
R23056:23059 Coq.Init.Datatypes <> Some constr
R23061:23061 Coq.MSets.MSetRBT <> x:389 var
R23086:23088 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23066:23068 Coq.MSets.MSetRBT MakeRaw del def
R23070:23070 Coq.MSets.MSetRBT <> x:389 var
R23073:23076 Coq.MSets.MSetRBT MakeRaw Node constr
R23078:23078 Coq.MSets.MSetRBT <> c:388 var
R23080:23080 Coq.MSets.MSetRBT <> l:385 var
R23082:23082 Coq.MSets.MSetRBT <> y:386 var
R23084:23084 Coq.MSets.MSetRBT <> r:387 var
R23089:23090 Coq.MSets.MSetRBT <> s':390 var
R23233:23247 Coq.MSets.MSetRBT MakeRaw compare_refl thm
R23233:23247 Coq.MSets.MSetRBT MakeRaw compare_refl thm
R23233:23247 Coq.MSets.MSetRBT MakeRaw compare_refl thm
R23326:23331 Coq.MSets.MSetRBT MakeRaw delmin def
R23410:23413 Coq.MSets.MSetRBT MakeRaw Node constr
R23410:23413 Coq.MSets.MSetRBT MakeRaw Node constr
R23579:23582 Coq.MSets.MSetRBT X lt defax
R23579:23582 Coq.MSets.MSetRBT X lt defax
R23631:23633 Coq.MSets.MSetRBT MakeRaw InT ind
R23653:23665 Coq.MSets.MSetRBT MakeRaw min_elt_spec1 thm
R23631:23633 Coq.MSets.MSetRBT MakeRaw InT ind
R23653:23665 Coq.MSets.MSetRBT MakeRaw min_elt_spec1 thm
R23693:23706 Coq.MSets.MSetRBT X compare_spec prfax
R23693:23706 Coq.MSets.MSetRBT X compare_spec prfax
prf 23781:23796 MakeRaw remove_min_spec1
binder 23798:23798 <> s:392
binder 23800:23800 <> x:393
binder 23802:23803 <> s':394
R23807:23808 Coq.MSets.MSetRBT MakeRaw Ok class
R23810:23810 Coq.MSets.MSetRBT <> s:392 var
binder 23807:23810 <> H:395
R23841:23846 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23827:23829 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23815:23824 Coq.MSets.MSetRBT MakeRaw remove_min def
R23826:23826 Coq.MSets.MSetRBT <> s:392 var
R23830:23833 Coq.Init.Datatypes <> Some constr
R23835:23835 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23837:23837 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23840:23840 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23836:23836 Coq.MSets.MSetRBT <> x:393 var
R23838:23839 Coq.MSets.MSetRBT <> s':394 var
R23865:23868 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R23856:23858 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23847:23853 Coq.MSets.MSetRBT MakeRaw min_elt def
R23855:23855 Coq.MSets.MSetRBT <> s:392 var
R23859:23862 Coq.Init.Datatypes <> Some constr
R23864:23864 Coq.MSets.MSetRBT <> x:393 var
R23879:23881 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23869:23874 Coq.MSets.MSetRBT MakeRaw remove def
R23876:23876 Coq.MSets.MSetRBT <> x:393 var
R23878:23878 Coq.MSets.MSetRBT <> s:392 var
R23882:23883 Coq.MSets.MSetRBT <> s':394 var
R23901:23910 Coq.MSets.MSetRBT MakeRaw remove_min def
R23963:23973 Coq.MSets.MSetRBT MakeRaw delmin_spec thm
R23963:23973 Coq.MSets.MSetRBT MakeRaw delmin_spec thm
R23995:24000 Coq.MSets.MSetRBT MakeRaw delmin def
R24069:24074 Coq.MSets.MSetRBT MakeRaw remove def
R24080:24083 Coq.MSets.MSetRBT MakeRaw Node constr
R24069:24074 Coq.MSets.MSetRBT MakeRaw remove def
R24080:24083 Coq.MSets.MSetRBT MakeRaw Node constr
prf 24134:24149 MakeRaw remove_min_spec2
binder 24151:24151 <> s:396
R24174:24177 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24167:24169 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24155:24164 Coq.MSets.MSetRBT MakeRaw remove_min def
R24166:24166 Coq.MSets.MSetRBT <> s:396 var
R24170:24173 Coq.Init.Datatypes <> None constr
R24178:24182 Coq.MSets.MSetRBT MakeRaw Empty def
R24184:24184 Coq.MSets.MSetRBT <> s:396 var
R24202:24211 Coq.MSets.MSetRBT MakeRaw remove_min def
R24266:24271 Coq.MSets.MSetRBT MakeRaw delmin def
prf 24286:24298 MakeRaw remove_min_ok
R24303:24303 Coq.MSets.MSetRBT MakeRaw t def
binder 24301:24301 <> s:397
R24308:24309 Coq.MSets.MSetRBT MakeRaw Ok class
R24311:24311 Coq.MSets.MSetRBT <> s:397 var
binder 24308:24311 <> H:398
R24322:24331 Coq.MSets.MSetRBT MakeRaw remove_min def
R24333:24333 Coq.MSets.MSetRBT <> s:397 var
R24343:24346 Coq.Init.Datatypes <> Some constr
R24348:24348 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24350:24350 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24353:24353 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24358:24359 Coq.MSets.MSetRBT MakeRaw Ok class
R24367:24370 Coq.Init.Datatypes <> None constr
R24375:24378 Coq.Init.Logic <> True ind
R24406:24421 Coq.MSets.MSetRBT MakeRaw remove_min_spec1 thm
R24406:24421 Coq.MSets.MSetRBT MakeRaw remove_min_spec1 thm
R24437:24446 Coq.MSets.MSetRBT MakeRaw remove_min def
abbrev 24559:24564 MakeRaw ifpred
R24584:24587 Coq.Init.Peano <> pred abbrev
def 24616:24632 MakeRaw treeify_invariant
binder 24634:24637 <> size:399
R24642:24650 Coq.MSets.MSetRBT MakeRaw treeify_t abbrev
binder 24640:24640 <> f:400
binder 24664:24666 <> acc:401
R24688:24692 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24674:24677 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R24670:24673 Coq.MSets.MSetRBT <> size:399 var
R24678:24683 Coq.Init.Datatypes <> length def
R24685:24687 Coq.MSets.MSetRBT <> acc:401 var
R24709:24709 Coq.MSets.MSetRBT <> f:400 var
R24711:24713 Coq.MSets.MSetRBT <> acc:401 var
binder 24698:24698 <> t:402
binder 24700:24703 <> acc':403
R24736:24739 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R24729:24731 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24719:24726 Coq.MSets.MSetRBT MakeRaw cardinal def
R24728:24728 Coq.MSets.MSetRBT <> t:402 var
R24732:24735 Coq.MSets.MSetRBT <> size:399 var
R24743:24745 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24740:24742 Coq.MSets.MSetRBT <> acc:401 var
R24756:24759 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R24746:24753 Coq.MSets.MSetRBT MakeRaw elements def
R24755:24755 Coq.MSets.MSetRBT <> t:402 var
R24760:24763 Coq.MSets.MSetRBT <> acc':403 var
prf 24773:24789 MakeRaw treeify_zero_spec
R24793:24809 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24813:24824 Coq.MSets.MSetRBT MakeRaw treeify_zero def
prf 24867:24882 MakeRaw treeify_one_spec
R24886:24902 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24906:24916 Coq.MSets.MSetRBT MakeRaw treeify_one def
prf 24982:24998 MakeRaw treeify_cont_spec
binder 25000:25000 <> f:404
binder 25002:25002 <> g:405
binder 25004:25008 <> size1:406
binder 25010:25014 <> size2:407
binder 25016:25019 <> size:408
R25049:25053 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25024:25040 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R25042:25046 Coq.MSets.MSetRBT <> size1:406 var
R25048:25048 Coq.MSets.MSetRBT <> f:404 var
R25079:25083 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25054:25070 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R25072:25076 Coq.MSets.MSetRBT <> size2:407 var
R25078:25078 Coq.MSets.MSetRBT <> g:405 var
R25108:25112 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25088:25090 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25084:25087 Coq.MSets.MSetRBT <> size:408 var
R25091:25091 Coq.Init.Datatypes <> S constr
R25099:25101 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R25094:25098 Coq.MSets.MSetRBT <> size1:406 var
R25102:25106 Coq.MSets.MSetRBT <> size2:407 var
R25113:25129 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R25131:25134 Coq.MSets.MSetRBT <> size:408 var
R25137:25148 Coq.MSets.MSetRBT MakeRaw treeify_cont def
R25150:25150 Coq.MSets.MSetRBT <> f:404 var
R25152:25152 Coq.MSets.MSetRBT <> g:405 var
R25195:25206 Coq.MSets.MSetRBT MakeRaw treeify_cont def
R25340:25353 Coq.Arith.PeanoNat Nat add_succ_r thm
R25340:25353 Coq.Arith.PeanoNat Nat add_succ_r thm
R25340:25353 Coq.Arith.PeanoNat Nat add_succ_r thm
R25362:25373 Coq.Arith.PeanoNat Nat le_add_r thm
R25362:25373 Coq.Arith.PeanoNat Nat le_add_r thm
R25437:25446 Coq.Arith.PeanoNat Nat lt_nge thm
R25437:25446 Coq.Arith.PeanoNat Nat lt_nge thm
R25468:25476 Coq.Lists.List <> app_nil_r thm
R25482:25498 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25468:25476 Coq.Lists.List <> app_nil_r thm
R25468:25476 Coq.Lists.List <> app_nil_r thm
R25482:25498 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25482:25498 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25512:25527 Coq.Arith.PeanoNat Nat succ_le_mono thm
R25530:25537 Coq.MSets.MSetRBT MakeRaw cardinal def
R25545:25556 Coq.Arith.PeanoNat Nat le_add_r thm
R25512:25527 Coq.Arith.PeanoNat Nat succ_le_mono thm
R25530:25537 Coq.MSets.MSetRBT MakeRaw cardinal def
R25545:25556 Coq.Arith.PeanoNat Nat le_add_r thm
R25678:25687 Coq.Lists.List <> app_length thm
R25693:25709 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25678:25687 Coq.Lists.List <> app_length thm
R25678:25687 Coq.Lists.List <> app_length thm
R25693:25709 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25693:25709 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25731:25744 Coq.Arith.PeanoNat Nat add_succ_r thm
R25750:25765 Coq.Arith.PeanoNat Nat succ_le_mono thm
R25731:25744 Coq.Arith.PeanoNat Nat add_succ_r thm
R25731:25744 Coq.Arith.PeanoNat Nat add_succ_r thm
R25750:25765 Coq.Arith.PeanoNat Nat succ_le_mono thm
R25750:25765 Coq.Arith.PeanoNat Nat succ_le_mono thm
R25778:25794 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R25778:25794 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R25808:25820 Coq.MSets.MSetRBT MakeRaw elements_node thm
R25823:25829 Coq.Lists.List <> app_ass abbrev
R25808:25820 Coq.MSets.MSetRBT MakeRaw elements_node thm
R25808:25820 Coq.MSets.MSetRBT MakeRaw elements_node thm
R25823:25829 Coq.Lists.List <> app_ass abbrev
R25823:25829 Coq.Lists.List <> app_ass abbrev
prf 25855:25870 MakeRaw treeify_aux_spec
binder 25872:25872 <> n:409
R25877:25880 Coq.Init.Datatypes <> bool ind
binder 25875:25875 <> p:410
R25886:25902 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R25905:25910 Coq.MSets.MSetRBT MakeRaw ifpred abbrev
R25915:25924 Coq.PArith.BinPos Pos to_nat def
R25926:25926 Coq.MSets.MSetRBT <> n:409 var
R25915:25924 Coq.PArith.BinPos Pos to_nat def
R25926:25926 Coq.MSets.MSetRBT <> n:409 var
R25912:25912 Coq.MSets.MSetRBT <> p:410 var
R25931:25941 Coq.MSets.MSetRBT MakeRaw treeify_aux def
R25943:25943 Coq.MSets.MSetRBT <> p:410 var
R25945:25945 Coq.MSets.MSetRBT <> n:409 var
R26030:26046 Coq.MSets.MSetRBT MakeRaw treeify_cont_spec thm
R26062:26066 Coq.Init.Datatypes <> false constr
R26030:26046 Coq.MSets.MSetRBT MakeRaw treeify_cont_spec thm
R26062:26066 Coq.Init.Datatypes <> false constr
R26101:26114 Coq.PArith.Pnat Pos2Nat inj_xI thm
R26101:26114 Coq.PArith.Pnat Pos2Nat inj_xI thm
R26101:26114 Coq.PArith.Pnat Pos2Nat inj_xI thm
R26133:26146 Coq.PArith.Pnat Pos2Nat is_pos thm
R26133:26146 Coq.PArith.Pnat Pos2Nat is_pos thm
R26158:26171 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R26158:26171 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R26217:26227 Coq.Arith.PeanoNat Nat add_0_r thm
R26217:26227 Coq.Arith.PeanoNat Nat add_0_r thm
R26217:26227 Coq.Arith.PeanoNat Nat add_0_r thm
R26217:26227 Coq.Arith.PeanoNat Nat add_0_r thm
R26217:26227 Coq.Arith.PeanoNat Nat add_0_r thm
R26257:26270 Coq.Arith.PeanoNat Nat add_succ_r thm
R26273:26285 Coq.Arith.PeanoNat Nat succ_pred thm
R26257:26270 Coq.Arith.PeanoNat Nat add_succ_r thm
R26257:26270 Coq.Arith.PeanoNat Nat add_succ_r thm
R26273:26285 Coq.Arith.PeanoNat Nat succ_pred thm
R26273:26285 Coq.Arith.PeanoNat Nat succ_pred thm
R26273:26285 Coq.Arith.PeanoNat Nat succ_pred thm
R26307:26323 Coq.MSets.MSetRBT MakeRaw treeify_cont_spec thm
R26355:26358 Coq.Init.Datatypes <> true constr
R26307:26323 Coq.MSets.MSetRBT MakeRaw treeify_cont_spec thm
R26355:26358 Coq.Init.Datatypes <> true constr
R26377:26390 Coq.PArith.Pnat Pos2Nat inj_xO thm
R26377:26390 Coq.PArith.Pnat Pos2Nat inj_xO thm
R26377:26390 Coq.PArith.Pnat Pos2Nat inj_xO thm
R26409:26422 Coq.PArith.Pnat Pos2Nat is_pos thm
R26409:26422 Coq.PArith.Pnat Pos2Nat is_pos thm
R26434:26447 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R26434:26447 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R26469:26482 Coq.Arith.PeanoNat Nat add_succ_r thm
R26485:26497 Coq.Arith.PeanoNat Nat succ_pred thm
R26469:26482 Coq.Arith.PeanoNat Nat add_succ_r thm
R26469:26482 Coq.Arith.PeanoNat Nat add_succ_r thm
R26485:26497 Coq.Arith.PeanoNat Nat succ_pred thm
R26485:26497 Coq.Arith.PeanoNat Nat succ_pred thm
R26549:26559 Coq.Arith.PeanoNat Nat add_0_r thm
R26549:26559 Coq.Arith.PeanoNat Nat add_0_r thm
R26549:26559 Coq.Arith.PeanoNat Nat add_0_r thm
R26549:26559 Coq.Arith.PeanoNat Nat add_0_r thm
R26549:26559 Coq.Arith.PeanoNat Nat add_0_r thm
R26594:26607 Coq.Arith.PeanoNat Nat add_pred_l thm
R26594:26607 Coq.Arith.PeanoNat Nat add_pred_l thm
R26633:26649 Coq.MSets.MSetRBT MakeRaw treeify_zero_spec thm
R26659:26674 Coq.MSets.MSetRBT MakeRaw treeify_one_spec thm
R26633:26649 Coq.MSets.MSetRBT MakeRaw treeify_zero_spec thm
R26659:26674 Coq.MSets.MSetRBT MakeRaw treeify_one_spec thm
prf 26691:26706 MakeRaw plength_aux_spec
binder 26708:26708 <> l:411
binder 26710:26710 <> p:412
R26744:26746 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26716:26725 Coq.PArith.BinPos Pos to_nat def
R26728:26738 Coq.MSets.MSetRBT MakeRaw plength_aux def
R26740:26740 Coq.MSets.MSetRBT <> l:411 var
R26742:26742 Coq.MSets.MSetRBT <> p:412 var
R26755:26757 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R26747:26752 Coq.Init.Datatypes <> length def
R26754:26754 Coq.MSets.MSetRBT <> l:411 var
R26758:26767 Coq.PArith.BinPos Pos to_nat def
R26769:26769 Coq.MSets.MSetRBT <> p:412 var
R26857:26872 Coq.PArith.Pnat Pos2Nat inj_succ thm
R26875:26888 Coq.Arith.PeanoNat Nat add_succ_r thm
R26857:26872 Coq.PArith.Pnat Pos2Nat inj_succ thm
R26857:26872 Coq.PArith.Pnat Pos2Nat inj_succ thm
R26875:26888 Coq.Arith.PeanoNat Nat add_succ_r thm
R26875:26888 Coq.Arith.PeanoNat Nat add_succ_r thm
prf 26903:26914 MakeRaw plength_spec
binder 26916:26916 <> l:413
R26942:26944 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26920:26929 Coq.PArith.BinPos Pos to_nat def
R26932:26938 Coq.MSets.MSetRBT MakeRaw plength def
R26940:26940 Coq.MSets.MSetRBT <> l:413 var
R26945:26945 Coq.Init.Datatypes <> S constr
R26948:26953 Coq.Init.Datatypes <> length def
R26955:26955 Coq.MSets.MSetRBT <> l:413 var
R26974:26980 Coq.MSets.MSetRBT MakeRaw plength def
R26991:27006 Coq.MSets.MSetRBT MakeRaw plength_aux_spec thm
R26991:27006 Coq.MSets.MSetRBT MakeRaw plength_aux_spec thm
R26991:27006 Coq.MSets.MSetRBT MakeRaw plength_aux_spec thm
R27015:27025 Coq.Arith.PeanoNat Nat add_1_r thm
R27015:27025 Coq.Arith.PeanoNat Nat add_1_r thm
prf 27040:27055 MakeRaw treeify_elements
binder 27057:27057 <> l:414
R27081:27083 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27061:27068 Coq.MSets.MSetRBT MakeRaw elements def
R27071:27077 Coq.MSets.MSetRBT MakeRaw treeify def
R27079:27079 Coq.MSets.MSetRBT <> l:414 var
R27084:27084 Coq.MSets.MSetRBT <> l:414 var
R27108:27123 Coq.MSets.MSetRBT MakeRaw treeify_aux_spec thm
R27126:27132 Coq.MSets.MSetRBT MakeRaw plength def
R27137:27140 Coq.Init.Datatypes <> true constr
R27108:27123 Coq.MSets.MSetRBT MakeRaw treeify_aux_spec thm
R27126:27132 Coq.MSets.MSetRBT MakeRaw plength def
R27137:27140 Coq.Init.Datatypes <> true constr
R27154:27160 Coq.MSets.MSetRBT MakeRaw treeify def
R27172:27182 Coq.MSets.MSetRBT MakeRaw treeify_aux def
R27245:27256 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R27245:27256 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R27245:27256 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R27279:27290 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R27293:27302 Coq.Lists.List <> app_length thm
R27308:27324 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R27279:27290 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R27279:27290 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R27293:27302 Coq.Lists.List <> app_length thm
R27293:27302 Coq.Lists.List <> app_length thm
R27308:27324 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R27308:27324 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R27362:27370 Coq.Lists.List <> app_nil_r thm
R27362:27370 Coq.Lists.List <> app_nil_r thm
R27362:27370 Coq.Lists.List <> app_nil_r thm
R27413:27426 Coq.Arith.PeanoNat Nat add_succ_r thm
R27429:27440 Coq.Arith.PeanoNat Nat add_comm thm
R27413:27426 Coq.Arith.PeanoNat Nat add_succ_r thm
R27413:27426 Coq.Arith.PeanoNat Nat add_succ_r thm
R27429:27440 Coq.Arith.PeanoNat Nat add_comm thm
R27429:27440 Coq.Arith.PeanoNat Nat add_comm thm
R27452:27469 Coq.Arith.PeanoNat Nat succ_add_discr thm
R27452:27469 Coq.Arith.PeanoNat Nat succ_add_discr thm
prf 27484:27495 MakeRaw treeify_spec
binder 27497:27497 <> x:415
binder 27499:27499 <> l:416
R27520:27524 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R27503:27505 Coq.MSets.MSetRBT MakeRaw InT ind
R27507:27507 Coq.MSets.MSetRBT <> x:415 var
R27510:27516 Coq.MSets.MSetRBT MakeRaw treeify def
R27518:27518 Coq.MSets.MSetRBT <> l:416 var
R27525:27527 Coq.Lists.SetoidList <> InA ind
R27536:27536 Coq.MSets.MSetRBT <> l:416 var
R27534:27534 Coq.MSets.MSetRBT <> x:415 var
R27529:27532 Coq.MSets.MSetRBT X eq defax
R27570:27583 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R27586:27601 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27570:27583 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R27570:27583 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R27586:27601 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27586:27601 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
prf 27616:27625 MakeRaw treeify_ok
binder 27627:27627 <> l:417
R27642:27645 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27631:27634 Coq.Sorting.Sorted <> sort abbrev
R27641:27641 Coq.MSets.MSetRBT <> l:417 var
R27636:27639 Coq.MSets.MSetRBT X lt defax
R27646:27647 Coq.MSets.MSetRBT MakeRaw Ok class
R27650:27656 Coq.MSets.MSetRBT MakeRaw treeify def
R27658:27658 Coq.MSets.MSetRBT <> l:417 var
R27684:27699 Coq.MSets.MSetRBT MakeRaw elements_sort_ok thm
R27684:27699 Coq.MSets.MSetRBT MakeRaw elements_sort_ok thm
R27710:27725 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27710:27725 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27710:27725 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
abbrev 27851:27860 MakeRaw filter_app
R27865:27879 Coq.Lists.List <> filter_app thm
prf 27889:27907 MakeRaw filter_aux_elements
binder 27909:27909 <> s:418
binder 27911:27911 <> f:419
binder 27913:27915 <> acc:420
R27938:27940 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27920:27929 Coq.MSets.MSetRBT MakeRaw filter_aux def
R27931:27931 Coq.MSets.MSetRBT <> f:419 var
R27933:27933 Coq.MSets.MSetRBT <> s:418 var
R27935:27937 Coq.MSets.MSetRBT <> acc:420 var
R27967:27970 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27941:27951 Coq.Lists.List <> filter def
R27956:27963 Coq.MSets.MSetRBT MakeRaw elements def
R27965:27965 Coq.MSets.MSetRBT <> s:418 var
R27953:27953 Coq.MSets.MSetRBT <> f:419 var
R27971:27973 Coq.MSets.MSetRBT <> acc:420 var
R28063:28075 Coq.MSets.MSetRBT MakeRaw elements_node thm
R28078:28092 Coq.Lists.List <> filter_app thm
R28063:28075 Coq.MSets.MSetRBT MakeRaw elements_node thm
R28063:28075 Coq.MSets.MSetRBT MakeRaw elements_node thm
R28078:28092 Coq.Lists.List <> filter_app thm
R28078:28092 Coq.Lists.List <> filter_app thm
R28141:28147 Coq.Lists.List <> app_ass abbrev
R28141:28147 Coq.Lists.List <> app_ass abbrev
R28141:28147 Coq.Lists.List <> app_ass abbrev
R28141:28147 Coq.Lists.List <> app_ass abbrev
R28141:28147 Coq.Lists.List <> app_ass abbrev
prf 28162:28176 MakeRaw filter_elements
binder 28178:28178 <> s:421
binder 28180:28180 <> f:422
R28206:28208 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28185:28192 Coq.MSets.MSetRBT MakeRaw elements def
R28195:28200 Coq.MSets.MSetRBT MakeRaw filter def
R28202:28202 Coq.MSets.MSetRBT <> f:422 var
R28204:28204 Coq.MSets.MSetRBT <> s:421 var
R28209:28219 Coq.Lists.List <> filter def
R28224:28231 Coq.MSets.MSetRBT MakeRaw elements def
R28233:28233 Coq.MSets.MSetRBT <> s:421 var
R28221:28221 Coq.MSets.MSetRBT <> f:422 var
R28252:28257 Coq.MSets.MSetRBT MakeRaw filter def
R28273:28288 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R28291:28309 Coq.MSets.MSetRBT MakeRaw filter_aux_elements thm
R28312:28320 Coq.Lists.List <> app_nil_r thm
R28273:28288 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R28273:28288 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R28291:28309 Coq.MSets.MSetRBT MakeRaw filter_aux_elements thm
R28291:28309 Coq.MSets.MSetRBT MakeRaw filter_aux_elements thm
R28312:28320 Coq.Lists.List <> app_nil_r thm
R28312:28320 Coq.Lists.List <> app_nil_r thm
prf 28335:28345 MakeRaw filter_spec
binder 28347:28347 <> s:423
binder 28349:28349 <> x:424
binder 28351:28351 <> f:425
R28382:28387 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28432:28432 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28356:28361 Coq.Classes.Morphisms <> Proper class
R28381:28381 Coq.MSets.MSetRBT <> f:425 var
R28368:28370 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R28364:28367 Coq.MSets.MSetRBT X eq defax
R28371:28378 Coq.Init.Logic <> eq ind
R28406:28410 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R28388:28390 Coq.MSets.MSetRBT MakeRaw InT ind
R28392:28392 Coq.MSets.MSetRBT <> x:424 var
R28395:28400 Coq.MSets.MSetRBT MakeRaw filter def
R28402:28402 Coq.MSets.MSetRBT <> f:425 var
R28404:28404 Coq.MSets.MSetRBT <> s:423 var
R28418:28421 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R28411:28413 Coq.MSets.MSetRBT MakeRaw InT ind
R28415:28415 Coq.MSets.MSetRBT <> x:424 var
R28417:28417 Coq.MSets.MSetRBT <> s:423 var
R28425:28427 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28422:28422 Coq.MSets.MSetRBT <> f:425 var
R28424:28424 Coq.MSets.MSetRBT <> x:424 var
R28428:28431 Coq.Init.Datatypes <> true constr
R28466:28479 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28482:28496 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28499:28508 Coq.Lists.SetoidList <> filter_InA thm
R28511:28524 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28466:28479 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28466:28479 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28482:28496 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28482:28496 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28499:28508 Coq.Lists.SetoidList <> filter_InA thm
R28499:28508 Coq.Lists.SetoidList <> filter_InA thm
R28499:28508 Coq.Lists.SetoidList <> filter_InA thm
R28511:28524 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28511:28524 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
inst 28567:28575 MakeRaw filter_ok
binder 28577:28577 <> s:426
binder 28579:28579 <> f:427
R28583:28584 Coq.MSets.MSetRBT MakeRaw Ok class
R28586:28586 Coq.MSets.MSetRBT <> s:426 var
binder 28583:28586 <> H:428
R28591:28592 Coq.MSets.MSetRBT MakeRaw Ok class
R28595:28600 Coq.MSets.MSetRBT MakeRaw filter def
R28602:28602 Coq.MSets.MSetRBT <> f:427 var
R28604:28604 Coq.MSets.MSetRBT <> s:426 var
R28622:28637 Coq.MSets.MSetRBT MakeRaw elements_sort_ok thm
R28622:28637 Coq.MSets.MSetRBT MakeRaw elements_sort_ok thm
R28649:28663 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28649:28663 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28649:28663 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28690:28693 Coq.MSets.MSetRBT X eq defax
R28673:28683 Coq.Lists.SetoidList <> filter_sort thm
R28690:28693 Coq.MSets.MSetRBT X eq defax
R28673:28683 Coq.Lists.SetoidList <> filter_sort thm
prf 28738:28755 MakeRaw partition_aux_spec
binder 28757:28757 <> s:429
binder 28759:28759 <> f:430
binder 28761:28764 <> acc1:431
binder 28766:28769 <> acc2:432
R28801:28805 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28774:28786 Coq.MSets.MSetRBT MakeRaw partition_aux def
R28788:28788 Coq.MSets.MSetRBT <> f:430 var
R28790:28790 Coq.MSets.MSetRBT <> s:429 var
R28792:28795 Coq.MSets.MSetRBT <> acc1:431 var
R28797:28800 Coq.MSets.MSetRBT <> acc2:432 var
R28806:28806 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28826:28827 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28867:28867 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28807:28816 Coq.MSets.MSetRBT MakeRaw filter_aux def
R28818:28818 Coq.MSets.MSetRBT <> f:430 var
R28820:28820 Coq.MSets.MSetRBT <> s:429 var
R28822:28825 Coq.MSets.MSetRBT <> acc1:431 var
R28828:28837 Coq.MSets.MSetRBT MakeRaw filter_aux def
binder 28844:28844 <> x:433
R28849:28852 Coq.Init.Datatypes <> negb def
R28855:28855 Coq.MSets.MSetRBT <> f:430 var
R28857:28857 Coq.MSets.MSetRBT <> x:433 var
R28861:28861 Coq.MSets.MSetRBT <> s:429 var
R28863:28866 Coq.MSets.MSetRBT <> acc2:432 var
prf 29031:29044 MakeRaw partition_spec
binder 29046:29046 <> s:434
binder 29048:29048 <> f:435
R29066:29068 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29053:29061 Coq.MSets.MSetRBT MakeRaw partition def
R29063:29063 Coq.MSets.MSetRBT <> f:435 var
R29065:29065 Coq.MSets.MSetRBT <> s:434 var
R29069:29069 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29080:29081 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29112:29112 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29070:29075 Coq.MSets.MSetRBT MakeRaw filter def
R29077:29077 Coq.MSets.MSetRBT <> f:435 var
R29079:29079 Coq.MSets.MSetRBT <> s:434 var
R29082:29087 Coq.MSets.MSetRBT MakeRaw filter def
binder 29094:29094 <> x:436
R29099:29102 Coq.Init.Datatypes <> negb def
R29105:29105 Coq.MSets.MSetRBT <> f:435 var
R29107:29107 Coq.MSets.MSetRBT <> x:436 var
R29111:29111 Coq.MSets.MSetRBT <> s:434 var
R29130:29138 Coq.MSets.MSetRBT MakeRaw partition def
R29141:29146 Coq.MSets.MSetRBT MakeRaw filter def
R29161:29178 Coq.MSets.MSetRBT MakeRaw partition_aux_spec thm
R29161:29178 Coq.MSets.MSetRBT MakeRaw partition_aux_spec thm
R29161:29178 Coq.MSets.MSetRBT MakeRaw partition_aux_spec thm
prf 29193:29207 MakeRaw partition_spec1
binder 29209:29209 <> s:437
binder 29211:29211 <> f:438
R29242:29246 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29216:29221 Coq.Classes.Morphisms <> Proper class
R29241:29241 Coq.MSets.MSetRBT <> f:438 var
R29228:29230 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R29224:29227 Coq.MSets.MSetRBT X eq defax
R29231:29238 Coq.Init.Logic <> eq ind
R29247:29251 Coq.MSets.MSetRBT MakeRaw Equal def
R29254:29256 Coq.Init.Datatypes <> fst def
R29259:29267 Coq.MSets.MSetRBT MakeRaw partition def
R29269:29269 Coq.MSets.MSetRBT <> f:438 var
R29271:29271 Coq.MSets.MSetRBT <> s:437 var
R29276:29281 Coq.MSets.MSetRBT MakeRaw filter def
R29283:29283 Coq.MSets.MSetRBT <> f:438 var
R29285:29285 Coq.MSets.MSetRBT <> s:437 var
R29308:29321 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29308:29321 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29308:29321 Coq.MSets.MSetRBT MakeRaw partition_spec thm
prf 29336:29350 MakeRaw partition_spec2
binder 29352:29352 <> s:439
binder 29354:29354 <> f:440
R29385:29389 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29359:29364 Coq.Classes.Morphisms <> Proper class
R29384:29384 Coq.MSets.MSetRBT <> f:440 var
R29371:29373 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R29367:29370 Coq.MSets.MSetRBT X eq defax
R29374:29381 Coq.Init.Logic <> eq ind
R29390:29394 Coq.MSets.MSetRBT MakeRaw Equal def
R29397:29399 Coq.Init.Datatypes <> snd def
R29402:29410 Coq.MSets.MSetRBT MakeRaw partition def
R29412:29412 Coq.MSets.MSetRBT <> f:440 var
R29414:29414 Coq.MSets.MSetRBT <> s:439 var
R29419:29424 Coq.MSets.MSetRBT MakeRaw filter def
binder 29431:29431 <> x:441
R29436:29439 Coq.Init.Datatypes <> negb def
R29442:29442 Coq.MSets.MSetRBT <> f:440 var
R29444:29444 Coq.MSets.MSetRBT <> x:441 var
R29448:29448 Coq.MSets.MSetRBT <> s:439 var
R29471:29484 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29471:29484 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29471:29484 Coq.MSets.MSetRBT MakeRaw partition_spec thm
inst 29512:29524 MakeRaw partition_ok1
binder 29526:29526 <> s:442
binder 29528:29528 <> f:443
R29532:29533 Coq.MSets.MSetRBT MakeRaw Ok class
R29535:29535 Coq.MSets.MSetRBT <> s:442 var
binder 29532:29535 <> H:444
R29540:29541 Coq.MSets.MSetRBT MakeRaw Ok class
R29544:29546 Coq.Init.Datatypes <> fst def
R29549:29557 Coq.MSets.MSetRBT MakeRaw partition def
R29559:29559 Coq.MSets.MSetRBT <> f:443 var
R29561:29561 Coq.MSets.MSetRBT <> s:442 var
R29581:29594 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29607:29615 Coq.MSets.MSetRBT MakeRaw filter_ok inst
R29581:29594 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29581:29594 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29607:29615 Coq.MSets.MSetRBT MakeRaw filter_ok inst
inst 29643:29655 MakeRaw partition_ok2
binder 29657:29657 <> s:445
binder 29659:29659 <> f:446
R29663:29664 Coq.MSets.MSetRBT MakeRaw Ok class
R29666:29666 Coq.MSets.MSetRBT <> s:445 var
binder 29663:29666 <> H:447
R29671:29672 Coq.MSets.MSetRBT MakeRaw Ok class
R29675:29677 Coq.Init.Datatypes <> snd def
R29680:29688 Coq.MSets.MSetRBT MakeRaw partition def
R29690:29690 Coq.MSets.MSetRBT <> f:446 var
R29692:29692 Coq.MSets.MSetRBT <> s:445 var
R29712:29725 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29738:29746 Coq.MSets.MSetRBT MakeRaw filter_ok inst
R29712:29725 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29712:29725 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29738:29746 Coq.MSets.MSetRBT MakeRaw filter_ok inst
R29846:29856 Coq.Lists.SetoidList <> InA_app_iff thm
R29860:29867 Coq.Lists.SetoidList <> InA_cons thm
R29871:29877 Coq.Lists.SetoidList <> InA_nil thm
R29881:29887 Coq.Lists.SetoidList <> InA_rev thm
rec 29912:29914 MakeRaw INV
proj 29939:29947 MakeRaw l1_sorted
proj 29972:29980 MakeRaw l2_sorted
proj 30005:30014 MakeRaw acc_sorted
proj 30034:30042 MakeRaw l1_lt_acc
proj 30096:30104 MakeRaw l2_lt_acc
binder 29916:29917 <> l1:448
binder 29919:29920 <> l2:449
binder 29922:29924 <> acc:450
R29951:29954 Coq.Sorting.Sorted <> sort abbrev
R29962:29964 Coq.Lists.List <> rev def
R29966:29967 Coq.MSets.MSetRBT <> l1:448 var
R29956:29959 Coq.MSets.MSetRBT X lt defax
R29984:29987 Coq.Sorting.Sorted <> sort abbrev
R29995:29997 Coq.Lists.List <> rev def
R29999:30000 Coq.MSets.MSetRBT <> l2:449 var
R29989:29992 Coq.MSets.MSetRBT X lt defax
R30018:30021 Coq.Sorting.Sorted <> sort abbrev
R30028:30030 Coq.MSets.MSetRBT <> acc:450 var
R30023:30026 Coq.MSets.MSetRBT X lt defax
binder 30044:30044 <> x:455
binder 30046:30046 <> y:456
R30063:30066 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30050:30052 Coq.Lists.SetoidList <> InA ind
R30061:30062 Coq.MSets.MSetRBT <> l1:448 var
R30059:30059 Coq.MSets.MSetRBT <> x:455 var
R30054:30057 Coq.MSets.MSetRBT X eq defax
R30081:30084 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30067:30069 Coq.Lists.SetoidList <> InA ind
R30078:30080 Coq.MSets.MSetRBT <> acc:450 var
R30076:30076 Coq.MSets.MSetRBT <> y:456 var
R30071:30074 Coq.MSets.MSetRBT X eq defax
R30085:30088 Coq.MSets.MSetRBT X lt defax
R30092:30092 Coq.MSets.MSetRBT <> y:456 var
R30090:30090 Coq.MSets.MSetRBT <> x:455 var
binder 30106:30106 <> x:458
binder 30108:30108 <> y:459
R30125:30128 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30112:30114 Coq.Lists.SetoidList <> InA ind
R30123:30124 Coq.MSets.MSetRBT <> l2:449 var
R30121:30121 Coq.MSets.MSetRBT <> x:458 var
R30116:30119 Coq.MSets.MSetRBT X eq defax
R30143:30146 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30129:30131 Coq.Lists.SetoidList <> InA ind
R30140:30142 Coq.MSets.MSetRBT <> acc:450 var
R30138:30138 Coq.MSets.MSetRBT <> y:459 var
R30133:30136 Coq.MSets.MSetRBT X eq defax
R30147:30150 Coq.MSets.MSetRBT X lt defax
R30154:30154 Coq.MSets.MSetRBT <> y:459 var
R30152:30152 Coq.MSets.MSetRBT <> x:458 var
prf 30223:30230 MakeRaw INV_init
binder 30232:30233 <> s1:461
binder 30235:30236 <> s2:462
R30240:30241 Coq.MSets.MSetRBT MakeRaw Ok class
R30243:30244 Coq.MSets.MSetRBT <> s1:461 var
binder 30240:30244 <> H:463
R30247:30248 Coq.MSets.MSetRBT MakeRaw Ok class
R30250:30251 Coq.MSets.MSetRBT <> s2:462 var
binder 30247:30251 <> H0:464
R30257:30259 Coq.MSets.MSetRBT MakeRaw INV rec
R30262:30273 Coq.MSets.MSetRBT MakeRaw rev_elements def
R30275:30276 Coq.MSets.MSetRBT <> s1:461 var
R30280:30291 Coq.MSets.MSetRBT MakeRaw rev_elements def
R30293:30294 Coq.MSets.MSetRBT <> s2:462 var
R30297:30299 Coq.Init.Datatypes <> nil constr
R30319:30334 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R30319:30334 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R30319:30334 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R30319:30334 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R30319:30334 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R30354:30367 Coq.Lists.List <> rev_involutive thm
R30354:30367 Coq.Lists.List <> rev_involutive thm
R30354:30367 Coq.Lists.List <> rev_involutive thm
R30354:30367 Coq.Lists.List <> rev_involutive thm
R30354:30367 Coq.Lists.List <> rev_involutive thm
R30354:30367 Coq.Lists.List <> rev_involutive thm
R30354:30367 Coq.Lists.List <> rev_involutive thm
R30354:30367 Coq.Lists.List <> rev_involutive thm
R30354:30367 Coq.Lists.List <> rev_involutive thm
R30354:30367 Coq.Lists.List <> rev_involutive thm
R30354:30367 Coq.Lists.List <> rev_involutive thm
R30354:30367 Coq.Lists.List <> rev_involutive thm
R30354:30367 Coq.Lists.List <> rev_involutive thm
prf 30405:30411 MakeRaw INV_sym
binder 30413:30414 <> l1:465
binder 30416:30417 <> l2:466
binder 30419:30421 <> acc:467
R30438:30441 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30425:30427 Coq.MSets.MSetRBT MakeRaw INV rec
R30429:30430 Coq.MSets.MSetRBT <> l1:465 var
R30432:30433 Coq.MSets.MSetRBT <> l2:466 var
R30435:30437 Coq.MSets.MSetRBT <> acc:467 var
R30442:30444 Coq.MSets.MSetRBT MakeRaw INV rec
R30446:30447 Coq.MSets.MSetRBT <> l2:466 var
R30449:30450 Coq.MSets.MSetRBT <> l1:465 var
R30452:30454 Coq.MSets.MSetRBT <> acc:467 var
prf 30500:30507 MakeRaw INV_drop
binder 30509:30510 <> x1:468
binder 30512:30513 <> l1:469
binder 30515:30516 <> l2:470
binder 30518:30520 <> acc:471
R30547:30550 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30526:30528 Coq.MSets.MSetRBT MakeRaw INV rec
R30533:30536 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30531:30532 Coq.MSets.MSetRBT <> x1:468 var
R30537:30538 Coq.MSets.MSetRBT <> l1:469 var
R30541:30542 Coq.MSets.MSetRBT <> l2:470 var
R30544:30546 Coq.MSets.MSetRBT <> acc:471 var
R30551:30553 Coq.MSets.MSetRBT MakeRaw INV rec
R30555:30556 Coq.MSets.MSetRBT <> l1:469 var
R30558:30559 Coq.MSets.MSetRBT <> l2:470 var
R30561:30563 Coq.MSets.MSetRBT <> acc:471 var
R30628:30641 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30628:30641 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
prf 30700:30705 MakeRaw INV_eq
binder 30707:30708 <> x1:472
binder 30710:30711 <> x2:473
binder 30713:30714 <> l1:474
binder 30716:30717 <> l2:475
binder 30719:30721 <> acc:476
R30756:30759 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30727:30729 Coq.MSets.MSetRBT MakeRaw INV rec
R30734:30737 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30732:30733 Coq.MSets.MSetRBT <> x1:472 var
R30738:30739 Coq.MSets.MSetRBT <> l1:474 var
R30745:30748 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30743:30744 Coq.MSets.MSetRBT <> x2:473 var
R30749:30750 Coq.MSets.MSetRBT <> l2:475 var
R30753:30755 Coq.MSets.MSetRBT <> acc:476 var
R30770:30775 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30760:30763 Coq.MSets.MSetRBT X eq defax
R30768:30769 Coq.MSets.MSetRBT <> x2:473 var
R30765:30766 Coq.MSets.MSetRBT <> x1:472 var
R30776:30778 Coq.MSets.MSetRBT MakeRaw INV rec
R30780:30781 Coq.MSets.MSetRBT <> l1:474 var
R30783:30784 Coq.MSets.MSetRBT <> l2:475 var
R30789:30792 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30787:30788 Coq.MSets.MSetRBT <> x1:472 var
R30793:30795 Coq.MSets.MSetRBT <> acc:476 var
R30853:30866 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30853:30866 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30911:30924 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30911:30924 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R31014:31017 Coq.MSets.MSetRBT X eq defax
R31000:31007 Coq.Lists.SetoidList <> InA_InfA thm
R31014:31017 Coq.MSets.MSetRBT X eq defax
R31000:31007 Coq.Lists.SetoidList <> InA_InfA thm
prf 31213:31218 MakeRaw INV_lt
binder 31220:31221 <> x1:477
binder 31223:31224 <> x2:478
binder 31226:31227 <> l1:479
binder 31229:31230 <> l2:480
binder 31232:31234 <> acc:481
R31269:31272 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31240:31242 Coq.MSets.MSetRBT MakeRaw INV rec
R31247:31250 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R31245:31246 Coq.MSets.MSetRBT <> x1:477 var
R31251:31252 Coq.MSets.MSetRBT <> l1:479 var
R31258:31261 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R31256:31257 Coq.MSets.MSetRBT <> x2:478 var
R31262:31263 Coq.MSets.MSetRBT <> l2:480 var
R31266:31268 Coq.MSets.MSetRBT <> acc:481 var
R31283:31288 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31273:31276 Coq.MSets.MSetRBT X lt defax
R31281:31282 Coq.MSets.MSetRBT <> x2:478 var
R31278:31279 Coq.MSets.MSetRBT <> x1:477 var
R31289:31291 Coq.MSets.MSetRBT MakeRaw INV rec
R31296:31299 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R31294:31295 Coq.MSets.MSetRBT <> x1:477 var
R31300:31301 Coq.MSets.MSetRBT <> l1:479 var
R31304:31305 Coq.MSets.MSetRBT <> l2:480 var
R31310:31313 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R31308:31309 Coq.MSets.MSetRBT <> x2:478 var
R31314:31316 Coq.MSets.MSetRBT <> acc:481 var
R31374:31387 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R31374:31387 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R31432:31445 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R31432:31445 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R31535:31538 Coq.MSets.MSetRBT X eq defax
R31521:31528 Coq.Lists.SetoidList <> InA_InfA thm
R31535:31538 Coq.MSets.MSetRBT X eq defax
R31521:31528 Coq.Lists.SetoidList <> InA_InfA thm
prf 31803:31809 MakeRaw INV_rev
binder 31811:31812 <> l1:482
binder 31814:31815 <> l2:483
binder 31817:31819 <> acc:484
R31837:31840 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31824:31826 Coq.MSets.MSetRBT MakeRaw INV rec
R31828:31829 Coq.MSets.MSetRBT <> l1:482 var
R31831:31832 Coq.MSets.MSetRBT <> l2:483 var
R31834:31836 Coq.MSets.MSetRBT <> acc:484 var
R31841:31846 Coq.Sorting.Sorted <> Sorted ind
R31854:31863 Coq.Lists.List <> rev_append def
R31868:31870 Coq.MSets.MSetRBT <> acc:484 var
R31865:31866 Coq.MSets.MSetRBT <> l1:482 var
R31848:31851 Coq.MSets.MSetRBT X lt defax
R31898:31911 Coq.Lists.List <> rev_append_rev thm
R31898:31911 Coq.Lists.List <> rev_append_rev thm
R31898:31911 Coq.Lists.List <> rev_append_rev thm
R31936:31939 Coq.MSets.MSetRBT X eq defax
R31921:31929 Coq.Lists.SetoidList <> SortA_app thm
R31936:31939 Coq.MSets.MSetRBT X eq defax
R31921:31929 Coq.Lists.SetoidList <> SortA_app thm
R31982:31990 Coq.MSets.MSetRBT MakeRaw l1_lt_acc proj
R31982:31990 Coq.MSets.MSetRBT MakeRaw l1_lt_acc proj
prf 32029:32041 MakeRaw union_list_ok
binder 32043:32044 <> l1:485
binder 32046:32047 <> l2:486
binder 32049:32051 <> acc:487
R32069:32072 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32056:32058 Coq.MSets.MSetRBT MakeRaw INV rec
R32060:32061 Coq.MSets.MSetRBT <> l1:485 var
R32063:32064 Coq.MSets.MSetRBT <> l2:486 var
R32066:32068 Coq.MSets.MSetRBT <> acc:487 var
R32073:32076 Coq.Sorting.Sorted <> sort abbrev
R32084:32093 Coq.MSets.MSetRBT MakeRaw union_list def
R32095:32096 Coq.MSets.MSetRBT <> l1:485 var
R32098:32099 Coq.MSets.MSetRBT <> l2:486 var
R32101:32103 Coq.MSets.MSetRBT <> acc:487 var
R32078:32081 Coq.MSets.MSetRBT X lt defax
R32233:32239 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R32242:32248 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32233:32239 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R32242:32248 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32268:32274 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R32268:32274 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R32299:32312 Coq.MSets.MSetRBT X compare_spec prfax
R32299:32312 Coq.MSets.MSetRBT X compare_spec prfax
R32347:32352 Coq.MSets.MSetRBT MakeRaw INV_eq thm
R32347:32352 Coq.MSets.MSetRBT MakeRaw INV_eq thm
R32381:32382 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R32381:32382 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R32397:32402 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R32397:32402 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R32435:32441 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32444:32449 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R32435:32441 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32444:32449 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R32469:32475 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32469:32475 Coq.MSets.MSetRBT MakeRaw INV_sym thm
inst 32503:32517 MakeRaw linear_union_ok
binder 32519:32520 <> s1:488
binder 32522:32523 <> s2:489
R32527:32528 Coq.MSets.MSetRBT MakeRaw Ok class
R32530:32531 Coq.MSets.MSetRBT <> s1:488 var
binder 32527:32531 <> H:490
R32534:32535 Coq.MSets.MSetRBT MakeRaw Ok class
R32537:32538 Coq.MSets.MSetRBT <> s2:489 var
binder 32534:32538 <> H0:491
R32544:32545 Coq.MSets.MSetRBT MakeRaw Ok class
R32548:32559 Coq.MSets.MSetRBT MakeRaw linear_union def
R32561:32562 Coq.MSets.MSetRBT <> s1:488 var
R32564:32565 Coq.MSets.MSetRBT <> s2:489 var
R32584:32595 Coq.MSets.MSetRBT MakeRaw linear_union def
R32608:32617 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R32620:32632 Coq.MSets.MSetRBT MakeRaw union_list_ok thm
R32635:32642 Coq.MSets.MSetRBT MakeRaw INV_init thm
R32608:32617 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R32620:32632 Coq.MSets.MSetRBT MakeRaw union_list_ok thm
R32635:32642 Coq.MSets.MSetRBT MakeRaw INV_init thm
inst 32670:32680 MakeRaw fold_add_ok
binder 32682:32683 <> s1:492
binder 32685:32686 <> s2:493
R32690:32691 Coq.MSets.MSetRBT MakeRaw Ok class
R32693:32694 Coq.MSets.MSetRBT <> s1:492 var
binder 32690:32694 <> H:494
R32697:32698 Coq.MSets.MSetRBT MakeRaw Ok class
R32700:32701 Coq.MSets.MSetRBT <> s2:493 var
binder 32697:32701 <> H0:495
R32707:32708 Coq.MSets.MSetRBT MakeRaw Ok class
R32711:32714 Coq.MSets.MSetRBT MakeRaw fold def
R32723:32724 Coq.MSets.MSetRBT <> s2:493 var
R32720:32721 Coq.MSets.MSetRBT <> s1:492 var
R32716:32718 Coq.MSets.MSetRBT MakeRaw add def
R32744:32752 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R32758:32776 Coq.Lists.List <> fold_left_rev_right thm
R32744:32752 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R32744:32752 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R32758:32776 Coq.Lists.List <> fold_left_rev_right thm
R32758:32776 Coq.Lists.List <> fold_left_rev_right thm
R32787:32789 Coq.MSets.MSetRBT MakeRaw elt def
R32809:32811 Coq.Lists.List <> rev def
R32814:32821 Coq.MSets.MSetRBT MakeRaw elements def
R32843:32846 Coq.Program.Basics <> flip def
R32809:32811 Coq.Lists.List <> rev def
R32814:32821 Coq.MSets.MSetRBT MakeRaw elements def
inst 32888:32895 MakeRaw union_ok
binder 32897:32898 <> s1:496
binder 32900:32901 <> s2:497
R32905:32906 Coq.MSets.MSetRBT MakeRaw Ok class
R32908:32909 Coq.MSets.MSetRBT <> s1:496 var
binder 32905:32909 <> H:498
R32912:32913 Coq.MSets.MSetRBT MakeRaw Ok class
R32915:32916 Coq.MSets.MSetRBT <> s2:497 var
binder 32912:32916 <> H0:499
R32921:32922 Coq.MSets.MSetRBT MakeRaw Ok class
R32925:32929 Coq.MSets.MSetRBT MakeRaw union def
R32931:32932 Coq.MSets.MSetRBT <> s1:496 var
R32934:32935 Coq.MSets.MSetRBT <> s2:497 var
R32954:32958 Coq.MSets.MSetRBT MakeRaw union def
R32970:32983 Coq.MSets.MSetRBT MakeRaw compare_height def
prf 33007:33021 MakeRaw union_list_spec
binder 33023:33023 <> x:500
binder 33025:33026 <> l1:501
binder 33028:33029 <> l2:502
binder 33031:33033 <> acc:503
R33071:33077 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R33038:33040 Coq.Lists.SetoidList <> InA ind
R33050:33059 Coq.MSets.MSetRBT MakeRaw union_list def
R33061:33062 Coq.MSets.MSetRBT <> l1:501 var
R33064:33065 Coq.MSets.MSetRBT <> l2:502 var
R33067:33069 Coq.MSets.MSetRBT <> acc:503 var
R33047:33047 Coq.MSets.MSetRBT <> x:500 var
R33042:33045 Coq.MSets.MSetRBT X eq defax
R33091:33094 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R33078:33080 Coq.Lists.SetoidList <> InA ind
R33089:33090 Coq.MSets.MSetRBT <> l1:501 var
R33087:33087 Coq.MSets.MSetRBT <> x:500 var
R33082:33085 Coq.MSets.MSetRBT X eq defax
R33108:33111 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R33095:33097 Coq.Lists.SetoidList <> InA ind
R33106:33107 Coq.MSets.MSetRBT <> l2:502 var
R33104:33104 Coq.MSets.MSetRBT <> x:500 var
R33099:33102 Coq.MSets.MSetRBT X eq defax
R33112:33114 Coq.Lists.SetoidList <> InA ind
R33123:33125 Coq.MSets.MSetRBT <> acc:503 var
R33121:33121 Coq.MSets.MSetRBT <> x:500 var
R33116:33119 Coq.MSets.MSetRBT X eq defax
R33215:33228 Coq.Lists.List <> rev_append_rev thm
R33215:33228 Coq.Lists.List <> rev_append_rev thm
R33215:33228 Coq.Lists.List <> rev_append_rev thm
R33308:33321 Coq.Lists.List <> rev_append_rev thm
R33308:33321 Coq.Lists.List <> rev_append_rev thm
R33308:33321 Coq.Lists.List <> rev_append_rev thm
R33346:33359 Coq.MSets.MSetRBT X compare_spec prfax
R33346:33359 Coq.MSets.MSetRBT X compare_spec prfax
R33392:33399 Coq.Lists.SetoidList <> InA_cons thm
R33392:33399 Coq.Lists.SetoidList <> InA_cons thm
R33392:33399 Coq.Lists.SetoidList <> InA_cons thm
R33392:33399 Coq.Lists.SetoidList <> InA_cons thm
R33392:33399 Coq.Lists.SetoidList <> InA_cons thm
R33392:33399 Coq.Lists.SetoidList <> InA_cons thm
R33435:33436 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R33445:33452 Coq.Lists.SetoidList <> InA_cons thm
R33435:33436 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R33435:33436 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R33445:33452 Coq.Lists.SetoidList <> InA_cons thm
R33445:33452 Coq.Lists.SetoidList <> InA_cons thm
R33445:33452 Coq.Lists.SetoidList <> InA_cons thm
R33445:33452 Coq.Lists.SetoidList <> InA_cons thm
R33445:33452 Coq.Lists.SetoidList <> InA_cons thm
R33483:33490 Coq.Lists.SetoidList <> InA_cons thm
R33483:33490 Coq.Lists.SetoidList <> InA_cons thm
R33483:33490 Coq.Lists.SetoidList <> InA_cons thm
R33483:33490 Coq.Lists.SetoidList <> InA_cons thm
R33483:33490 Coq.Lists.SetoidList <> InA_cons thm
R33483:33490 Coq.Lists.SetoidList <> InA_cons thm
prf 33512:33528 MakeRaw linear_union_spec
binder 33530:33531 <> s1:504
binder 33533:33534 <> s2:505
binder 33536:33536 <> x:506
R33567:33571 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R33541:33543 Coq.MSets.MSetRBT MakeRaw InT ind
R33545:33545 Coq.MSets.MSetRBT <> x:506 var
R33548:33559 Coq.MSets.MSetRBT MakeRaw linear_union def
R33561:33562 Coq.MSets.MSetRBT <> s1:504 var
R33564:33565 Coq.MSets.MSetRBT <> s2:505 var
R33580:33583 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R33572:33574 Coq.MSets.MSetRBT MakeRaw InT ind
R33576:33576 Coq.MSets.MSetRBT <> x:506 var
R33578:33579 Coq.MSets.MSetRBT <> s1:504 var
R33584:33586 Coq.MSets.MSetRBT MakeRaw InT ind
R33588:33588 Coq.MSets.MSetRBT <> x:506 var
R33590:33591 Coq.MSets.MSetRBT <> s2:505 var
R33609:33620 Coq.MSets.MSetRBT MakeRaw linear_union def
R33632:33643 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R33646:33660 Coq.MSets.MSetRBT MakeRaw union_list_spec thm
R33664:33679 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33632:33643 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R33632:33643 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R33646:33660 Coq.MSets.MSetRBT MakeRaw union_list_spec thm
R33646:33660 Coq.MSets.MSetRBT MakeRaw union_list_spec thm
R33664:33679 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33664:33679 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33664:33679 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33664:33679 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33692:33698 Coq.Lists.SetoidList <> InA_rev thm
R33701:33707 Coq.Lists.SetoidList <> InA_nil thm
R33711:33724 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33692:33698 Coq.Lists.SetoidList <> InA_rev thm
R33692:33698 Coq.Lists.SetoidList <> InA_rev thm
R33692:33698 Coq.Lists.SetoidList <> InA_rev thm
R33692:33698 Coq.Lists.SetoidList <> InA_rev thm
R33701:33707 Coq.Lists.SetoidList <> InA_nil thm
R33701:33707 Coq.Lists.SetoidList <> InA_nil thm
R33711:33724 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33711:33724 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33711:33724 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33711:33724 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
prf 33758:33770 MakeRaw fold_add_spec
binder 33772:33773 <> s1:507
binder 33775:33776 <> s2:508
binder 33778:33778 <> x:509
R33805:33809 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R33783:33785 Coq.MSets.MSetRBT MakeRaw InT ind
R33787:33787 Coq.MSets.MSetRBT <> x:509 var
R33790:33793 Coq.MSets.MSetRBT MakeRaw fold def
R33802:33803 Coq.MSets.MSetRBT <> s2:508 var
R33799:33800 Coq.MSets.MSetRBT <> s1:507 var
R33795:33797 Coq.MSets.MSetRBT MakeRaw add def
R33818:33821 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R33810:33812 Coq.MSets.MSetRBT MakeRaw InT ind
R33814:33814 Coq.MSets.MSetRBT <> x:509 var
R33816:33817 Coq.MSets.MSetRBT <> s1:507 var
R33822:33824 Coq.MSets.MSetRBT MakeRaw InT ind
R33826:33826 Coq.MSets.MSetRBT <> x:509 var
R33828:33829 Coq.MSets.MSetRBT <> s2:508 var
R33848:33856 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R33862:33880 Coq.Lists.List <> fold_left_rev_right thm
R33848:33856 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R33848:33856 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R33862:33880 Coq.Lists.List <> fold_left_rev_right thm
R33862:33880 Coq.Lists.List <> fold_left_rev_right thm
R33896:33909 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33919:33925 Coq.Lists.SetoidList <> InA_rev thm
R33896:33909 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33896:33909 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33919:33925 Coq.Lists.SetoidList <> InA_rev thm
R33919:33925 Coq.Lists.SetoidList <> InA_rev thm
R33947:33949 Coq.MSets.MSetRBT MakeRaw elt def
R33969:33971 Coq.Lists.List <> rev def
R33974:33981 Coq.MSets.MSetRBT MakeRaw elements def
R33969:33971 Coq.Lists.List <> rev def
R33974:33981 Coq.MSets.MSetRBT MakeRaw elements def
R34007:34013 Coq.Lists.SetoidList <> InA_nil thm
R34007:34013 Coq.Lists.SetoidList <> InA_nil thm
R34007:34013 Coq.Lists.SetoidList <> InA_nil thm
R34033:34036 Coq.Program.Basics <> flip def
R34047:34055 Coq.MSets.MSetRBT MakeRaw add_spec' thm
R34063:34070 Coq.Lists.SetoidList <> InA_cons thm
R34047:34055 Coq.MSets.MSetRBT MakeRaw add_spec' thm
R34047:34055 Coq.MSets.MSetRBT MakeRaw add_spec' thm
R34063:34070 Coq.Lists.SetoidList <> InA_cons thm
R34063:34070 Coq.Lists.SetoidList <> InA_cons thm
prf 34092:34102 MakeRaw union_spec'
binder 34104:34105 <> s1:510
binder 34107:34108 <> s2:511
binder 34110:34110 <> x:512
R34134:34138 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R34115:34117 Coq.MSets.MSetRBT MakeRaw InT ind
R34119:34119 Coq.MSets.MSetRBT <> x:512 var
R34122:34126 Coq.MSets.MSetRBT MakeRaw union def
R34128:34129 Coq.MSets.MSetRBT <> s1:510 var
R34131:34132 Coq.MSets.MSetRBT <> s2:511 var
R34147:34150 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R34139:34141 Coq.MSets.MSetRBT MakeRaw InT ind
R34143:34143 Coq.MSets.MSetRBT <> x:512 var
R34145:34146 Coq.MSets.MSetRBT <> s1:510 var
R34151:34153 Coq.MSets.MSetRBT MakeRaw InT ind
R34155:34155 Coq.MSets.MSetRBT <> x:512 var
R34157:34158 Coq.MSets.MSetRBT <> s2:511 var
R34176:34180 Coq.MSets.MSetRBT MakeRaw union def
R34192:34205 Coq.MSets.MSetRBT MakeRaw compare_height def
R34217:34233 Coq.MSets.MSetRBT MakeRaw linear_union_spec thm
R34217:34233 Coq.MSets.MSetRBT MakeRaw linear_union_spec thm
R34245:34257 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
R34245:34257 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
R34271:34283 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
R34271:34283 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
R34271:34283 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
prf 34305:34314 MakeRaw union_spec
binder 34325:34326 <> s1:513
binder 34328:34329 <> s2:514
binder 34331:34331 <> y:515
R34335:34336 Coq.MSets.MSetRBT MakeRaw Ok class
R34338:34339 Coq.MSets.MSetRBT <> s1:513 var
binder 34335:34339 <> H:516
R34342:34343 Coq.MSets.MSetRBT MakeRaw Ok class
R34345:34346 Coq.MSets.MSetRBT <> s2:514 var
binder 34342:34346 <> H0:517
R34371:34375 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R34352:34354 Coq.MSets.MSetRBT MakeRaw InT ind
R34356:34356 Coq.MSets.MSetRBT <> y:515 var
R34359:34363 Coq.MSets.MSetRBT MakeRaw union def
R34365:34366 Coq.MSets.MSetRBT <> s1:513 var
R34368:34369 Coq.MSets.MSetRBT <> s2:514 var
R34384:34387 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R34376:34378 Coq.MSets.MSetRBT MakeRaw InT ind
R34380:34380 Coq.MSets.MSetRBT <> y:515 var
R34382:34383 Coq.MSets.MSetRBT <> s1:513 var
R34388:34390 Coq.MSets.MSetRBT MakeRaw InT ind
R34392:34392 Coq.MSets.MSetRBT <> y:515 var
R34394:34395 Coq.MSets.MSetRBT <> s2:514 var
R34421:34431 Coq.MSets.MSetRBT MakeRaw union_spec' thm
R34421:34431 Coq.MSets.MSetRBT MakeRaw union_spec' thm
prf 34463:34475 MakeRaw inter_list_ok
binder 34477:34478 <> l1:518
binder 34480:34481 <> l2:519
binder 34483:34485 <> acc:520
R34503:34506 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34490:34492 Coq.MSets.MSetRBT MakeRaw INV rec
R34494:34495 Coq.MSets.MSetRBT <> l1:518 var
R34497:34498 Coq.MSets.MSetRBT <> l2:519 var
R34500:34502 Coq.MSets.MSetRBT <> acc:520 var
R34507:34510 Coq.Sorting.Sorted <> sort abbrev
R34518:34527 Coq.MSets.MSetRBT MakeRaw inter_list def
R34529:34530 Coq.MSets.MSetRBT <> l1:518 var
R34532:34533 Coq.MSets.MSetRBT <> l2:519 var
R34535:34537 Coq.MSets.MSetRBT <> acc:520 var
R34512:34515 Coq.MSets.MSetRBT X lt defax
R34682:34695 Coq.MSets.MSetRBT X compare_spec prfax
R34682:34695 Coq.MSets.MSetRBT X compare_spec prfax
R34730:34735 Coq.MSets.MSetRBT MakeRaw INV_eq thm
R34730:34735 Coq.MSets.MSetRBT MakeRaw INV_eq thm
R34774:34780 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R34783:34790 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R34793:34799 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R34774:34780 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R34783:34790 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R34793:34799 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R34832:34839 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R34832:34839 Coq.MSets.MSetRBT MakeRaw INV_drop thm
inst 34874:34888 MakeRaw linear_inter_ok
binder 34890:34891 <> s1:521
binder 34893:34894 <> s2:522
R34898:34899 Coq.MSets.MSetRBT MakeRaw Ok class
R34901:34902 Coq.MSets.MSetRBT <> s1:521 var
binder 34898:34902 <> H:523
R34905:34906 Coq.MSets.MSetRBT MakeRaw Ok class
R34908:34909 Coq.MSets.MSetRBT <> s2:522 var
binder 34905:34909 <> H0:524
R34915:34916 Coq.MSets.MSetRBT MakeRaw Ok class
R34919:34930 Coq.MSets.MSetRBT MakeRaw linear_inter def
R34932:34933 Coq.MSets.MSetRBT <> s1:521 var
R34935:34936 Coq.MSets.MSetRBT <> s2:522 var
R34955:34966 Coq.MSets.MSetRBT MakeRaw linear_inter def
R34979:34988 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R34991:35003 Coq.MSets.MSetRBT MakeRaw inter_list_ok thm
R35006:35013 Coq.MSets.MSetRBT MakeRaw INV_init thm
R34979:34988 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R34991:35003 Coq.MSets.MSetRBT MakeRaw inter_list_ok thm
R35006:35013 Coq.MSets.MSetRBT MakeRaw INV_init thm
inst 35041:35048 MakeRaw inter_ok
binder 35050:35051 <> s1:525
binder 35053:35054 <> s2:526
R35058:35059 Coq.MSets.MSetRBT MakeRaw Ok class
R35061:35062 Coq.MSets.MSetRBT <> s1:525 var
binder 35058:35062 <> H:527
R35065:35066 Coq.MSets.MSetRBT MakeRaw Ok class
R35068:35069 Coq.MSets.MSetRBT <> s2:526 var
binder 35065:35069 <> H0:528
R35074:35075 Coq.MSets.MSetRBT MakeRaw Ok class
R35078:35082 Coq.MSets.MSetRBT MakeRaw inter def
R35084:35085 Coq.MSets.MSetRBT <> s1:525 var
R35087:35088 Coq.MSets.MSetRBT <> s2:526 var
R35107:35111 Coq.MSets.MSetRBT MakeRaw inter def
R35123:35136 Coq.MSets.MSetRBT MakeRaw compare_height def
prf 35160:35174 MakeRaw inter_list_spec
binder 35176:35176 <> x:529
binder 35178:35179 <> l1:530
binder 35181:35182 <> l2:531
binder 35184:35186 <> acc:532
R35209:35213 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35191:35194 Coq.Sorting.Sorted <> sort abbrev
R35202:35204 Coq.Lists.List <> rev def
R35206:35207 Coq.MSets.MSetRBT <> l1:530 var
R35196:35199 Coq.MSets.MSetRBT X lt defax
R35232:35237 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35329:35329 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35214:35217 Coq.Sorting.Sorted <> sort abbrev
R35225:35227 Coq.Lists.List <> rev def
R35229:35230 Coq.MSets.MSetRBT <> l2:531 var
R35219:35222 Coq.MSets.MSetRBT X lt defax
R35271:35278 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R35238:35240 Coq.Lists.SetoidList <> InA ind
R35250:35259 Coq.MSets.MSetRBT MakeRaw inter_list def
R35261:35262 Coq.MSets.MSetRBT <> l1:530 var
R35264:35265 Coq.MSets.MSetRBT <> l2:531 var
R35267:35269 Coq.MSets.MSetRBT <> acc:532 var
R35247:35247 Coq.MSets.MSetRBT <> x:529 var
R35242:35245 Coq.MSets.MSetRBT X eq defax
R35279:35279 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R35310:35314 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R35293:35296 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R35280:35282 Coq.Lists.SetoidList <> InA ind
R35291:35292 Coq.MSets.MSetRBT <> l1:530 var
R35289:35289 Coq.MSets.MSetRBT <> x:529 var
R35284:35287 Coq.MSets.MSetRBT X eq defax
R35297:35299 Coq.Lists.SetoidList <> InA ind
R35308:35309 Coq.MSets.MSetRBT <> l2:531 var
R35306:35306 Coq.MSets.MSetRBT <> x:529 var
R35301:35304 Coq.MSets.MSetRBT X eq defax
R35315:35317 Coq.Lists.SetoidList <> InA ind
R35326:35328 Coq.MSets.MSetRBT <> acc:532 var
R35324:35324 Coq.MSets.MSetRBT <> x:529 var
R35319:35322 Coq.MSets.MSetRBT X eq defax
R35531:35544 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R35531:35544 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R35593:35606 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R35593:35606 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R35650:35663 Coq.MSets.MSetRBT X compare_spec prfax
R35650:35663 Coq.MSets.MSetRBT X compare_spec prfax
R35696:35703 Coq.Lists.SetoidList <> InA_cons thm
R35696:35703 Coq.Lists.SetoidList <> InA_cons thm
R35696:35703 Coq.Lists.SetoidList <> InA_cons thm
R35696:35703 Coq.Lists.SetoidList <> InA_cons thm
R35696:35703 Coq.Lists.SetoidList <> InA_cons thm
R35696:35703 Coq.Lists.SetoidList <> InA_cons thm
R35790:35793 Coq.MSets.MSetRBT X lt defax
R35790:35793 Coq.MSets.MSetRBT X lt defax
R35896:35899 Coq.MSets.MSetRBT X lt defax
R35896:35899 Coq.MSets.MSetRBT X lt defax
prf 35946:35962 MakeRaw linear_inter_spec
binder 35964:35965 <> s1:533
binder 35967:35968 <> s2:534
binder 35970:35970 <> x:535
R35974:35975 Coq.MSets.MSetRBT MakeRaw Ok class
R35977:35978 Coq.MSets.MSetRBT <> s1:533 var
binder 35974:35978 <> H:536
R35981:35982 Coq.MSets.MSetRBT MakeRaw Ok class
R35984:35985 Coq.MSets.MSetRBT <> s2:534 var
binder 35981:35985 <> H0:537
R36017:36021 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R35991:35993 Coq.MSets.MSetRBT MakeRaw InT ind
R35995:35995 Coq.MSets.MSetRBT <> x:535 var
R35998:36009 Coq.MSets.MSetRBT MakeRaw linear_inter def
R36011:36012 Coq.MSets.MSetRBT <> s1:533 var
R36014:36015 Coq.MSets.MSetRBT <> s2:534 var
R36030:36033 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R36022:36024 Coq.MSets.MSetRBT MakeRaw InT ind
R36026:36026 Coq.MSets.MSetRBT <> x:535 var
R36028:36029 Coq.MSets.MSetRBT <> s1:533 var
R36034:36036 Coq.MSets.MSetRBT MakeRaw InT ind
R36038:36038 Coq.MSets.MSetRBT <> x:535 var
R36040:36041 Coq.MSets.MSetRBT <> s2:534 var
R36059:36070 Coq.MSets.MSetRBT MakeRaw linear_inter def
R36145:36158 Coq.Lists.List <> rev_involutive thm
R36083:36098 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R36101:36112 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R36115:36129 Coq.MSets.MSetRBT MakeRaw inter_list_spec thm
R36083:36098 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R36083:36098 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R36083:36098 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R36083:36098 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R36101:36112 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R36101:36112 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R36115:36129 Coq.MSets.MSetRBT MakeRaw inter_list_spec thm
R36145:36158 Coq.Lists.List <> rev_involutive thm
R36145:36158 Coq.Lists.List <> rev_involutive thm
R36145:36158 Coq.Lists.List <> rev_involutive thm
R36145:36158 Coq.Lists.List <> rev_involutive thm
R36115:36129 Coq.MSets.MSetRBT MakeRaw inter_list_spec thm
R36181:36187 Coq.Lists.SetoidList <> InA_rev thm
R36190:36196 Coq.Lists.SetoidList <> InA_nil thm
R36200:36213 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R36181:36187 Coq.Lists.SetoidList <> InA_rev thm
R36181:36187 Coq.Lists.SetoidList <> InA_rev thm
R36181:36187 Coq.Lists.SetoidList <> InA_rev thm
R36181:36187 Coq.Lists.SetoidList <> InA_rev thm
R36190:36196 Coq.Lists.SetoidList <> InA_nil thm
R36190:36196 Coq.Lists.SetoidList <> InA_nil thm
R36200:36213 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R36200:36213 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R36200:36213 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R36200:36213 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
inst 36255:36264 MakeRaw mem_proper
binder 36266:36266 <> s:538
R36270:36271 Coq.MSets.MSetRBT MakeRaw Ok class
R36273:36273 Coq.MSets.MSetRBT <> s:538 var
binder 36270:36273 <> H:539
R36279:36284 Coq.Classes.Morphisms <> Proper class
binder 36311:36311 <> k:540
R36316:36318 Coq.MSets.MSetRBT MakeRaw mem def
R36320:36320 Coq.MSets.MSetRBT <> k:540 var
R36322:36322 Coq.MSets.MSetRBT <> s:538 var
R36291:36295 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R36287:36290 Coq.MSets.MSetRBT X eq defax
R36296:36303 Coq.Init.Logic <> eq ind
R36355:36373 Coq.Bool.Bool <> eq_iff_eq_true thm
R36385:36392 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36355:36373 Coq.Bool.Bool <> eq_iff_eq_true thm
R36385:36392 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36385:36392 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36385:36392 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36385:36392 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36385:36392 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36385:36392 Coq.MSets.MSetRBT MakeRaw mem_spec thm
prf 36430:36439 MakeRaw inter_spec
binder 36441:36442 <> s1:541
binder 36444:36445 <> s2:542
binder 36447:36447 <> y:543
R36451:36452 Coq.MSets.MSetRBT MakeRaw Ok class
R36454:36455 Coq.MSets.MSetRBT <> s1:541 var
binder 36451:36455 <> H:544
R36458:36459 Coq.MSets.MSetRBT MakeRaw Ok class
R36461:36462 Coq.MSets.MSetRBT <> s2:542 var
binder 36458:36462 <> H0:545
R36487:36491 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R36468:36470 Coq.MSets.MSetRBT MakeRaw InT ind
R36472:36472 Coq.MSets.MSetRBT <> y:543 var
R36475:36479 Coq.MSets.MSetRBT MakeRaw inter def
R36481:36482 Coq.MSets.MSetRBT <> s1:541 var
R36484:36485 Coq.MSets.MSetRBT <> s2:542 var
R36500:36503 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R36492:36494 Coq.MSets.MSetRBT MakeRaw InT ind
R36496:36496 Coq.MSets.MSetRBT <> y:543 var
R36498:36499 Coq.MSets.MSetRBT <> s1:541 var
R36504:36506 Coq.MSets.MSetRBT MakeRaw InT ind
R36508:36508 Coq.MSets.MSetRBT <> y:543 var
R36510:36511 Coq.MSets.MSetRBT <> s2:542 var
R36529:36533 Coq.MSets.MSetRBT MakeRaw inter def
R36545:36558 Coq.MSets.MSetRBT MakeRaw compare_height def
R36574:36590 Coq.MSets.MSetRBT MakeRaw linear_inter_spec thm
R36574:36590 Coq.MSets.MSetRBT MakeRaw linear_inter_spec thm
R36604:36614 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36617:36624 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36604:36614 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36604:36614 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36617:36624 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36617:36624 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36656:36666 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36669:36676 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36656:36666 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36656:36666 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36669:36676 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36669:36676 Coq.MSets.MSetRBT MakeRaw mem_spec thm
prf 36731:36742 MakeRaw diff_list_ok
binder 36744:36745 <> l1:546
binder 36747:36748 <> l2:547
binder 36750:36752 <> acc:548
R36770:36773 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36757:36759 Coq.MSets.MSetRBT MakeRaw INV rec
R36761:36762 Coq.MSets.MSetRBT <> l1:546 var
R36764:36765 Coq.MSets.MSetRBT <> l2:547 var
R36767:36769 Coq.MSets.MSetRBT <> acc:548 var
R36774:36777 Coq.Sorting.Sorted <> sort abbrev
R36785:36793 Coq.MSets.MSetRBT MakeRaw diff_list def
R36795:36796 Coq.MSets.MSetRBT <> l1:546 var
R36798:36799 Coq.MSets.MSetRBT <> l2:547 var
R36801:36803 Coq.MSets.MSetRBT <> acc:548 var
R36779:36782 Coq.MSets.MSetRBT X lt defax
R36944:36952 Coq.MSets.MSetRBT MakeRaw diff_list def
R36962:36968 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R36962:36968 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R36993:37006 Coq.MSets.MSetRBT X compare_spec prfax
R36993:37006 Coq.MSets.MSetRBT X compare_spec prfax
R37041:37048 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R37051:37057 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R37060:37067 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R37070:37076 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R37041:37048 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R37051:37057 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R37060:37067 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R37070:37076 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R37115:37121 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R37124:37131 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R37134:37140 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R37115:37121 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R37124:37131 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R37134:37140 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R37173:37179 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R37182:37187 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R37173:37179 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R37182:37187 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R37207:37213 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R37207:37213 Coq.MSets.MSetRBT MakeRaw INV_sym thm
inst 37241:37253 MakeRaw diff_inter_ok
binder 37255:37256 <> s1:549
binder 37258:37259 <> s2:550
R37263:37264 Coq.MSets.MSetRBT MakeRaw Ok class
R37266:37267 Coq.MSets.MSetRBT <> s1:549 var
binder 37263:37267 <> H:551
R37270:37271 Coq.MSets.MSetRBT MakeRaw Ok class
R37273:37274 Coq.MSets.MSetRBT <> s2:550 var
binder 37270:37274 <> H0:552
R37280:37281 Coq.MSets.MSetRBT MakeRaw Ok class
R37284:37294 Coq.MSets.MSetRBT MakeRaw linear_diff def
R37296:37297 Coq.MSets.MSetRBT <> s1:549 var
R37299:37300 Coq.MSets.MSetRBT <> s2:550 var
R37319:37330 Coq.MSets.MSetRBT MakeRaw linear_inter def
R37343:37352 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R37355:37366 Coq.MSets.MSetRBT MakeRaw diff_list_ok thm
R37369:37376 Coq.MSets.MSetRBT MakeRaw INV_init thm
R37343:37352 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R37355:37366 Coq.MSets.MSetRBT MakeRaw diff_list_ok thm
R37369:37376 Coq.MSets.MSetRBT MakeRaw INV_init thm
inst 37404:37417 MakeRaw fold_remove_ok
binder 37419:37420 <> s1:553
binder 37422:37423 <> s2:554
R37427:37428 Coq.MSets.MSetRBT MakeRaw Ok class
R37430:37431 Coq.MSets.MSetRBT <> s2:554 var
binder 37427:37431 <> H:555
R37437:37438 Coq.MSets.MSetRBT MakeRaw Ok class
R37441:37444 Coq.MSets.MSetRBT MakeRaw fold def
R37456:37457 Coq.MSets.MSetRBT <> s2:554 var
R37453:37454 Coq.MSets.MSetRBT <> s1:553 var
R37446:37451 Coq.MSets.MSetRBT MakeRaw remove def
R37477:37485 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R37491:37509 Coq.Lists.List <> fold_left_rev_right thm
R37477:37485 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R37477:37485 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R37491:37509 Coq.Lists.List <> fold_left_rev_right thm
R37491:37509 Coq.Lists.List <> fold_left_rev_right thm
R37520:37522 Coq.MSets.MSetRBT MakeRaw elt def
R37542:37544 Coq.Lists.List <> rev def
R37547:37554 Coq.MSets.MSetRBT MakeRaw elements def
R37576:37579 Coq.Program.Basics <> flip def
R37542:37544 Coq.Lists.List <> rev def
R37547:37554 Coq.MSets.MSetRBT MakeRaw elements def
inst 37621:37627 MakeRaw diff_ok
binder 37629:37630 <> s1:556
binder 37632:37633 <> s2:557
R37637:37638 Coq.MSets.MSetRBT MakeRaw Ok class
R37640:37641 Coq.MSets.MSetRBT <> s1:556 var
binder 37637:37641 <> H:558
R37644:37645 Coq.MSets.MSetRBT MakeRaw Ok class
R37647:37648 Coq.MSets.MSetRBT <> s2:557 var
binder 37644:37648 <> H0:559
R37653:37654 Coq.MSets.MSetRBT MakeRaw Ok class
R37657:37660 Coq.MSets.MSetRBT MakeRaw diff def
R37662:37663 Coq.MSets.MSetRBT <> s1:556 var
R37665:37666 Coq.MSets.MSetRBT <> s2:557 var
R37685:37688 Coq.MSets.MSetRBT MakeRaw diff def
R37700:37713 Coq.MSets.MSetRBT MakeRaw compare_height def
prf 37737:37750 MakeRaw diff_list_spec
binder 37752:37752 <> x:560
binder 37754:37755 <> l1:561
binder 37757:37758 <> l2:562
binder 37760:37762 <> acc:563
R37785:37789 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37767:37770 Coq.Sorting.Sorted <> sort abbrev
R37778:37780 Coq.Lists.List <> rev def
R37782:37783 Coq.MSets.MSetRBT <> l1:561 var
R37772:37775 Coq.MSets.MSetRBT X lt defax
R37808:37813 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37905:37905 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37790:37793 Coq.Sorting.Sorted <> sort abbrev
R37801:37803 Coq.Lists.List <> rev def
R37805:37806 Coq.MSets.MSetRBT <> l2:562 var
R37795:37798 Coq.MSets.MSetRBT X lt defax
R37846:37853 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R37814:37816 Coq.Lists.SetoidList <> InA ind
R37826:37834 Coq.MSets.MSetRBT MakeRaw diff_list def
R37836:37837 Coq.MSets.MSetRBT <> l1:561 var
R37839:37840 Coq.MSets.MSetRBT <> l2:562 var
R37842:37844 Coq.MSets.MSetRBT <> acc:563 var
R37823:37823 Coq.MSets.MSetRBT <> x:560 var
R37818:37821 Coq.MSets.MSetRBT X eq defax
R37854:37854 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R37886:37890 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R37868:37871 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R37855:37857 Coq.Lists.SetoidList <> InA ind
R37866:37867 Coq.MSets.MSetRBT <> l1:561 var
R37864:37864 Coq.MSets.MSetRBT <> x:560 var
R37859:37862 Coq.MSets.MSetRBT X eq defax
R37872:37872 Coq.Init.Logic <> ::type_scope:'~'_x not
R37873:37875 Coq.Lists.SetoidList <> InA ind
R37884:37885 Coq.MSets.MSetRBT <> l2:562 var
R37882:37882 Coq.MSets.MSetRBT <> x:560 var
R37877:37880 Coq.MSets.MSetRBT X eq defax
R37891:37893 Coq.Lists.SetoidList <> InA ind
R37902:37904 Coq.MSets.MSetRBT <> acc:563 var
R37900:37900 Coq.MSets.MSetRBT <> x:560 var
R37895:37898 Coq.MSets.MSetRBT X eq defax
R38072:38085 Coq.Lists.List <> rev_append_rev thm
R38072:38085 Coq.Lists.List <> rev_append_rev thm
R38072:38085 Coq.Lists.List <> rev_append_rev thm
R38139:38152 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R38139:38152 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R38201:38214 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R38201:38214 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R38258:38271 Coq.MSets.MSetRBT X compare_spec prfax
R38258:38271 Coq.MSets.MSetRBT X compare_spec prfax
R38360:38363 Coq.MSets.MSetRBT X lt defax
R38360:38363 Coq.MSets.MSetRBT X lt defax
R38481:38484 Coq.MSets.MSetRBT X lt defax
R38481:38484 Coq.MSets.MSetRBT X lt defax
R38632:38635 Coq.MSets.MSetRBT X lt defax
R38632:38635 Coq.MSets.MSetRBT X lt defax
prf 38682:38697 MakeRaw linear_diff_spec
binder 38699:38700 <> s1:564
binder 38702:38703 <> s2:565
binder 38705:38705 <> x:566
R38709:38710 Coq.MSets.MSetRBT MakeRaw Ok class
R38712:38713 Coq.MSets.MSetRBT <> s1:564 var
binder 38709:38713 <> H:567
R38716:38717 Coq.MSets.MSetRBT MakeRaw Ok class
R38719:38720 Coq.MSets.MSetRBT <> s2:565 var
binder 38716:38720 <> H0:568
R38751:38755 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R38726:38728 Coq.MSets.MSetRBT MakeRaw InT ind
R38730:38730 Coq.MSets.MSetRBT <> x:566 var
R38733:38743 Coq.MSets.MSetRBT MakeRaw linear_diff def
R38745:38746 Coq.MSets.MSetRBT <> s1:564 var
R38748:38749 Coq.MSets.MSetRBT <> s2:565 var
R38764:38767 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R38756:38758 Coq.MSets.MSetRBT MakeRaw InT ind
R38760:38760 Coq.MSets.MSetRBT <> x:566 var
R38762:38763 Coq.MSets.MSetRBT <> s1:564 var
R38768:38768 Coq.Init.Logic <> ::type_scope:'~'_x not
R38769:38771 Coq.MSets.MSetRBT MakeRaw InT ind
R38773:38773 Coq.MSets.MSetRBT <> x:566 var
R38775:38776 Coq.MSets.MSetRBT <> s2:565 var
R38794:38804 Coq.MSets.MSetRBT MakeRaw linear_diff def
R38878:38891 Coq.Lists.List <> rev_involutive thm
R38817:38832 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38835:38846 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R38849:38862 Coq.MSets.MSetRBT MakeRaw diff_list_spec thm
R38817:38832 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38817:38832 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38817:38832 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38817:38832 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38835:38846 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R38835:38846 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R38849:38862 Coq.MSets.MSetRBT MakeRaw diff_list_spec thm
R38878:38891 Coq.Lists.List <> rev_involutive thm
R38878:38891 Coq.Lists.List <> rev_involutive thm
R38878:38891 Coq.Lists.List <> rev_involutive thm
R38878:38891 Coq.Lists.List <> rev_involutive thm
R38849:38862 Coq.MSets.MSetRBT MakeRaw diff_list_spec thm
R38914:38920 Coq.Lists.SetoidList <> InA_rev thm
R38923:38929 Coq.Lists.SetoidList <> InA_nil thm
R38933:38946 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38914:38920 Coq.Lists.SetoidList <> InA_rev thm
R38914:38920 Coq.Lists.SetoidList <> InA_rev thm
R38914:38920 Coq.Lists.SetoidList <> InA_rev thm
R38914:38920 Coq.Lists.SetoidList <> InA_rev thm
R38923:38929 Coq.Lists.SetoidList <> InA_nil thm
R38923:38929 Coq.Lists.SetoidList <> InA_nil thm
R38933:38946 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38933:38946 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38933:38946 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38933:38946 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
prf 38979:38994 MakeRaw fold_remove_spec
binder 38996:38997 <> s1:569
binder 38999:39000 <> s2:570
binder 39002:39002 <> x:571
R39006:39007 Coq.MSets.MSetRBT MakeRaw Ok class
R39009:39010 Coq.MSets.MSetRBT <> s2:570 var
binder 39006:39010 <> H:572
R39042:39046 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R39017:39019 Coq.MSets.MSetRBT MakeRaw InT ind
R39021:39021 Coq.MSets.MSetRBT <> x:571 var
R39024:39027 Coq.MSets.MSetRBT MakeRaw fold def
R39039:39040 Coq.MSets.MSetRBT <> s2:570 var
R39036:39037 Coq.MSets.MSetRBT <> s1:569 var
R39029:39034 Coq.MSets.MSetRBT MakeRaw remove def
R39055:39058 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R39047:39049 Coq.MSets.MSetRBT MakeRaw InT ind
R39051:39051 Coq.MSets.MSetRBT <> x:571 var
R39053:39054 Coq.MSets.MSetRBT <> s2:570 var
R39059:39059 Coq.Init.Logic <> ::type_scope:'~'_x not
R39060:39062 Coq.MSets.MSetRBT MakeRaw InT ind
R39064:39064 Coq.MSets.MSetRBT <> x:571 var
R39066:39067 Coq.MSets.MSetRBT <> s1:569 var
R39086:39094 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R39100:39118 Coq.Lists.List <> fold_left_rev_right thm
R39086:39094 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R39086:39094 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R39100:39118 Coq.Lists.List <> fold_left_rev_right thm
R39100:39118 Coq.Lists.List <> fold_left_rev_right thm
R39134:39147 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R39157:39163 Coq.Lists.SetoidList <> InA_rev thm
R39134:39147 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R39134:39147 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R39157:39163 Coq.Lists.SetoidList <> InA_rev thm
R39157:39163 Coq.Lists.SetoidList <> InA_rev thm
R39185:39187 Coq.MSets.MSetRBT MakeRaw elt def
R39207:39209 Coq.Lists.List <> rev def
R39212:39219 Coq.MSets.MSetRBT MakeRaw elements def
R39207:39209 Coq.Lists.List <> rev def
R39212:39219 Coq.MSets.MSetRBT MakeRaw elements def
R39253:39259 Coq.Lists.SetoidList <> InA_nil thm
R39253:39259 Coq.Lists.SetoidList <> InA_nil thm
R39253:39259 Coq.Lists.SetoidList <> InA_nil thm
R39283:39286 Coq.Program.Basics <> flip def
R39302:39312 Coq.MSets.MSetRBT MakeRaw remove_spec thm
R39320:39327 Coq.Lists.SetoidList <> InA_cons thm
R39302:39312 Coq.MSets.MSetRBT MakeRaw remove_spec thm
R39302:39312 Coq.MSets.MSetRBT MakeRaw remove_spec thm
R39302:39312 Coq.MSets.MSetRBT MakeRaw remove_spec thm
R39320:39327 Coq.Lists.SetoidList <> InA_cons thm
R39320:39327 Coq.Lists.SetoidList <> InA_cons thm
prf 39392:39400 MakeRaw diff_spec
binder 39402:39403 <> s1:573
binder 39405:39406 <> s2:574
binder 39408:39408 <> y:575
R39412:39413 Coq.MSets.MSetRBT MakeRaw Ok class
R39415:39416 Coq.MSets.MSetRBT <> s1:573 var
binder 39412:39416 <> H:576
R39419:39420 Coq.MSets.MSetRBT MakeRaw Ok class
R39422:39423 Coq.MSets.MSetRBT <> s2:574 var
binder 39419:39423 <> H0:577
R39447:39451 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R39429:39431 Coq.MSets.MSetRBT MakeRaw InT ind
R39433:39433 Coq.MSets.MSetRBT <> y:575 var
R39436:39439 Coq.MSets.MSetRBT MakeRaw diff def
R39441:39442 Coq.MSets.MSetRBT <> s1:573 var
R39444:39445 Coq.MSets.MSetRBT <> s2:574 var
R39460:39463 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R39452:39454 Coq.MSets.MSetRBT MakeRaw InT ind
R39456:39456 Coq.MSets.MSetRBT <> y:575 var
R39458:39459 Coq.MSets.MSetRBT <> s1:573 var
R39464:39464 Coq.Init.Logic <> ::type_scope:'~'_x not
R39465:39467 Coq.MSets.MSetRBT MakeRaw InT ind
R39469:39469 Coq.MSets.MSetRBT <> y:575 var
R39471:39472 Coq.MSets.MSetRBT <> s2:574 var
R39490:39493 Coq.MSets.MSetRBT MakeRaw diff def
R39505:39518 Coq.MSets.MSetRBT MakeRaw compare_height def
R39534:39549 Coq.MSets.MSetRBT MakeRaw linear_diff_spec thm
R39534:39549 Coq.MSets.MSetRBT MakeRaw linear_diff_spec thm
R39563:39573 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R39576:39593 Coq.Bool.Bool <> negb_true_iff thm
R39604:39626 Coq.Bool.Bool <> not_true_iff_false thm
R39629:39636 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R39563:39573 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R39563:39573 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R39563:39573 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R39576:39593 Coq.Bool.Bool <> negb_true_iff thm
R39576:39593 Coq.Bool.Bool <> negb_true_iff thm
R39604:39626 Coq.Bool.Bool <> not_true_iff_false thm
R39604:39626 Coq.Bool.Bool <> not_true_iff_false thm
R39629:39636 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R39629:39636 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R39629:39636 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R39694:39703 Coq.MSets.MSetRBT MakeRaw mem_proper inst
R39694:39703 Coq.MSets.MSetRBT MakeRaw mem_proper inst
R39719:39734 Coq.MSets.MSetRBT MakeRaw fold_remove_spec thm
R39719:39734 Coq.MSets.MSetRBT MakeRaw fold_remove_spec thm
R39747:39753 Coq.MSets.MSetRBT MakeRaw <> modtype
R39931:39948 Coq.Structures.Orders OrderedType <> mod
R39962:39968 Coq.MSets.MSetRBT MakeRaw <> mod
R39970:39970 Coq.MSets.MSetRBT X <> modtype
mod 39916:39927 <> BalanceProps
abbrev 39990:39991 BalanceProps Rd
R39997:40000 Coq.MSets.MSetRBT M Node constr
R40002:40004 Coq.MSets.MSetRBT <> Red constr
abbrev 40023:40024 BalanceProps Bk
R40030:40033 Coq.MSets.MSetRBT M Node constr
R40035:40039 Coq.MSets.MSetRBT <> Black constr
R40050:40053 Coq.MSets.MSetRBT M.MX <> mod
ind 40288:40290 BalanceProps rbt
constr 40320:40326 BalanceProps RB_Leaf
constr 40344:40348 BalanceProps RB_Rd
constr 40429:40433 BalanceProps RB_Bk
R40297:40300 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40294:40296 Coq.Init.Datatypes <> nat ind
R40305:40308 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40301:40304 Coq.MSets.MSetRBT M tree ind
R40330:40332 Coq.MSets.MSetRBT <> rbt:578 ind
R40336:40339 Coq.MSets.MSetRBT M Leaf constr
binder 40350:40350 <> n:580
binder 40352:40352 <> l:581
binder 40354:40354 <> k:582
binder 40356:40356 <> r:583
R40371:40374 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40363:40368 Coq.MSets.MSetRBT M notred def
R40370:40370 Coq.MSets.MSetRBT <> l:581 var
R40383:40386 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40375:40380 Coq.MSets.MSetRBT M notred def
R40382:40382 Coq.MSets.MSetRBT <> r:583 var
R40394:40397 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40387:40389 Coq.MSets.MSetRBT <> rbt:578 ind
R40393:40393 Coq.MSets.MSetRBT <> l:581 var
R40391:40391 Coq.MSets.MSetRBT <> n:580 var
R40405:40408 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40398:40400 Coq.MSets.MSetRBT <> rbt:578 ind
R40404:40404 Coq.MSets.MSetRBT <> r:583 var
R40402:40402 Coq.MSets.MSetRBT <> n:580 var
R40409:40411 Coq.MSets.MSetRBT <> rbt:578 ind
R40416:40417 Coq.MSets.MSetRBT BalanceProps Rd abbrev
R40419:40419 Coq.MSets.MSetRBT <> l:581 var
R40421:40421 Coq.MSets.MSetRBT <> k:582 var
R40423:40423 Coq.MSets.MSetRBT <> r:583 var
R40413:40413 Coq.MSets.MSetRBT <> n:580 var
binder 40435:40435 <> n:584
binder 40437:40437 <> l:585
binder 40439:40439 <> k:586
binder 40441:40441 <> r:587
R40452:40455 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40445:40447 Coq.MSets.MSetRBT <> rbt:578 ind
R40451:40451 Coq.MSets.MSetRBT <> l:585 var
R40449:40449 Coq.MSets.MSetRBT <> n:584 var
R40463:40466 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40456:40458 Coq.MSets.MSetRBT <> rbt:578 ind
R40462:40462 Coq.MSets.MSetRBT <> r:587 var
R40460:40460 Coq.MSets.MSetRBT <> n:584 var
R40467:40469 Coq.MSets.MSetRBT <> rbt:578 ind
R40478:40479 Coq.MSets.MSetRBT BalanceProps Bk abbrev
R40481:40481 Coq.MSets.MSetRBT <> l:585 var
R40483:40483 Coq.MSets.MSetRBT <> k:586 var
R40485:40485 Coq.MSets.MSetRBT <> r:587 var
R40472:40472 Coq.Init.Datatypes <> S constr
R40474:40474 Coq.MSets.MSetRBT <> n:584 var
ind 40719:40721 BalanceProps rrt
constr 40752:40756 BalanceProps RR_Rd
R40726:40728 Coq.Init.Datatypes <> nat ind
binder 40724:40724 <> n:588
R40737:40740 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40733:40736 Coq.MSets.MSetRBT M tree ind
binder 40758:40758 <> l:591
binder 40760:40760 <> k:592
binder 40762:40762 <> r:593
R40773:40776 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40766:40768 Coq.MSets.MSetRBT BalanceProps rbt ind
R40770:40770 Coq.MSets.MSetRBT <> n:588 var
R40772:40772 Coq.MSets.MSetRBT <> l:591 var
R40784:40787 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40777:40779 Coq.MSets.MSetRBT BalanceProps rbt ind
R40781:40781 Coq.MSets.MSetRBT <> n:588 var
R40783:40783 Coq.MSets.MSetRBT <> r:593 var
R40788:40790 Coq.MSets.MSetRBT <> rrt:589 ind
R40795:40796 Coq.MSets.MSetRBT BalanceProps Rd abbrev
R40798:40798 Coq.MSets.MSetRBT <> l:591 var
R40800:40800 Coq.MSets.MSetRBT <> k:592 var
R40802:40802 Coq.MSets.MSetRBT <> r:593 var
R40792:40792 Coq.MSets.MSetRBT <> n:588 var
ind 41082:41085 BalanceProps arbt
constr 41116:41121 BalanceProps ARB_RB
constr 41148:41153 BalanceProps ARB_RR
R41090:41092 Coq.Init.Datatypes <> nat ind
binder 41088:41088 <> n:594
R41097:41100 Coq.MSets.MSetRBT M tree ind
binder 41095:41095 <> t:595
R41132:41135 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41125:41127 Coq.MSets.MSetRBT BalanceProps rbt ind
R41129:41129 Coq.MSets.MSetRBT <> n:594 var
R41131:41131 Coq.MSets.MSetRBT <> t:595 var
R41136:41139 Coq.MSets.MSetRBT <> arbt:596 ind
R41143:41143 Coq.MSets.MSetRBT <> t:595 var
R41141:41141 Coq.MSets.MSetRBT <> n:594 var
R41164:41167 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41157:41159 Coq.MSets.MSetRBT BalanceProps rrt ind
R41161:41161 Coq.MSets.MSetRBT <> n:594 var
R41163:41163 Coq.MSets.MSetRBT <> t:595 var
R41168:41171 Coq.MSets.MSetRBT <> arbt:596 ind
R41175:41175 Coq.MSets.MSetRBT <> t:595 var
R41173:41173 Coq.MSets.MSetRBT <> n:594 var
ind 41272:41274 BalanceProps Rbt
constr 41289:41291 BalanceProps RBT
rec 41272:41274 BalanceProps Rbt
proj 41289:41291 BalanceProps RBT
R41279:41282 Coq.MSets.MSetRBT M tree ind
binder 41277:41277 <> t:598
R41295:41301 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R41303:41304 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 41302:41302 <> d:600
R41305:41307 Coq.MSets.MSetRBT BalanceProps rbt ind
R41309:41309 Coq.MSets.MSetRBT <> d:600 var
R41311:41311 Coq.MSets.MSetRBT <> t:598 var
def 41375:41381 BalanceProps rbt_ind
R41400:41402 Coq.MSets.MSetRBT BalanceProps rbt ind
R41439:41441 Coq.MSets.MSetRBT <> rbt ind
R41443:41445 Coq.MSets.MSetRBT <> rrt ind
R41447:41450 Coq.MSets.MSetRBT <> arbt ind
R41481:41486 Coq.MSets.MSetRBT M notred def
R41501:41501 Coq.Init.Logic <> I constr
R41612:41615 Coq.MSets.MSetRBT BalanceProps arbt ind
R41612:41615 Coq.MSets.MSetRBT BalanceProps arbt ind
prf 41711:41719 BalanceProps rr_nrr_rb
binder 41721:41721 <> n:602
binder 41723:41723 <> t:603
R41735:41738 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41728:41730 Coq.MSets.MSetRBT BalanceProps rrt ind
R41732:41732 Coq.MSets.MSetRBT <> n:602 var
R41734:41734 Coq.MSets.MSetRBT <> t:603 var
R41750:41753 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41739:41747 Coq.MSets.MSetRBT M notredred abbrev
R41749:41749 Coq.MSets.MSetRBT <> t:603 var
R41754:41756 Coq.MSets.MSetRBT BalanceProps rbt ind
R41758:41758 Coq.MSets.MSetRBT <> n:602 var
R41760:41760 Coq.MSets.MSetRBT <> t:603 var
prf 41889:41898 BalanceProps arb_nrr_rb
binder 41900:41900 <> n:604
binder 41902:41902 <> t:605
R41915:41918 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41907:41910 Coq.MSets.MSetRBT BalanceProps arbt ind
R41912:41912 Coq.MSets.MSetRBT <> n:604 var
R41914:41914 Coq.MSets.MSetRBT <> t:605 var
R41930:41933 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41919:41927 Coq.MSets.MSetRBT M notredred abbrev
R41929:41929 Coq.MSets.MSetRBT <> t:605 var
R41934:41936 Coq.MSets.MSetRBT BalanceProps rbt ind
R41938:41938 Coq.MSets.MSetRBT <> n:604 var
R41940:41940 Coq.MSets.MSetRBT <> t:605 var
prf 41981:41989 BalanceProps arb_nr_rb
binder 41991:41991 <> n:606
binder 41993:41993 <> t:607
R42006:42009 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41998:42001 Coq.MSets.MSetRBT BalanceProps arbt ind
R42003:42003 Coq.MSets.MSetRBT <> n:606 var
R42005:42005 Coq.MSets.MSetRBT <> t:607 var
R42018:42021 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42010:42015 Coq.MSets.MSetRBT M notred def
R42017:42017 Coq.MSets.MSetRBT <> t:607 var
R42022:42024 Coq.MSets.MSetRBT BalanceProps rbt ind
R42026:42026 Coq.MSets.MSetRBT <> n:606 var
R42028:42028 Coq.MSets.MSetRBT <> t:607 var
def 42211:42218 BalanceProps redcarac
binder 42220:42220 <> s:608
R42225:42229 Coq.MSets.MSetRBT M rcase def
R42261:42261 Coq.MSets.MSetRBT <> s:608 var
prf 42271:42281 BalanceProps rb_maxdepth
binder 42283:42283 <> s:609
binder 42285:42285 <> n:610
R42296:42299 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42289:42291 Coq.MSets.MSetRBT BalanceProps rbt ind
R42293:42293 Coq.MSets.MSetRBT <> n:610 var
R42295:42295 Coq.MSets.MSetRBT <> s:609 var
R42310:42313 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R42300:42307 Coq.MSets.MSetRBT M maxdepth def
R42309:42309 Coq.MSets.MSetRBT <> s:609 var
R42317:42319 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R42315:42315 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R42316:42316 Coq.MSets.MSetRBT <> n:610 var
R42320:42327 Coq.MSets.MSetRBT BalanceProps redcarac def
R42329:42329 Coq.MSets.MSetRBT <> s:609 var
R42381:42388 Coq.MSets.MSetRBT BalanceProps redcarac def
R42381:42388 Coq.MSets.MSetRBT BalanceProps redcarac def
R42435:42442 Coq.MSets.MSetRBT BalanceProps redcarac def
R42435:42442 Coq.MSets.MSetRBT BalanceProps redcarac def
R42523:42536 Coq.Arith.PeanoNat Nat add_succ_r thm
R42542:42557 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42523:42536 Coq.Arith.PeanoNat Nat add_succ_r thm
R42523:42536 Coq.Arith.PeanoNat Nat add_succ_r thm
R42542:42557 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42542:42557 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42573:42583 Coq.Arith.PeanoNat Nat max_lub thm
R42573:42583 Coq.Arith.PeanoNat Nat max_lub thm
R42607:42622 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42607:42622 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42607:42622 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42634:42644 Coq.Arith.PeanoNat Nat max_lub thm
R42654:42665 Coq.Arith.PeanoNat Nat le_trans thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42736:42746 Coq.Arith.PeanoNat Nat add_1_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42634:42644 Coq.Arith.PeanoNat Nat max_lub thm
R42654:42665 Coq.Arith.PeanoNat Nat le_trans thm
R42654:42665 Coq.Arith.PeanoNat Nat le_trans thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42736:42746 Coq.Arith.PeanoNat Nat add_1_r thm
R42736:42746 Coq.Arith.PeanoNat Nat add_1_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42736:42746 Coq.Arith.PeanoNat Nat add_1_r thm
R42736:42746 Coq.Arith.PeanoNat Nat add_1_r thm
R42736:42746 Coq.Arith.PeanoNat Nat add_1_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42736:42746 Coq.Arith.PeanoNat Nat add_1_r thm
R42736:42746 Coq.Arith.PeanoNat Nat add_1_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42736:42746 Coq.Arith.PeanoNat Nat add_1_r thm
R42736:42746 Coq.Arith.PeanoNat Nat add_1_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42736:42746 Coq.Arith.PeanoNat Nat add_1_r thm
R42736:42746 Coq.Arith.PeanoNat Nat add_1_r thm
R42736:42746 Coq.Arith.PeanoNat Nat add_1_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42722:42732 Coq.Arith.PeanoNat Nat add_0_r thm
R42736:42746 Coq.Arith.PeanoNat Nat add_1_r thm
R42736:42746 Coq.Arith.PeanoNat Nat add_1_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
R42750:42763 Coq.Arith.PeanoNat Nat add_succ_r thm
prf 42784:42794 BalanceProps rb_mindepth
binder 42796:42796 <> s:611
binder 42798:42798 <> n:612
R42809:42812 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42802:42804 Coq.MSets.MSetRBT BalanceProps rbt ind
R42806:42806 Coq.MSets.MSetRBT <> n:612 var
R42808:42808 Coq.MSets.MSetRBT <> s:611 var
R42827:42830 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R42814:42816 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R42813:42813 Coq.MSets.MSetRBT <> n:612 var
R42817:42824 Coq.MSets.MSetRBT BalanceProps redcarac def
R42826:42826 Coq.MSets.MSetRBT <> s:611 var
R42831:42838 Coq.MSets.MSetRBT M mindepth def
R42840:42840 Coq.MSets.MSetRBT <> s:611 var
R42894:42907 Coq.Arith.PeanoNat Nat add_succ_r thm
R42894:42907 Coq.Arith.PeanoNat Nat add_succ_r thm
R42894:42907 Coq.Arith.PeanoNat Nat add_succ_r thm
R42922:42937 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42922:42937 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42952:42959 Coq.MSets.MSetRBT BalanceProps redcarac def
R42952:42959 Coq.MSets.MSetRBT BalanceProps redcarac def
R43006:43013 Coq.MSets.MSetRBT BalanceProps redcarac def
R43006:43013 Coq.MSets.MSetRBT BalanceProps redcarac def
R43061:43071 Coq.Arith.PeanoNat Nat min_glb thm
R43061:43071 Coq.Arith.PeanoNat Nat min_glb thm
R43086:43101 Coq.Arith.PeanoNat Nat succ_le_mono thm
R43086:43101 Coq.Arith.PeanoNat Nat succ_le_mono thm
R43112:43122 Coq.Arith.PeanoNat Nat add_0_r thm
R43112:43122 Coq.Arith.PeanoNat Nat add_0_r thm
R43112:43122 Coq.Arith.PeanoNat Nat add_0_r thm
R43134:43144 Coq.Arith.PeanoNat Nat min_glb thm
R43134:43144 Coq.Arith.PeanoNat Nat min_glb thm
R43160:43171 Coq.Arith.PeanoNat Nat le_trans thm
R43160:43171 Coq.Arith.PeanoNat Nat le_trans thm
R43201:43212 Coq.Arith.PeanoNat Nat le_add_r thm
R43201:43212 Coq.Arith.PeanoNat Nat le_add_r thm
R43228:43239 Coq.Arith.PeanoNat Nat le_trans thm
R43228:43239 Coq.Arith.PeanoNat Nat le_trans thm
R43269:43280 Coq.Arith.PeanoNat Nat le_add_r thm
R43269:43280 Coq.Arith.PeanoNat Nat le_add_r thm
prf 43295:43313 BalanceProps maxdepth_upperbound
binder 43315:43315 <> s:613
R43324:43328 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43319:43321 Coq.MSets.MSetRBT BalanceProps Rbt class
R43323:43323 Coq.MSets.MSetRBT <> s:613 var
R43339:43342 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R43329:43336 Coq.MSets.MSetRBT M maxdepth def
R43338:43338 Coq.MSets.MSetRBT <> s:613 var
R43344:43346 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R43347:43354 Coq.Arith.PeanoNat Nat log2 def
R43357:43357 Coq.Init.Datatypes <> S constr
R43360:43367 Coq.MSets.MSetRBT M cardinal def
R43369:43369 Coq.MSets.MSetRBT <> s:613 var
R43404:43415 Coq.Arith.PeanoNat Nat le_trans thm
R43426:43436 Coq.MSets.MSetRBT BalanceProps rb_maxdepth thm
R43404:43415 Coq.Arith.PeanoNat Nat le_trans thm
R43426:43436 Coq.MSets.MSetRBT BalanceProps rb_maxdepth thm
R43464:43465 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R43478:43478 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R43467:43467 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R43468:43475 Coq.MSets.MSetRBT BalanceProps redcarac def
R43464:43465 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R43478:43478 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R43467:43467 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R43468:43475 Coq.MSets.MSetRBT BalanceProps redcarac def
R43493:43511 Coq.Arith.PeanoNat Nat mul_add_distr_l thm
R43493:43511 Coq.Arith.PeanoNat Nat mul_add_distr_l thm
R43493:43511 Coq.Arith.PeanoNat Nat mul_add_distr_l thm
R43520:43536 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R43520:43536 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R43553:43563 Coq.Arith.PeanoNat Nat mul_1_l thm
R43553:43563 Coq.Arith.PeanoNat Nat mul_1_l thm
R43553:43563 Coq.Arith.PeanoNat Nat mul_1_l thm
R43577:43593 Coq.Arith.PeanoNat Nat mul_le_mono_r thm
R43577:43593 Coq.Arith.PeanoNat Nat mul_le_mono_r thm
R43614:43630 Coq.Arith.PeanoNat Nat mul_le_mono_l thm
R43614:43630 Coq.Arith.PeanoNat Nat mul_le_mono_l thm
R43650:43657 Coq.MSets.MSetRBT M mindepth def
R43650:43657 Coq.MSets.MSetRBT M mindepth def
R43678:43688 Coq.MSets.MSetRBT BalanceProps rb_mindepth thm
R43678:43688 Coq.MSets.MSetRBT BalanceProps rb_mindepth thm
R43702:43722 Coq.MSets.MSetRBT M mindepth_log_cardinal thm
R43702:43722 Coq.MSets.MSetRBT M mindepth_log_cardinal thm
prf 43737:43755 BalanceProps maxdepth_lowerbound
binder 43757:43757 <> s:614
R43768:43772 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43762:43763 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R43761:43761 Coq.MSets.MSetRBT <> s:614 var
R43764:43767 Coq.MSets.MSetRBT M Leaf constr
R43794:43796 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R43773:43780 Coq.Arith.PeanoNat Nat log2 def
R43783:43790 Coq.MSets.MSetRBT M cardinal def
R43792:43792 Coq.MSets.MSetRBT <> s:614 var
R43797:43804 Coq.MSets.MSetRBT M maxdepth def
R43806:43806 Coq.MSets.MSetRBT <> s:614 var
R43823:43843 Coq.MSets.MSetRBT M maxdepth_log_cardinal thm
R43823:43843 Coq.MSets.MSetRBT M maxdepth_log_cardinal thm
prf 43880:43891 BalanceProps singleton_rb
binder 43893:43893 <> x:615
R43897:43899 Coq.MSets.MSetRBT BalanceProps Rbt class
R43902:43910 Coq.MSets.MSetRBT M singleton def
R43912:43912 Coq.MSets.MSetRBT <> x:615 var
R43931:43939 Coq.MSets.MSetRBT M singleton def
prf 44007:44018 BalanceProps makeBlack_rb
binder 44020:44020 <> n:616
binder 44022:44022 <> t:617
R44034:44037 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44026:44029 Coq.MSets.MSetRBT BalanceProps arbt ind
R44031:44031 Coq.MSets.MSetRBT <> n:616 var
R44033:44033 Coq.MSets.MSetRBT <> t:617 var
R44038:44040 Coq.MSets.MSetRBT BalanceProps Rbt class
R44043:44051 Coq.MSets.MSetRBT M makeBlack def
R44053:44053 Coq.MSets.MSetRBT <> t:617 var
R44142:44142 Coq.Init.Datatypes <> S constr
R44142:44142 Coq.Init.Datatypes <> S constr
R44142:44142 Coq.Init.Datatypes <> S constr
prf 44192:44201 BalanceProps makeRed_rr
binder 44203:44203 <> t:618
binder 44205:44205 <> n:619
R44221:44224 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44210:44212 Coq.MSets.MSetRBT BalanceProps rbt ind
R44215:44215 Coq.Init.Datatypes <> S constr
R44217:44217 Coq.MSets.MSetRBT <> n:619 var
R44220:44220 Coq.MSets.MSetRBT <> t:618 var
R44233:44236 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44225:44230 Coq.MSets.MSetRBT M notred def
R44232:44232 Coq.MSets.MSetRBT <> t:618 var
R44237:44239 Coq.MSets.MSetRBT BalanceProps rrt ind
R44241:44241 Coq.MSets.MSetRBT <> n:619 var
R44244:44250 Coq.MSets.MSetRBT M makeRed def
R44252:44252 Coq.MSets.MSetRBT <> t:618 var
prf 44345:44351 BalanceProps lbal_rb
binder 44353:44353 <> n:620
binder 44355:44355 <> l:621
binder 44357:44357 <> k:622
binder 44359:44359 <> r:623
R44372:44375 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44364:44367 Coq.MSets.MSetRBT BalanceProps arbt ind
R44369:44369 Coq.MSets.MSetRBT <> n:620 var
R44371:44371 Coq.MSets.MSetRBT <> l:621 var
R44383:44386 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44376:44378 Coq.MSets.MSetRBT BalanceProps rbt ind
R44380:44380 Coq.MSets.MSetRBT <> n:620 var
R44382:44382 Coq.MSets.MSetRBT <> r:623 var
R44387:44389 Coq.MSets.MSetRBT BalanceProps rbt ind
R44392:44392 Coq.Init.Datatypes <> S constr
R44394:44394 Coq.MSets.MSetRBT <> n:620 var
R44398:44401 Coq.MSets.MSetRBT M lbal def
R44403:44403 Coq.MSets.MSetRBT <> l:621 var
R44405:44405 Coq.MSets.MSetRBT <> k:622 var
R44407:44407 Coq.MSets.MSetRBT <> r:623 var
R44423:44432 Coq.MSets.MSetRBT M lbal_match thm
R44423:44432 Coq.MSets.MSetRBT M lbal_match thm
prf 44476:44482 BalanceProps rbal_rb
binder 44484:44484 <> n:624
binder 44486:44486 <> l:625
binder 44488:44488 <> k:626
binder 44490:44490 <> r:627
R44502:44505 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44495:44497 Coq.MSets.MSetRBT BalanceProps rbt ind
R44499:44499 Coq.MSets.MSetRBT <> n:624 var
R44501:44501 Coq.MSets.MSetRBT <> l:625 var
R44514:44517 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44506:44509 Coq.MSets.MSetRBT BalanceProps arbt ind
R44511:44511 Coq.MSets.MSetRBT <> n:624 var
R44513:44513 Coq.MSets.MSetRBT <> r:627 var
R44518:44520 Coq.MSets.MSetRBT BalanceProps rbt ind
R44523:44523 Coq.Init.Datatypes <> S constr
R44525:44525 Coq.MSets.MSetRBT <> n:624 var
R44529:44532 Coq.MSets.MSetRBT M rbal def
R44534:44534 Coq.MSets.MSetRBT <> l:625 var
R44536:44536 Coq.MSets.MSetRBT <> k:626 var
R44538:44538 Coq.MSets.MSetRBT <> r:627 var
R44554:44563 Coq.MSets.MSetRBT M rbal_match thm
R44554:44563 Coq.MSets.MSetRBT M rbal_match thm
prf 44607:44614 BalanceProps rbal'_rb
binder 44616:44616 <> n:628
binder 44618:44618 <> l:629
binder 44620:44620 <> k:630
binder 44622:44622 <> r:631
R44634:44637 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44627:44629 Coq.MSets.MSetRBT BalanceProps rbt ind
R44631:44631 Coq.MSets.MSetRBT <> n:628 var
R44633:44633 Coq.MSets.MSetRBT <> l:629 var
R44646:44649 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44638:44641 Coq.MSets.MSetRBT BalanceProps arbt ind
R44643:44643 Coq.MSets.MSetRBT <> n:628 var
R44645:44645 Coq.MSets.MSetRBT <> r:631 var
R44650:44652 Coq.MSets.MSetRBT BalanceProps rbt ind
R44655:44655 Coq.Init.Datatypes <> S constr
R44657:44657 Coq.MSets.MSetRBT <> n:628 var
R44661:44665 Coq.MSets.MSetRBT M rbal' def
R44667:44667 Coq.MSets.MSetRBT <> l:629 var
R44669:44669 Coq.MSets.MSetRBT <> k:630 var
R44671:44671 Coq.MSets.MSetRBT <> r:631 var
R44687:44697 Coq.MSets.MSetRBT M rbal'_match thm
R44687:44697 Coq.MSets.MSetRBT M rbal'_match thm
prf 44741:44748 BalanceProps lbalS_rb
binder 44750:44750 <> n:632
binder 44752:44752 <> l:633
binder 44754:44754 <> x:634
binder 44756:44756 <> r:635
R44769:44772 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44761:44764 Coq.MSets.MSetRBT BalanceProps arbt ind
R44766:44766 Coq.MSets.MSetRBT <> n:632 var
R44768:44768 Coq.MSets.MSetRBT <> l:633 var
R44784:44787 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44773:44775 Coq.MSets.MSetRBT BalanceProps rbt ind
R44778:44778 Coq.Init.Datatypes <> S constr
R44780:44780 Coq.MSets.MSetRBT <> n:632 var
R44783:44783 Coq.MSets.MSetRBT <> r:635 var
R44796:44799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44788:44793 Coq.MSets.MSetRBT M notred def
R44795:44795 Coq.MSets.MSetRBT <> r:635 var
R44800:44802 Coq.MSets.MSetRBT BalanceProps rbt ind
R44805:44805 Coq.Init.Datatypes <> S constr
R44807:44807 Coq.MSets.MSetRBT <> n:632 var
R44811:44815 Coq.MSets.MSetRBT M lbalS def
R44817:44817 Coq.MSets.MSetRBT <> l:633 var
R44819:44819 Coq.MSets.MSetRBT <> x:634 var
R44821:44821 Coq.MSets.MSetRBT <> r:635 var
R44919:44929 Coq.MSets.MSetRBT M lbalS_match thm
R44919:44929 Coq.MSets.MSetRBT M lbalS_match thm
R44977:44984 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
R44977:44984 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
prf 45005:45013 BalanceProps lbalS_arb
binder 45015:45015 <> n:636
binder 45017:45017 <> l:637
binder 45019:45019 <> x:638
binder 45021:45021 <> r:639
R45034:45037 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45026:45029 Coq.MSets.MSetRBT BalanceProps arbt ind
R45031:45031 Coq.MSets.MSetRBT <> n:636 var
R45033:45033 Coq.MSets.MSetRBT <> l:637 var
R45049:45052 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45038:45040 Coq.MSets.MSetRBT BalanceProps rbt ind
R45043:45043 Coq.Init.Datatypes <> S constr
R45045:45045 Coq.MSets.MSetRBT <> n:636 var
R45048:45048 Coq.MSets.MSetRBT <> r:639 var
R45053:45056 Coq.MSets.MSetRBT BalanceProps arbt ind
R45059:45059 Coq.Init.Datatypes <> S constr
R45061:45061 Coq.MSets.MSetRBT <> n:636 var
R45065:45069 Coq.MSets.MSetRBT M lbalS def
R45071:45071 Coq.MSets.MSetRBT <> l:637 var
R45073:45073 Coq.MSets.MSetRBT <> x:638 var
R45075:45075 Coq.MSets.MSetRBT <> r:639 var
R45092:45102 Coq.MSets.MSetRBT M lbalS_match thm
R45092:45102 Coq.MSets.MSetRBT M lbalS_match thm
R45276:45283 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
R45286:45295 Coq.MSets.MSetRBT BalanceProps makeRed_rr thm
R45276:45283 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
R45286:45295 Coq.MSets.MSetRBT BalanceProps makeRed_rr thm
R45315:45322 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
R45315:45322 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
prf 45343:45350 BalanceProps rbalS_rb
binder 45352:45352 <> n:640
binder 45354:45354 <> l:641
binder 45356:45356 <> x:642
binder 45358:45358 <> r:643
R45374:45377 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45363:45365 Coq.MSets.MSetRBT BalanceProps rbt ind
R45368:45368 Coq.Init.Datatypes <> S constr
R45370:45370 Coq.MSets.MSetRBT <> n:640 var
R45373:45373 Coq.MSets.MSetRBT <> l:641 var
R45386:45389 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45378:45383 Coq.MSets.MSetRBT M notred def
R45385:45385 Coq.MSets.MSetRBT <> l:641 var
R45398:45401 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45390:45393 Coq.MSets.MSetRBT BalanceProps arbt ind
R45395:45395 Coq.MSets.MSetRBT <> n:640 var
R45397:45397 Coq.MSets.MSetRBT <> r:643 var
R45402:45404 Coq.MSets.MSetRBT BalanceProps rbt ind
R45407:45407 Coq.Init.Datatypes <> S constr
R45409:45409 Coq.MSets.MSetRBT <> n:640 var
R45413:45417 Coq.MSets.MSetRBT M rbalS def
R45419:45419 Coq.MSets.MSetRBT <> l:641 var
R45421:45421 Coq.MSets.MSetRBT <> x:642 var
R45423:45423 Coq.MSets.MSetRBT <> r:643 var
R45521:45531 Coq.MSets.MSetRBT M rbalS_match thm
R45521:45531 Coq.MSets.MSetRBT M rbalS_match thm
R45579:45585 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R45579:45585 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
prf 45606:45614 BalanceProps rbalS_arb
binder 45616:45616 <> n:644
binder 45618:45618 <> l:645
binder 45620:45620 <> x:646
binder 45622:45622 <> r:647
R45638:45641 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45627:45629 Coq.MSets.MSetRBT BalanceProps rbt ind
R45632:45632 Coq.Init.Datatypes <> S constr
R45634:45634 Coq.MSets.MSetRBT <> n:644 var
R45637:45637 Coq.MSets.MSetRBT <> l:645 var
R45650:45653 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45642:45645 Coq.MSets.MSetRBT BalanceProps arbt ind
R45647:45647 Coq.MSets.MSetRBT <> n:644 var
R45649:45649 Coq.MSets.MSetRBT <> r:647 var
R45654:45657 Coq.MSets.MSetRBT BalanceProps arbt ind
R45660:45660 Coq.Init.Datatypes <> S constr
R45662:45662 Coq.MSets.MSetRBT <> n:644 var
R45666:45670 Coq.MSets.MSetRBT M rbalS def
R45672:45672 Coq.MSets.MSetRBT <> l:645 var
R45674:45674 Coq.MSets.MSetRBT <> x:646 var
R45676:45676 Coq.MSets.MSetRBT <> r:647 var
R45693:45703 Coq.MSets.MSetRBT M rbalS_match thm
R45693:45703 Coq.MSets.MSetRBT M rbalS_match thm
R45877:45883 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R45886:45895 Coq.MSets.MSetRBT BalanceProps makeRed_rr thm
R45877:45883 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R45886:45895 Coq.MSets.MSetRBT BalanceProps makeRed_rr thm
R45915:45921 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R45915:45921 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
def 46107:46111 BalanceProps ifred
binder 46113:46113 <> s:648
binder 46116:46116 <> A:649
binder 46118:46118 <> B:650
R46129:46133 Coq.MSets.MSetRBT M rcase def
R46165:46165 Coq.MSets.MSetRBT <> s:648 var
R46162:46162 Coq.MSets.MSetRBT <> B:650 var
R46149:46149 Coq.MSets.MSetRBT <> A:649 var
prf 46175:46186 BalanceProps ifred_notred
binder 46188:46188 <> s:651
binder 46190:46190 <> A:652
binder 46192:46192 <> B:653
R46204:46208 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46226:46226 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46196:46201 Coq.MSets.MSetRBT M notred def
R46203:46203 Coq.MSets.MSetRBT <> s:651 var
R46220:46224 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R46209:46213 Coq.MSets.MSetRBT BalanceProps ifred def
R46215:46215 Coq.MSets.MSetRBT <> s:651 var
R46217:46217 Coq.MSets.MSetRBT <> A:652 var
R46219:46219 Coq.MSets.MSetRBT <> B:653 var
R46225:46225 Coq.MSets.MSetRBT <> B:653 var
prf 46289:46296 BalanceProps ifred_or
binder 46298:46298 <> s:654
binder 46300:46300 <> A:655
binder 46302:46302 <> B:656
R46317:46320 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46306:46310 Coq.MSets.MSetRBT BalanceProps ifred def
R46312:46312 Coq.MSets.MSetRBT <> s:654 var
R46314:46314 Coq.MSets.MSetRBT <> A:655 var
R46316:46316 Coq.MSets.MSetRBT <> B:656 var
R46322:46323 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R46321:46321 Coq.MSets.MSetRBT <> A:655 var
R46324:46324 Coq.MSets.MSetRBT <> B:656 var
prf 46387:46395 BalanceProps ins_rr_rb
binder 46397:46397 <> x:657
binder 46399:46399 <> s:658
binder 46401:46401 <> n:659
R46412:46416 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46405:46407 Coq.MSets.MSetRBT BalanceProps rbt ind
R46409:46409 Coq.MSets.MSetRBT <> n:659 var
R46411:46411 Coq.MSets.MSetRBT <> s:658 var
R46417:46421 Coq.MSets.MSetRBT BalanceProps ifred def
R46423:46423 Coq.MSets.MSetRBT <> s:658 var
R46426:46428 Coq.MSets.MSetRBT BalanceProps rrt ind
R46430:46430 Coq.MSets.MSetRBT <> n:659 var
R46433:46435 Coq.MSets.MSetRBT M ins def
R46437:46437 Coq.MSets.MSetRBT <> x:657 var
R46439:46439 Coq.MSets.MSetRBT <> s:658 var
R46444:46446 Coq.MSets.MSetRBT BalanceProps rbt ind
R46448:46448 Coq.MSets.MSetRBT <> n:659 var
R46451:46453 Coq.MSets.MSetRBT M ins def
R46455:46455 Coq.MSets.MSetRBT <> x:657 var
R46457:46457 Coq.MSets.MSetRBT <> s:658 var
R46555:46566 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46555:46566 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46555:46566 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46621:46632 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46621:46632 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46621:46632 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46655:46657 Coq.MSets.MSetRBT M ins def
R46665:46667 Coq.MSets.MSetRBT M ins def
R46665:46667 Coq.MSets.MSetRBT M ins def
R46743:46749 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R46743:46749 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R46767:46774 Coq.MSets.MSetRBT BalanceProps ifred_or thm
R46767:46774 Coq.MSets.MSetRBT BalanceProps ifred_or thm
R46805:46811 Coq.MSets.MSetRBT BalanceProps rbal_rb thm
R46805:46811 Coq.MSets.MSetRBT BalanceProps rbal_rb thm
R46829:46836 Coq.MSets.MSetRBT BalanceProps ifred_or thm
R46829:46836 Coq.MSets.MSetRBT BalanceProps ifred_or thm
prf 46869:46875 BalanceProps ins_arb
binder 46877:46877 <> x:660
binder 46879:46879 <> s:661
binder 46881:46881 <> n:662
R46892:46895 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46885:46887 Coq.MSets.MSetRBT BalanceProps rbt ind
R46889:46889 Coq.MSets.MSetRBT <> n:662 var
R46891:46891 Coq.MSets.MSetRBT <> s:661 var
R46896:46899 Coq.MSets.MSetRBT BalanceProps arbt ind
R46901:46901 Coq.MSets.MSetRBT <> n:662 var
R46904:46906 Coq.MSets.MSetRBT M ins def
R46908:46908 Coq.MSets.MSetRBT <> x:660 var
R46910:46910 Coq.MSets.MSetRBT <> s:661 var
R46939:46947 Coq.MSets.MSetRBT BalanceProps ins_rr_rb thm
R46953:46960 Coq.MSets.MSetRBT BalanceProps ifred_or thm
R46939:46947 Coq.MSets.MSetRBT BalanceProps ins_rr_rb thm
R46953:46960 Coq.MSets.MSetRBT BalanceProps ifred_or thm
inst 47004:47009 BalanceProps add_rb
binder 47011:47011 <> x:663
binder 47013:47013 <> s:664
R47022:47025 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47017:47019 Coq.MSets.MSetRBT BalanceProps Rbt class
R47021:47021 Coq.MSets.MSetRBT <> s:664 var
R47026:47028 Coq.MSets.MSetRBT BalanceProps Rbt class
R47031:47033 Coq.MSets.MSetRBT M add def
R47035:47035 Coq.MSets.MSetRBT <> x:663 var
R47037:47037 Coq.MSets.MSetRBT <> s:664 var
R47070:47072 Coq.MSets.MSetRBT M add def
R47086:47097 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R47103:47109 Coq.MSets.MSetRBT BalanceProps ins_arb thm
R47086:47097 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R47103:47109 Coq.MSets.MSetRBT BalanceProps ins_arb thm
prf 47202:47214 BalanceProps append_arb_rb
binder 47216:47216 <> n:665
binder 47218:47218 <> l:666
binder 47220:47220 <> r:667
R47231:47234 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47224:47226 Coq.MSets.MSetRBT BalanceProps rbt ind
R47228:47228 Coq.MSets.MSetRBT <> n:665 var
R47230:47230 Coq.MSets.MSetRBT <> l:666 var
R47242:47246 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47235:47237 Coq.MSets.MSetRBT BalanceProps rbt ind
R47239:47239 Coq.MSets.MSetRBT <> n:665 var
R47241:47241 Coq.MSets.MSetRBT <> r:667 var
R47247:47247 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R47267:47273 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R47316:47316 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R47248:47251 Coq.MSets.MSetRBT BalanceProps arbt ind
R47253:47253 Coq.MSets.MSetRBT <> n:665 var
R47256:47261 Coq.MSets.MSetRBT M append def
R47263:47263 Coq.MSets.MSetRBT <> l:666 var
R47265:47265 Coq.MSets.MSetRBT <> r:667 var
R47282:47285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47274:47279 Coq.MSets.MSetRBT M notred def
R47281:47281 Coq.MSets.MSetRBT <> l:666 var
R47294:47297 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47286:47291 Coq.MSets.MSetRBT M notred def
R47293:47293 Coq.MSets.MSetRBT <> r:667 var
R47298:47300 Coq.MSets.MSetRBT BalanceProps rbt ind
R47302:47302 Coq.MSets.MSetRBT <> n:665 var
R47305:47310 Coq.MSets.MSetRBT M append def
R47312:47312 Coq.MSets.MSetRBT <> l:666 var
R47314:47314 Coq.MSets.MSetRBT <> r:667 var
R47463:47477 Coq.MSets.MSetRBT M append_rr_match thm
R47463:47477 Coq.MSets.MSetRBT M append_rr_match thm
R47528:47530 Coq.MSets.MSetRBT BalanceProps rbt ind
R47535:47536 Coq.MSets.MSetRBT BalanceProps Rd abbrev
R47528:47530 Coq.MSets.MSetRBT BalanceProps rbt ind
R47535:47536 Coq.MSets.MSetRBT BalanceProps Rd abbrev
R47847:47861 Coq.MSets.MSetRBT M append_bb_match thm
R47847:47861 Coq.MSets.MSetRBT M append_bb_match thm
R47956:47963 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R47956:47963 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R47956:47963 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
prf 48024:48030 BalanceProps del_arb
prf 48090:48095 BalanceProps del_rb
binder 48032:48032 <> s:668
binder 48034:48034 <> x:669
binder 48036:48036 <> n:670
R48051:48054 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48040:48042 Coq.MSets.MSetRBT BalanceProps rbt ind
R48045:48045 Coq.Init.Datatypes <> S constr
R48047:48047 Coq.MSets.MSetRBT <> n:670 var
R48050:48050 Coq.MSets.MSetRBT <> s:668 var
R48064:48067 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48055:48061 Coq.MSets.MSetRBT M isblack def
R48063:48063 Coq.MSets.MSetRBT <> s:668 var
R48068:48071 Coq.MSets.MSetRBT BalanceProps arbt ind
R48073:48073 Coq.MSets.MSetRBT <> n:670 var
R48076:48078 Coq.MSets.MSetRBT M del def
R48080:48080 Coq.MSets.MSetRBT <> x:669 var
R48082:48082 Coq.MSets.MSetRBT <> s:668 var
binder 48097:48097 <> s:671
binder 48099:48099 <> x:672
binder 48101:48101 <> n:673
R48112:48115 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48105:48107 Coq.MSets.MSetRBT BalanceProps rbt ind
R48109:48109 Coq.MSets.MSetRBT <> n:673 var
R48111:48111 Coq.MSets.MSetRBT <> s:671 var
R48126:48129 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48116:48123 Coq.MSets.MSetRBT M notblack def
R48125:48125 Coq.MSets.MSetRBT <> s:671 var
R48130:48132 Coq.MSets.MSetRBT BalanceProps rbt ind
R48134:48134 Coq.MSets.MSetRBT <> n:673 var
R48137:48139 Coq.MSets.MSetRBT M del def
R48141:48141 Coq.MSets.MSetRBT <> x:672 var
R48143:48143 Coq.MSets.MSetRBT <> s:671 var
R48232:48244 Coq.MSets.MSetRBT BalanceProps append_arb_rb thm
R48232:48244 Coq.MSets.MSetRBT BalanceProps append_arb_rb thm
R48380:48388 Coq.MSets.MSetRBT BalanceProps lbalS_arb thm
R48380:48388 Coq.MSets.MSetRBT BalanceProps lbalS_arb thm
R48518:48526 Coq.MSets.MSetRBT BalanceProps rbalS_arb thm
R48518:48526 Coq.MSets.MSetRBT BalanceProps rbalS_arb thm
R48631:48643 Coq.MSets.MSetRBT BalanceProps append_arb_rb thm
R48631:48643 Coq.MSets.MSetRBT BalanceProps append_arb_rb thm
R48810:48817 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R48810:48817 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R48810:48817 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R48948:48955 Coq.MSets.MSetRBT BalanceProps rbalS_rb thm
R48948:48955 Coq.MSets.MSetRBT BalanceProps rbalS_rb thm
inst 48991:48999 BalanceProps remove_rb
binder 49001:49001 <> s:674
binder 49003:49003 <> x:675
R49012:49015 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49007:49009 Coq.MSets.MSetRBT BalanceProps Rbt class
R49011:49011 Coq.MSets.MSetRBT <> s:674 var
R49016:49018 Coq.MSets.MSetRBT BalanceProps Rbt class
R49021:49026 Coq.MSets.MSetRBT M remove def
R49028:49028 Coq.MSets.MSetRBT <> x:675 var
R49030:49030 Coq.MSets.MSetRBT <> s:674 var
R49063:49068 Coq.MSets.MSetRBT M remove def
R49110:49121 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R49110:49121 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R49143:49154 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R49143:49154 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R49172:49177 Coq.MSets.MSetRBT BalanceProps del_rb thm
R49172:49177 Coq.MSets.MSetRBT BalanceProps del_rb thm
R49214:49225 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R49214:49225 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R49237:49243 Coq.MSets.MSetRBT BalanceProps del_arb thm
R49237:49243 Coq.MSets.MSetRBT BalanceProps del_arb thm
def 49295:49314 BalanceProps treeify_rb_invariant
binder 49316:49319 <> size:676
binder 49321:49325 <> depth:677
R49330:49338 Coq.MSets.MSetRBT M treeify_t abbrev
binder 49328:49328 <> f:678
binder 49352:49354 <> acc:679
R49376:49381 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49362:49365 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R49358:49361 Coq.MSets.MSetRBT <> size:676 var
R49366:49371 Coq.Init.Datatypes <> length def
R49373:49375 Coq.MSets.MSetRBT <> acc:679 var
R49405:49410 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R49382:49384 Coq.MSets.MSetRBT BalanceProps rbt ind
R49386:49390 Coq.MSets.MSetRBT <> depth:677 var
R49393:49395 Coq.Init.Datatypes <> fst def
R49398:49398 Coq.MSets.MSetRBT <> f:678 var
R49400:49402 Coq.MSets.MSetRBT <> acc:679 var
R49438:49440 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49415:49417 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R49411:49414 Coq.MSets.MSetRBT <> size:676 var
R49418:49423 Coq.Init.Datatypes <> length def
R49426:49428 Coq.Init.Datatypes <> snd def
R49431:49431 Coq.MSets.MSetRBT <> f:678 var
R49433:49435 Coq.MSets.MSetRBT <> acc:679 var
R49441:49446 Coq.Init.Datatypes <> length def
R49448:49450 Coq.MSets.MSetRBT <> acc:679 var
prf 49460:49474 BalanceProps treeify_zero_rb
R49478:49497 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49503:49514 Coq.MSets.MSetRBT M treeify_zero def
prf 49564:49577 BalanceProps treeify_one_rb
R49581:49600 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49606:49616 Coq.MSets.MSetRBT M treeify_one def
prf 49682:49696 BalanceProps treeify_cont_rb
binder 49698:49698 <> f:680
binder 49700:49700 <> g:681
binder 49702:49706 <> size1:682
binder 49708:49712 <> size2:683
binder 49714:49717 <> size:684
binder 49719:49719 <> d:685
R49754:49758 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49724:49743 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49745:49749 Coq.MSets.MSetRBT <> size1:682 var
R49751:49751 Coq.MSets.MSetRBT <> d:685 var
R49753:49753 Coq.MSets.MSetRBT <> f:680 var
R49789:49793 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49759:49778 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49780:49784 Coq.MSets.MSetRBT <> size2:683 var
R49786:49786 Coq.MSets.MSetRBT <> d:685 var
R49788:49788 Coq.MSets.MSetRBT <> g:681 var
R49818:49822 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49798:49800 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49794:49797 Coq.MSets.MSetRBT <> size:684 var
R49801:49801 Coq.Init.Datatypes <> S constr
R49809:49811 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R49804:49808 Coq.MSets.MSetRBT <> size1:682 var
R49812:49816 Coq.MSets.MSetRBT <> size2:683 var
R49823:49842 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49844:49847 Coq.MSets.MSetRBT <> size:684 var
R49850:49850 Coq.Init.Datatypes <> S constr
R49852:49852 Coq.MSets.MSetRBT <> d:685 var
R49856:49867 Coq.MSets.MSetRBT M treeify_cont def
R49869:49869 Coq.MSets.MSetRBT <> f:680 var
R49871:49871 Coq.MSets.MSetRBT <> g:681 var
R49916:49927 Coq.MSets.MSetRBT M treeify_cont def
R50042:50053 Coq.Arith.PeanoNat Nat le_trans thm
R50042:50053 Coq.Arith.PeanoNat Nat le_trans thm
R50084:50097 Coq.Arith.PeanoNat Nat add_succ_r thm
R50084:50097 Coq.Arith.PeanoNat Nat add_succ_r thm
R50084:50097 Coq.Arith.PeanoNat Nat add_succ_r thm
R50106:50117 Coq.Arith.PeanoNat Nat le_add_r thm
R50106:50117 Coq.Arith.PeanoNat Nat le_add_r thm
R50194:50203 Coq.Arith.PeanoNat Nat lt_nge thm
R50194:50203 Coq.Arith.PeanoNat Nat lt_nge thm
R50236:50246 Coq.Arith.PeanoNat Nat add_0_r thm
R50236:50246 Coq.Arith.PeanoNat Nat add_0_r thm
R50236:50246 Coq.Arith.PeanoNat Nat add_0_r thm
R50256:50271 Coq.Arith.PeanoNat Nat succ_le_mono thm
R50281:50292 Coq.Arith.PeanoNat Nat le_add_r thm
R50256:50271 Coq.Arith.PeanoNat Nat succ_le_mono thm
R50281:50292 Coq.Arith.PeanoNat Nat le_add_r thm
R50439:50452 Coq.Arith.PeanoNat Nat add_succ_r thm
R50458:50473 Coq.Arith.PeanoNat Nat succ_le_mono thm
R50439:50452 Coq.Arith.PeanoNat Nat add_succ_r thm
R50439:50452 Coq.Arith.PeanoNat Nat add_succ_r thm
R50458:50473 Coq.Arith.PeanoNat Nat succ_le_mono thm
R50458:50473 Coq.Arith.PeanoNat Nat succ_le_mono thm
R50487:50503 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R50487:50503 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R50558:50571 Coq.Arith.PeanoNat Nat add_succ_r thm
R50574:50586 Coq.Arith.PeanoNat Nat add_assoc thm
R50558:50571 Coq.Arith.PeanoNat Nat add_succ_r thm
R50558:50571 Coq.Arith.PeanoNat Nat add_succ_r thm
R50574:50586 Coq.Arith.PeanoNat Nat add_assoc thm
R50574:50586 Coq.Arith.PeanoNat Nat add_assoc thm
prf 50601:50614 BalanceProps treeify_aux_rb
binder 50616:50616 <> n:686
R50621:50627 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R50629:50630 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 50628:50628 <> d:687
R50641:50644 Coq.Init.Datatypes <> bool ind
binder 50639:50639 <> b:688
R50650:50669 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R50672:50677 Coq.MSets.MSetRBT M ifpred abbrev
R50682:50691 Coq.PArith.BinPos Pos to_nat def
R50693:50693 Coq.MSets.MSetRBT <> n:686 var
R50682:50691 Coq.PArith.BinPos Pos to_nat def
R50693:50693 Coq.MSets.MSetRBT <> n:686 var
R50679:50679 Coq.MSets.MSetRBT <> b:688 var
R50697:50697 Coq.MSets.MSetRBT <> d:687 var
R50700:50710 Coq.MSets.MSetRBT M treeify_aux def
R50712:50712 Coq.MSets.MSetRBT <> b:688 var
R50714:50714 Coq.MSets.MSetRBT <> n:686 var
R50777:50777 Coq.Init.Datatypes <> S constr
R50777:50777 Coq.Init.Datatypes <> S constr
R50803:50817 Coq.MSets.MSetRBT BalanceProps treeify_cont_rb thm
R50833:50837 Coq.Init.Datatypes <> false constr
R50803:50817 Coq.MSets.MSetRBT BalanceProps treeify_cont_rb thm
R50833:50837 Coq.Init.Datatypes <> false constr
R50872:50885 Coq.PArith.Pnat Pos2Nat inj_xI thm
R50872:50885 Coq.PArith.Pnat Pos2Nat inj_xI thm
R50872:50885 Coq.PArith.Pnat Pos2Nat inj_xI thm
R50904:50917 Coq.PArith.Pnat Pos2Nat is_pos thm
R50904:50917 Coq.PArith.Pnat Pos2Nat is_pos thm
R50929:50942 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R50929:50942 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R50988:50998 Coq.Arith.PeanoNat Nat add_0_r thm
R50988:50998 Coq.Arith.PeanoNat Nat add_0_r thm
R50988:50998 Coq.Arith.PeanoNat Nat add_0_r thm
R50988:50998 Coq.Arith.PeanoNat Nat add_0_r thm
R50988:50998 Coq.Arith.PeanoNat Nat add_0_r thm
R51028:51041 Coq.Arith.PeanoNat Nat add_succ_r thm
R51044:51056 Coq.Arith.PeanoNat Nat succ_pred thm
R51028:51041 Coq.Arith.PeanoNat Nat add_succ_r thm
R51028:51041 Coq.Arith.PeanoNat Nat add_succ_r thm
R51044:51056 Coq.Arith.PeanoNat Nat succ_pred thm
R51044:51056 Coq.Arith.PeanoNat Nat succ_pred thm
R51044:51056 Coq.Arith.PeanoNat Nat succ_pred thm
R51079:51079 Coq.Init.Datatypes <> S constr
R51079:51079 Coq.Init.Datatypes <> S constr
R51105:51119 Coq.MSets.MSetRBT BalanceProps treeify_cont_rb thm
R51151:51154 Coq.Init.Datatypes <> true constr
R51105:51119 Coq.MSets.MSetRBT BalanceProps treeify_cont_rb thm
R51151:51154 Coq.Init.Datatypes <> true constr
R51173:51186 Coq.PArith.Pnat Pos2Nat inj_xO thm
R51173:51186 Coq.PArith.Pnat Pos2Nat inj_xO thm
R51173:51186 Coq.PArith.Pnat Pos2Nat inj_xO thm
R51205:51218 Coq.PArith.Pnat Pos2Nat is_pos thm
R51205:51218 Coq.PArith.Pnat Pos2Nat is_pos thm
R51230:51243 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R51230:51243 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R51265:51278 Coq.Arith.PeanoNat Nat add_succ_r thm
R51281:51293 Coq.Arith.PeanoNat Nat succ_pred thm
R51265:51278 Coq.Arith.PeanoNat Nat add_succ_r thm
R51265:51278 Coq.Arith.PeanoNat Nat add_succ_r thm
R51281:51293 Coq.Arith.PeanoNat Nat succ_pred thm
R51281:51293 Coq.Arith.PeanoNat Nat succ_pred thm
R51345:51355 Coq.Arith.PeanoNat Nat add_0_r thm
R51345:51355 Coq.Arith.PeanoNat Nat add_0_r thm
R51345:51355 Coq.Arith.PeanoNat Nat add_0_r thm
R51345:51355 Coq.Arith.PeanoNat Nat add_0_r thm
R51345:51355 Coq.Arith.PeanoNat Nat add_0_r thm
R51390:51403 Coq.Arith.PeanoNat Nat add_pred_l thm
R51390:51403 Coq.Arith.PeanoNat Nat add_pred_l thm
R51443:51457 Coq.MSets.MSetRBT BalanceProps treeify_zero_rb thm
R51467:51480 Coq.MSets.MSetRBT BalanceProps treeify_one_rb thm
R51443:51457 Coq.MSets.MSetRBT BalanceProps treeify_zero_rb thm
R51467:51480 Coq.MSets.MSetRBT BalanceProps treeify_one_rb thm
inst 51608:51617 BalanceProps treeify_rb
binder 51619:51619 <> l:689
R51623:51625 Coq.MSets.MSetRBT BalanceProps Rbt class
R51628:51634 Coq.MSets.MSetRBT M treeify def
R51636:51636 Coq.MSets.MSetRBT <> l:689 var
R51655:51661 Coq.MSets.MSetRBT M treeify def
R51675:51688 Coq.MSets.MSetRBT BalanceProps treeify_aux_rb thm
R51691:51697 Coq.MSets.MSetRBT M plength def
R51675:51688 Coq.MSets.MSetRBT BalanceProps treeify_aux_rb thm
R51691:51697 Coq.MSets.MSetRBT M plength def
R51747:51758 Coq.MSets.MSetRBT M plength_spec thm
R51747:51758 Coq.MSets.MSetRBT M plength_spec thm
R51747:51758 Coq.MSets.MSetRBT M plength_spec thm
inst 51807:51815 BalanceProps filter_rb
binder 51817:51817 <> f:690
binder 51819:51819 <> s:691
R51823:51825 Coq.MSets.MSetRBT BalanceProps Rbt class
R51828:51833 Coq.MSets.MSetRBT M filter def
R51835:51835 Coq.MSets.MSetRBT <> f:690 var
R51837:51837 Coq.MSets.MSetRBT <> s:691 var
R51856:51861 Coq.MSets.MSetRBT M filter def
inst 51898:51910 BalanceProps partition_rb1
binder 51912:51912 <> f:692
binder 51914:51914 <> s:693
R51918:51920 Coq.MSets.MSetRBT BalanceProps Rbt class
R51923:51925 Coq.Init.Datatypes <> fst def
R51928:51936 Coq.MSets.MSetRBT M partition def
R51938:51938 Coq.MSets.MSetRBT <> f:692 var
R51940:51940 Coq.MSets.MSetRBT <> s:693 var
R51960:51968 Coq.MSets.MSetRBT M partition def
R51980:51992 Coq.MSets.MSetRBT M partition_aux def
inst 52036:52048 BalanceProps partition_rb2
binder 52050:52050 <> f:694
binder 52052:52052 <> s:695
R52056:52058 Coq.MSets.MSetRBT BalanceProps Rbt class
R52061:52063 Coq.Init.Datatypes <> snd def
R52066:52074 Coq.MSets.MSetRBT M partition def
R52076:52076 Coq.MSets.MSetRBT <> f:694 var
R52078:52078 Coq.MSets.MSetRBT <> s:695 var
R52098:52106 Coq.MSets.MSetRBT M partition def
R52118:52130 Coq.MSets.MSetRBT M partition_aux def
inst 52217:52227 BalanceProps fold_add_rb
binder 52229:52230 <> s1:696
binder 52232:52233 <> s2:697
R52243:52246 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52237:52239 Coq.MSets.MSetRBT BalanceProps Rbt class
R52241:52242 Coq.MSets.MSetRBT <> s2:697 var
R52247:52249 Coq.MSets.MSetRBT BalanceProps Rbt class
R52252:52255 Coq.MSets.MSetRBT M fold def
R52264:52265 Coq.MSets.MSetRBT <> s2:697 var
R52261:52262 Coq.MSets.MSetRBT <> s1:696 var
R52257:52259 Coq.MSets.MSetRBT M add def
R52293:52301 Coq.MSets.MSetRBT M fold_spec thm
R52307:52325 Coq.Lists.List <> fold_left_rev_right thm
R52293:52301 Coq.MSets.MSetRBT M fold_spec thm
R52293:52301 Coq.MSets.MSetRBT M fold_spec thm
R52307:52325 Coq.Lists.List <> fold_left_rev_right thm
R52307:52325 Coq.Lists.List <> fold_left_rev_right thm
R52335:52337 Coq.MSets.MSetRBT M elt def
R52357:52359 Coq.Lists.List <> rev def
R52362:52369 Coq.MSets.MSetRBT M elements def
R52391:52394 Coq.Program.Basics <> flip def
R52357:52359 Coq.Lists.List <> rev def
R52362:52369 Coq.MSets.MSetRBT M elements def
inst 52436:52449 BalanceProps fold_remove_rb
binder 52451:52452 <> s1:698
binder 52454:52455 <> s2:699
R52465:52468 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52459:52461 Coq.MSets.MSetRBT BalanceProps Rbt class
R52463:52464 Coq.MSets.MSetRBT <> s2:699 var
R52469:52471 Coq.MSets.MSetRBT BalanceProps Rbt class
R52474:52477 Coq.MSets.MSetRBT M fold def
R52489:52490 Coq.MSets.MSetRBT <> s2:699 var
R52486:52487 Coq.MSets.MSetRBT <> s1:698 var
R52479:52484 Coq.MSets.MSetRBT M remove def
R52518:52526 Coq.MSets.MSetRBT M fold_spec thm
R52532:52550 Coq.Lists.List <> fold_left_rev_right thm
R52518:52526 Coq.MSets.MSetRBT M fold_spec thm
R52518:52526 Coq.MSets.MSetRBT M fold_spec thm
R52532:52550 Coq.Lists.List <> fold_left_rev_right thm
R52532:52550 Coq.Lists.List <> fold_left_rev_right thm
R52560:52562 Coq.MSets.MSetRBT M elt def
R52582:52584 Coq.Lists.List <> rev def
R52587:52594 Coq.MSets.MSetRBT M elements def
R52616:52619 Coq.Program.Basics <> flip def
R52582:52584 Coq.Lists.List <> rev def
R52587:52594 Coq.MSets.MSetRBT M elements def
prf 52648:52655 BalanceProps union_rb
binder 52657:52658 <> s1:700
binder 52660:52661 <> s2:701
R52671:52674 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52665:52667 Coq.MSets.MSetRBT BalanceProps Rbt class
R52669:52670 Coq.MSets.MSetRBT <> s1:700 var
R52681:52684 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52675:52677 Coq.MSets.MSetRBT BalanceProps Rbt class
R52679:52680 Coq.MSets.MSetRBT <> s2:701 var
R52685:52687 Coq.MSets.MSetRBT BalanceProps Rbt class
R52690:52694 Coq.MSets.MSetRBT M union def
R52696:52697 Coq.MSets.MSetRBT <> s1:700 var
R52699:52700 Coq.MSets.MSetRBT <> s2:701 var
R52727:52731 Coq.MSets.MSetRBT M union def
R52734:52745 Coq.MSets.MSetRBT M linear_union def
R52757:52770 Coq.MSets.MSetRBT M compare_height def
prf 52794:52801 BalanceProps inter_rb
binder 52803:52804 <> s1:702
binder 52806:52807 <> s2:703
R52817:52820 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52811:52813 Coq.MSets.MSetRBT BalanceProps Rbt class
R52815:52816 Coq.MSets.MSetRBT <> s1:702 var
R52827:52830 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52821:52823 Coq.MSets.MSetRBT BalanceProps Rbt class
R52825:52826 Coq.MSets.MSetRBT <> s2:703 var
R52831:52833 Coq.MSets.MSetRBT BalanceProps Rbt class
R52836:52840 Coq.MSets.MSetRBT M inter def
R52842:52843 Coq.MSets.MSetRBT <> s1:702 var
R52845:52846 Coq.MSets.MSetRBT <> s2:703 var
R52873:52877 Coq.MSets.MSetRBT M inter def
R52880:52891 Coq.MSets.MSetRBT M linear_inter def
R52903:52916 Coq.MSets.MSetRBT M compare_height def
prf 52940:52946 BalanceProps diff_rb
binder 52948:52949 <> s1:704
binder 52951:52952 <> s2:705
R52962:52965 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52956:52958 Coq.MSets.MSetRBT BalanceProps Rbt class
R52960:52961 Coq.MSets.MSetRBT <> s1:704 var
R52972:52975 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52966:52968 Coq.MSets.MSetRBT BalanceProps Rbt class
R52970:52971 Coq.MSets.MSetRBT <> s2:705 var
R52976:52978 Coq.MSets.MSetRBT BalanceProps Rbt class
R52981:52984 Coq.MSets.MSetRBT M diff def
R52986:52987 Coq.MSets.MSetRBT <> s1:704 var
R52989:52990 Coq.MSets.MSetRBT <> s2:705 var
R53017:53020 Coq.MSets.MSetRBT M diff def
R53023:53033 Coq.MSets.MSetRBT M linear_diff def
R53045:53058 Coq.MSets.MSetRBT M compare_height def
R53080:53091 Coq.MSets.MSetRBT BalanceProps <> mod
R53499:53513 Coq.MSets.MSetInterface S <> mod
R53518:53530 Coq.MSets.MSetRBT MSetRemoveMin <> mod
modtype 53476:53494 <> MSetInterface_S_Ext
R53550:53567 Coq.Structures.Orders OrderedType <> mod
R53574:53592 Coq.MSets.MSetRBT MSetInterface_S_Ext <> mod
R53611:53611 Coq.MSets.MSetRBT X <> modtype
mod 53541:53544 <> Make
mod 53622:53624 <> Make.Raw
R53635:53641 Coq.MSets.MSetRBT MakeRaw <> mod
R53643:53643 Coq.MSets.MSetRBT X <> modtype
R53650:53652 Coq.MSets.MSetRBT Make.Raw <> mod
R53664:53685 Coq.MSets.MSetInterface Raw2Sets <> modtype
R53687:53687 Coq.MSets.MSetRBT X <> modtype
R53689:53691 Coq.MSets.MSetRBT Make.Raw <> modtype
def 53707:53712 Make opt_ok
R53717:53722 Coq.Init.Datatypes <> option ind
R53728:53730 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53725:53727 Coq.MSets.MSetRBT Make elt def
R53731:53735 Coq.MSets.MSetRBT Make t def
binder 53715:53715 <> x:706
R53750:53750 Coq.MSets.MSetRBT <> x:706 var
R53757:53760 Coq.Init.Datatypes <> Some constr
R53762:53762 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53764:53764 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53766:53766 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53771:53776 Coq.MSets.MSetRBT Make Ok class
R53782:53785 Coq.Init.Datatypes <> None constr
R53790:53793 Coq.Init.Logic <> True ind
def 53813:53820 Make mk_opt_t
R53826:53831 Coq.Init.Datatypes <> option ind
R53837:53839 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53834:53836 Coq.MSets.MSetRBT Make elt def
R53840:53844 Coq.MSets.MSetRBT Make t def
binder 53823:53823 <> x:708
R53851:53856 Coq.MSets.MSetRBT Make opt_ok def
R53858:53858 Coq.MSets.MSetRBT <> x:708 var
binder 53848:53848 <> P:709
R53866:53871 Coq.Init.Datatypes <> option ind
R53877:53879 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53874:53876 Coq.MSets.MSetRBT Make elt def
R53880:53880 Coq.MSets.MSetRBT Make t def
R53893:53893 Coq.MSets.MSetRBT <> x:708 var
R53915:53918 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53907:53912 Coq.MSets.MSetRBT Make opt_ok def
R53914:53914 Coq.MSets.MSetRBT <> o:710 var
R53919:53924 Coq.Init.Datatypes <> option ind
R53930:53932 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53927:53929 Coq.MSets.MSetRBT Make elt def
R53933:53933 Coq.MSets.MSetRBT Make t def
R53944:53947 Coq.Init.Datatypes <> Some constr
R53949:53949 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53951:53951 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53954:53954 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53967:53972 Coq.MSets.MSetRBT Make Ok class
binder 53963:53963 <> P:711
R53980:53983 Coq.Init.Datatypes <> Some constr
R53985:53985 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53987:53988 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53995:53995 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53989:53991 Coq.MSets.MSetRBT Make Mkt constr
R54000:54003 Coq.Init.Datatypes <> None constr
R54017:54020 Coq.Init.Datatypes <> None constr
R54027:54027 Coq.MSets.MSetRBT <> P:709 var
def 54043:54052 Make remove_min
binder 54054:54054 <> s:712
R54058:54063 Coq.Init.Datatypes <> option ind
R54069:54071 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54066:54068 Coq.MSets.MSetRBT Make elt def
R54072:54072 Coq.MSets.MSetRBT Make t def
R54080:54087 Coq.MSets.MSetRBT Make mk_opt_t def
R54090:54103 Coq.MSets.MSetRBT Make remove_min def
R54106:54109 Coq.MSets.MSetRBT Make this proj
R54111:54111 Coq.MSets.MSetRBT <> s:712 var
R54116:54132 Coq.MSets.MSetRBT Make remove_min_ok thm
R54134:54134 Coq.MSets.MSetRBT <> s:712 var
prf 54146:54161 Make remove_min_spec1
binder 54163:54163 <> s:713
binder 54165:54165 <> x:714
binder 54167:54168 <> s':715
R54200:54206 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54186:54188 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54174:54183 Coq.MSets.MSetRBT Make remove_min def
R54185:54185 Coq.MSets.MSetRBT <> s:713 var
R54189:54192 Coq.Init.Datatypes <> Some constr
R54194:54194 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54196:54196 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54199:54199 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54195:54195 Coq.MSets.MSetRBT <> x:714 var
R54197:54198 Coq.MSets.MSetRBT <> s':715 var
R54225:54228 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R54216:54218 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54207:54213 Coq.MSets.MSetRBT Make min_elt def
R54215:54215 Coq.MSets.MSetRBT <> s:713 var
R54219:54222 Coq.Init.Datatypes <> Some constr
R54224:54224 Coq.MSets.MSetRBT <> x:714 var
R54229:54233 Coq.MSets.MSetRBT Make Equal def
R54248:54249 Coq.MSets.MSetRBT <> s':715 var
R54236:54241 Coq.MSets.MSetRBT Make remove def
R54245:54245 Coq.MSets.MSetRBT <> s:713 var
R54243:54243 Coq.MSets.MSetRBT <> x:714 var
R54291:54300 Coq.MSets.MSetRBT Make remove_min def
R54303:54310 Coq.MSets.MSetRBT Make mk_opt_t def
R54313:54319 Coq.MSets.MSetRBT Make min_elt def
R54322:54327 Coq.MSets.MSetRBT Make remove def
R54330:54334 Coq.MSets.MSetRBT Make Equal def
R54337:54338 Coq.MSets.MSetRBT Make In def
binder 54365:54365 <> x:716
binder 54367:54368 <> s':717
R54374:54393 Coq.MSets.MSetRBT Make remove_min_spec1 thm
R54397:54397 Coq.MSets.MSetRBT <> x:716 var
R54399:54400 Coq.MSets.MSetRBT <> s':717 var
binder 54365:54365 <> x:718
binder 54367:54368 <> s':719
R54374:54393 Coq.MSets.MSetRBT Make remove_min_spec1 thm
R54397:54397 Coq.MSets.MSetRBT <> x:718 var
R54399:54400 Coq.MSets.MSetRBT <> s':719 var
R54418:54434 Coq.MSets.MSetRBT Make remove_min_ok thm
R54418:54434 Coq.MSets.MSetRBT Make remove_min_ok thm
R54464:54477 Coq.MSets.MSetRBT Make remove_min def
R54464:54477 Coq.MSets.MSetRBT Make remove_min def
prf 54593:54608 Make remove_min_spec2
binder 54610:54610 <> s:720
R54633:54636 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54626:54628 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54614:54623 Coq.MSets.MSetRBT Make remove_min def
R54625:54625 Coq.MSets.MSetRBT <> s:720 var
R54629:54632 Coq.Init.Datatypes <> None constr
R54637:54641 Coq.MSets.MSetRBT Make Empty def
R54643:54643 Coq.MSets.MSetRBT <> s:720 var
R54685:54694 Coq.MSets.MSetRBT Make remove_min def
R54697:54704 Coq.MSets.MSetRBT Make mk_opt_t def
R54707:54711 Coq.MSets.MSetRBT Make Empty def
R54714:54715 Coq.MSets.MSetRBT Make In def
R54738:54757 Coq.MSets.MSetRBT Make remove_min_spec2 thm
R54738:54757 Coq.MSets.MSetRBT Make remove_min_spec2 thm
R54774:54790 Coq.MSets.MSetRBT Make remove_min_ok thm
R54774:54790 Coq.MSets.MSetRBT Make remove_min_ok thm
R54820:54833 Coq.MSets.MSetRBT Make remove_min def
R54820:54833 Coq.MSets.MSetRBT Make remove_min def
R54879:54882 Coq.MSets.MSetRBT Make <> mod
